{
  "swagger": "2.0",
  "info": {
    "title": "BaNCSServicesHEALTH"
  },
  "host": "10.18.168.160:7000",
  "basePath": "/BaNCSServicesHL/api",
  "tags": [
    {
      "name": "ba-ncs-secured-rest-controller",
      "description": "Ba NCS Secured Rest Controller"
    },
    {
      "name": "health-accounting-services",
      "description": "Health Accounting Services"
    },
    {
      "name": "health-claim-services",
      "description": "Health Claim Services"
    },
    {
      "name": "health-document-services",
      "description": "Health Document Services"
    },
    {
      "name": "health-family-policy-services",
      "description": "Health Family Policy Services"
    },
    {
      "name": "health-group-policy-services",
      "description": "Health Group Policy Services"
    },
    {
      "name": "health-image-services",
      "description": "Health Image Services"
    },
    {
      "name": "health-location-services",
      "description": "Health Location Services"
    },
    {
      "name": "health-member-services",
      "description": "Health Member Services"
    },
    {
      "name": "health-party-services",
      "description": "Health Party Services"
    },
    {
      "name": "health-policy-quotation",
      "description": "Health Quotation Services"
    },
    {
      "name": "health-policy-summary-services",
      "description": "Health Policy Summary Services"
    },
    {
      "name": "health-policypremium-services",
      "description": "Health Policy Premium Services"
    },
    {
      "name": "health-product-services",
      "description": "Health Product Services"
    },
    {
      "name": "health-security-services",
      "description": "Health Security Services"
    },
    {
      "name": "health-underwriting-services",
      "description": "Health New Business and Policy Servicing Services"
    },
    {
      "name": "scheme-services",
      "description": "Scheme Services"
    },
    {
      "name": "workflow-services",
      "description": "Workflow Services"
    }
  ],
  "paths": {
    "/HealthAccountingServices/Accounting/13.0/getAnnualBalance": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_006: This API returns the current balance for a particular account code passed as an input",
        "operationId": "getAnnualBalanceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getAnnualBalanceRequest",
            "description": "getAnnualBalanceRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAnnualBalanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAnnualBalanceResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/listForeignExchange": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_002: This API returns the list of currency codes stored in BaNCS application",
        "operationId": "listForeignExchangeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getForeignExchangeRequest",
            "description": "getForeignExchangeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListForeignExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListForeignExchangeResponseList"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/lookupAccountType": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_013: This API is used to fetch an account type from BaNCS",
        "operationId": "lookupAccountTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getLookAccountTypeRequest",
            "description": "getLookAccountTypeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LookAccountTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LookAccountTypeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/openAccTxnRuleDtls": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_014: This API is used to fetch a new accounting transaction rules in the accounting module of BaNCS",
        "operationId": "openAccTxnRuleDtlsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "openAccTxnRuleDtlsRequest",
            "description": "openAccTxnRuleDtlsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenAccTxnRuleDtlsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListTxnRuleListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/openAccountDetails": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_009: This API creates a new account in BaNCS, returns an error if the account already exists in BaNCS",
        "operationId": "openAccountDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getOpenAccDetailsRequest",
            "description": "getOpenAccDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenAccDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenAccDetailsListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/printReceipt": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_010: This API instructs BaNCS to get a receipt information in accounts module of BaNCS",
        "operationId": "printReceiptUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "printReceiptRequest",
            "description": "printReceiptRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrintReceiptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPrintReceiptResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/saveAccountDetails": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_005: This API create a new account in BaNCS based on input. Returns an error if the account already exists in BaNCS.",
        "operationId": "saveAccountDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveAccountDetailsRequest",
            "description": "saveAccountDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveAccountDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveAccountDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/saveAccountingTransaction": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_004: This API create a new accounting transaction in BaNCS",
        "operationId": "saveAccountingTransactionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveAccountingTransactionRequest",
            "description": "saveAccountingTransactionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveAccountingTransactionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveAccountingTransactionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/saveCurrParentLevelAccts": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_007: This API creates the parent child relationship between accounts. This is used after the account set up has been completed successfully in BaNCS",
        "operationId": "saveCurrParentLevelAcctsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getSaveCurrParentAccRequest",
            "description": "getSaveCurrParentAccRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCurrParentAccRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveCurrParentAccResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/saveForeignExchange": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_003: This API saves a new currency code along with exchange rate (if currency is not available in BaNCS), or creates a version (if currency is available in BaNCS).",
        "operationId": "saveForeignExchangeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getForeignExchangeRequest",
            "description": "getForeignExchangeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveForeignExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveForeignExchangeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/saveTxnRuleDetails": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_015: This API is used to save a new accounting transaction rules in the accounting module of BaNCS",
        "operationId": "saveTxnRuleDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveTxnRuleDtlsRequest",
            "description": "saveTxnRuleDtlsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveTxnRuleDtlsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResopnse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/searchAccountSetup": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_008: This API returns an indicator if the account set up is available in BaNCS or not.",
        "operationId": "searchAccountSetupUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getSearchAccountSetupRequest",
            "description": "getSearchAccountSetupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SrchAccSetupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SrchAccSetupResponseList"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/searchAccountType": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_011: This API is used to search an account type from BaNCS",
        "operationId": "searchAccountTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getSearchAccountTypeRequest",
            "description": "getSearchAccountTypeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchAccountTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchAccountTypeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/searchAccountingTransaction": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_001: This API validates if the invoice/accounting transaction is available in BaNCS or not",
        "operationId": "searchAccountingTransactionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getSearchAccTxnRequest",
            "description": "getSearchAccTxnRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchAccTxnRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchAccTxnResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthAccountingServices/Accounting/13.0/searchTxnRuleList": {
      "post": {
        "tags": [
          "health-accounting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_012: This API is returns a list of transaction rule based on pattern sent as input",
        "operationId": "searchTxnRuleListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchTxnRuleListRequest",
            "description": "searchTxnRuleListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchTxnRuleListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListTxnRuleListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/12.0.beta/getClaimEnquiryDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_312: This API is used to fetch details for a particular claim.",
        "operationId": "getClaimEnquiryDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "claimNumber",
            "in": "query",
            "description": "claimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetClaimEnquiryDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/12.0.beta/viewAppointment": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_210: This API is used to fetch details for a particular claim.",
        "operationId": "viewAppointmentUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewAppointmentResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0.beta/notifyClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_280: This API is used to notify a claim in TCS BaNCS Health Insurance application",
        "operationId": "notifyClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "notifyClaimRequest",
            "description": "notifyClaimRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotifyClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0.beta/saveClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_281: This API is used to save a claim in TCS BaNCS Health Insurance application",
        "operationId": "saveClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveClaimRequest",
            "description": "saveClaimRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/approveClaimPayment": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_116: This API is used to approve a claim payment in the TCS BaNCS Health Insurance application.",
        "operationId": "approveClaimPaymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPaymentApprovalRequest",
            "description": "claimPaymentApprovalRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPaymentApprovalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPaymentApprovalResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/cancelClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_088: This API is used to cancel a claim already existing in TCS BaNCS Health Insurance application.",
        "operationId": "cancelClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/claimEnquiry": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_210: This API is used to fetch details for a particular claim.",
        "operationId": "claimEnquiryUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "searchValue",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimEnquiryResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/claimNotification": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_214: This API is used to claim notification.",
        "operationId": "claimNotificationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objClaimNotificationRequest",
            "description": "objClaimNotificationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimNotificationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/deleteClaimParty": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_113: This API is used to soft delete claim party in the TCS BaNCS Health Insurance application.",
        "operationId": "deleteClaimPartyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPartyDeleteRequest",
            "description": "claimPartyDeleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPartyDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyDeleteResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/fetchClaimStatus": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_095: This API is used to fetch status of claim from TCS BaNCS Health insurance application.",
        "operationId": "fetchClaimStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "claimNumber",
            "in": "query",
            "description": "claimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/generateRequirementDocument": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_119: This API is used to generate requirement document in the TCS BaNCS Health Insurance application.",
        "operationId": "generateRequirementDocumentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimRequirementsGenerationRequest",
            "description": "claimRequirementsGenerationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimRequirementsGenerationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimRequirementsGenerationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimBeneficiaryList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_096: This API is used to fetch beneficiaries attached in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getClaimBeneficiaryListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPartyListRequest",
            "description": "claimPartyListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimDeathBenefitDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_127: This API is used to get the death benefit related details of a Claim.",
        "operationId": "getClaimDeathBenefitDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeathBenifitService"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimDeathRelatedInformation": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_122: This API is used to get the Death related details of a Claim.",
        "operationId": "getClaimDeathRelatedInformationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeathClaimRelatedInformation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_094: This API is used to fetch details of claim from TCS BaNCS Health insurance application.",
        "operationId": "getClaimDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimDocumentList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_099: This API is used to fetch all requirement documents attached in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getClaimDocumentListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimDocumentListRequest",
            "description": "claimDocumentListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimDocumentListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimEmergencyBenefitDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_126: This API is used to get the Emergency benefit related details of a Claim.",
        "operationId": "getClaimEmergencyBenefitDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmergencyTreatmentService"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimExpandedBenefitDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_125: This API is used to get the expanded benefit related details of a Claim.",
        "operationId": "getClaimExpandedBenefitDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpandedBenefitService"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimHospitalizationInformation": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_121: This API is used to get the hospitalization details of a Claim.",
        "operationId": "getClaimHospitalizationInformationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HospitalizationClaimInformation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimInjuryRelatedInformation": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_123: This API is used to get the Injury related details of a Claim.",
        "operationId": "getClaimInjuryRelatedInformationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InjuryClaimRelatedInformation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_109: This API is used to list all the claims available in the TCS BaNCS Health insurance application.",
        "operationId": "getClaimListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimSearchRequest",
            "description": "claimSearchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimSearchResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimNotificationDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_120: This API is used to get the list of notifications generated for a specific Claim.",
        "operationId": "getClaimNotificationDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimNotificationDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimPartyDetails": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_105: This API is used to fetch details for a party attached to a particular claim.",
        "operationId": "getClaimPartyDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objClaimPartyDetailRequest",
            "description": "objClaimPartyDetailRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPartyDetailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyDetailResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimPaymentDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_107: This API is used to fetch payment details attached to a particular claim.",
        "operationId": "getClaimPaymentDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "claimNumber",
            "in": "query",
            "description": "claimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "uniqueIdentifier",
            "in": "query",
            "description": "uniqueIdentifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPaymentDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimPaymentList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_100: This API is used to fetch all payments made in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getClaimPaymentListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPaymentListRequest",
            "description": "claimPaymentListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPaymentListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimRiskDetails": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_102: This API is used to fetch all claim risk details attached in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getClaimRiskDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimBasicInformation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimWellnessBenefitDetails": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_124: This API is used to get the wellness benefit related details of a Claim.",
        "operationId": "getClaimWellnessBenefitDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ClaimNumber",
            "in": "query",
            "description": "ClaimNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WellnessBenefitService"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getClaimsBeneficiaryDetails": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_104: This API is used to fetch details for a beneficiary attached to a particular claim.",
        "operationId": "getClaimsBeneficiaryDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objClaimPartyDetailRequest",
            "description": "objClaimPartyDetailRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPartyDetailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyDetailResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getHomecareList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_108: This API is used to fetch payment details attached to a particular claim.",
        "operationId": "getHomecareListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "homecareSearchRequest",
            "description": "homecareSearchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HomecareSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HomecareSearchResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getPreAuthStatus": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_111: This API is used to fetch preauthorization details available in TCS BaNCS Health Insurance application.",
        "operationId": "getPreAuthStatusUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "preAuthorizationStatusRequest",
            "description": "preAuthorizationStatusRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreAuthorizationStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreAuthorizationStatusResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getPreAuthorizationList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_110: This API is used to list all the pre-authorizations available in the TCS BaNCS Health insurance application.",
        "operationId": "getPreAuthorizationListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "preAuthorizationSearchRequest",
            "description": "preAuthorizationSearchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreAuthorizationSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreAuthorizationSearchResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getRequirementChaserDetails": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_106: This API is used to fetch requirement chaser attached to a particular claim.",
        "operationId": "getRequirementChaserDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chaserListRequest",
            "description": "chaserListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChaserListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChaserListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getRequirementChaserList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_103: This API is used to fetch all requirement chasers generated in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getRequirementChaserListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chaserListRequest",
            "description": "chaserListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChaserListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChaserListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getRequirementDocumentList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_101: This API is used to fetch all required documents attached in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getRequirementDocumentListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimDocumentListRequest",
            "description": "claimDocumentListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimDocumentListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getReserveList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_098: This API is used to fetch all reserve types attached in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getReserveListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimReserveListRequest",
            "description": "claimReserveListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimReserveListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/getTypeOfClaims": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_212: This API is used to fetch all type of Claims.",
        "operationId": "getTypeOfClaimsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "query",
            "description": "parameter",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "productType",
            "in": "query",
            "description": "productType",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTypeOfClaimsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/modifyClaimBeneficiary": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_115: This API is used to modify beneficiary attached to a claim in the TCS BaNCS Health Insurance application.",
        "operationId": "modifyClaimBeneficiaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPartyModifyRequest",
            "description": "claimPartyModifyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPartyModifyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyModifyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/modifyClaimant": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_112: This API is used to modify claimant information in the TCS BaNCS Health Insurance application.",
        "operationId": "modifyClaimantUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPartyModifyRequest",
            "description": "claimPartyModifyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPartyModifyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyModifyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/pendClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_092: This API is used to mark a claim in Pend status for an already existing claim in TCS BaNCS Health Insurance application.",
        "operationId": "pendClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/processClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_089: This API is used to process  a claim already existing in TCS BaNCS Health Insurance application.",
        "operationId": "processClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/rejectClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_091: This API is used to reject a claim already existing in TCS BaNCS Health Insurance application",
        "operationId": "rejectClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/rejectClaimPayment": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_117: This API is used to reject a claim payment in the TCS BaNCS Health Insurance application.",
        "operationId": "rejectClaimPaymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPaymentRejectionRequest",
            "description": "claimPaymentRejectionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPaymentRejectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPaymentRejectionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/reopenClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_090: This API is used to reopen a claim already existing in TCS BaNCS Health Insurance application.",
        "operationId": "reopenClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/saveClaimParty": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_114: This API is used to save claim party in the TCS BaNCS Health Insurance application.",
        "operationId": "saveClaimPartyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPartySaveRequest",
            "description": "claimPartySaveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimPartySaveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartySaveResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/saveDeathClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_083: This API is create a new claim with type of claim as Death in TCS BaNCS Health Insurance application.",
        "operationId": "saveClaimUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimSaveRequest",
            "description": "claimSaveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeathClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/saveDirectBillingClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_085: This API is create a new claim with type of claim as Direct Billing in TCS BaNCS Health Insurance application.",
        "operationId": "saveDirectBillingClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimSaveRequest",
            "description": "claimSaveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDirectBillingClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/saveInjuryClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_279: This API is create a new claim with type of claim as Injury in TCS BaNCS Health Insurance application.",
        "operationId": "saveInjuryClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimSaveRequest",
            "description": "claimSaveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveInjuryClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/saveReimbursementClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_086: This API is create a new claim with type of claim as Reimbursement in TCS BaNCS Health Insurance application.",
        "operationId": "saveReimbursementClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimSaveRequest",
            "description": "claimSaveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveReimbursementClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/settleClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_093: This API is used to mark a claim in Settled status for an already existing claim in TCS BaNCS Health Insurance application.",
        "operationId": "settleClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimProcessRequest",
            "description": "claimProcessRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimProcessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/updateClaim": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_087: This API is create a update information in an already existing claim in TCS BaNCS Health Insurance application.",
        "operationId": "updateClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimSaveRequest",
            "description": "claimSaveRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeathClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimProcessResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/Claims/13.0/viewReserveDetails": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_118: This API is used to fetch reserve details in the TCS BaNCS Health Insurance application.",
        "operationId": "viewReserveDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimReserveListRequest",
            "description": "claimReserveListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimReserveListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthClaimServices/secured/Claims/13.0/getClaimPartyList": {
      "post": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_097: This API is used to fetch all parties attached in a claim from TCS BaNCS Health insurance application.",
        "operationId": "getClaimPartyListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimPartyListRequest",
            "description": "claimPartyListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimItemListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimPartyListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [
              
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/HealthClaimServices/secured/Claims/13.0/viewAppointment_V13": {
      "get": {
        "tags": [
          "health-claim-services"
        ],
        "summary": "BANCS_HEALTH_BUS_276: This API is used to view appointment.",
        "operationId": "viewAppointment_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewAppointmentResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/fetchDocumentCheckList": {
      "get": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_203: This API is used to fetch the list of required document for a product.",
        "operationId": "fetchDocumentCheckListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchDocumentCheckListResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/fetchReport": {
      "get": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_156 : This API is used to fetch Policy Report.",
        "operationId": "fetchReportUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "reportType",
            "in": "query",
            "description": "reportType",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchReportResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/getDocumentList": {
      "post": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_148: This API is to be used to provide list of documents attached to a Policy.",
        "operationId": "getDocumentListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getDocumentListRequest",
            "description": "getDocumentListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDocumentListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDocumentListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/getPolicyDocumentChecklist": {
      "post": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_151: This API is to be used to get the list of mandatory documents required to issue  a specific policy.",
        "operationId": "getPolicyDocumentChecklistUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolicyDocumentChecklistRequest",
            "description": "getPolicyDocumentChecklistRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolicyDocumentChecklistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyDocumentChecklistResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/policyDocumentDownloadLink": {
      "get": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_202: This API is used to fetch Documents link for Policy.",
        "operationId": "policyDocumentDownloadLinkUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkType",
            "in": "query",
            "description": "linkType",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyNumber",
            "in": "query",
            "description": "policyNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyDocumentDownloadResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/policyReport": {
      "get": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_204: This API is used to fetch policy count and premium.",
        "operationId": "policyReportUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyReportResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthDocumentServices/Document/13.0/uploadDocument": {
      "post": {
        "tags": [
          "health-document-services"
        ],
        "summary": "BANCS_HEALTH_BUS_205: This API is used to upload documents.",
        "operationId": "uploadDocumentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "uploadDocumentRequest",
            "description": "uploadDocumentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadDocumentResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/bindFamilyPolicy": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_178: This API is used to bind a family policy",
        "operationId": "bindFamilyPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/bindIndividualPolicy": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_179: This API is used to bind an individual policy",
        "operationId": "bindIndividualPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/getFamilyPolicyAssociatedToGroup": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_135: This API lists out all the family policies which are associated to a group Policy.",
        "operationId": "getFamilyPolicyAssociatedToGroupUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getFamilyPolicyAssociatedToGroupRequest",
            "description": "getFamilyPolicyAssociatedToGroupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFamilyPolicyAssociatedToGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFamilyPolicyAssociatedToGroupResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/issueFamilyPolicy": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_182: This API is used to issue a family policy",
        "operationId": "issueFamilyPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/issueIndividualPolicy": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_183: This API is used to issue an individual policy",
        "operationId": "issueIndividualPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/searchFamilyPolicy": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_142: The API is to be used to provide list of family policies based on detailed search parameters.",
        "operationId": "searchFamilyPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchFamilyPolicyRequest",
            "description": "searchFamilyPolicyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchFamilyPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPolicyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthFamilyPolicyServices/FamilyPolicy/13.0/searchIndividualPolicy": {
      "post": {
        "tags": [
          "health-family-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_143: The API is to be used to provide list of individual policies based on detailed search parameters.",
        "operationId": "searchIndividualPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchIndvPolicyRequest",
            "description": "searchIndvPolicyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndvPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPolicyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthGroupPolicyServices/GroupPolicy/13.0/bindGroupPolicy": {
      "post": {
        "tags": [
          "health-group-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_177: This API is used to bind a group policy",
        "operationId": "bindGroupPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthGroupPolicyServices/GroupPolicy/13.0/issueAgreement": {
      "post": {
        "tags": [
          "health-group-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_180: This API is used to issue an agreement/contract",
        "operationId": "issueAgreementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthGroupPolicyServices/GroupPolicy/13.0/issueGroupPolicy": {
      "post": {
        "tags": [
          "health-group-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_181: This API is used to issue a group policy",
        "operationId": "issueGroupPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthGroupPolicyServices/GroupPolicy/13.0/searchGroupPolicy": {
      "post": {
        "tags": [
          "health-group-policy-services"
        ],
        "summary": "BANCS_HEALTH_BUS_141: The API is to be used to provide list of group policies based on detailed search parameters.",
        "operationId": "searchGroupPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchGroupPolicyRequest",
            "description": "searchGroupPolicyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchGroupPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPolicyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthImageServices/Image/13.0/getPartyPhoto": {
      "post": {
        "tags": [
          "health-image-services"
        ],
        "summary": "BANCS_HEALTH_BUS_208: This API is used to fetch image for Party.",
        "operationId": "getPartyPhotoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPartyPhotoRequest",
            "description": "getPartyPhotoRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPartyPhotoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPartyPhotoResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthImageServices/secured/Image/13.0/uploadImage_V13": {
      "post": {
        "tags": [
          "health-image-services"
        ],
        "summary": "BANCS_HEALTH_BUS_207: This API is used to upload image for party.",
        "operationId": "uploadImage_V13UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "uploadImageRequest",
            "description": "uploadImageRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadImageRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadImageResponse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthLocationServices/Location/13.0/getVBZipCode": {
      "get": {
        "tags": [
          "health-location-services"
        ],
        "summary": "BANCS_HEALTH_BUS_211: This API is used to fetch Zip Details.",
        "operationId": "getVBZipCodeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "zipCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetVBZipCodeResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthLocationServices/Location/13.0/searchCityLocation": {
      "post": {
        "tags": [
          "health-location-services"
        ],
        "summary": "BANCS_HEALTH_BUS_070: This API is used to perform city search within information stored in TCS BaNCS Health Insurance application.",
        "operationId": "searchCityLocationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchCityLocationRequest",
            "description": "searchCityLocationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchCityLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchCityLocationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthLocationServices/Location/13.0/searchCountryLocation": {
      "post": {
        "tags": [
          "health-location-services"
        ],
        "summary": "BANCS_HEALTH_BUS_071: This API is used to perform country search within information stored in TCS BaNCS Health Insurance application.",
        "operationId": "searchCountryLocationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchCountryLocationRequest",
            "description": "searchCountryLocationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchCountryLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchCountryLocationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthLocationServices/Location/13.0/searchStateLocation": {
      "post": {
        "tags": [
          "health-location-services"
        ],
        "summary": "BANCS_HEALTH_BUS_072: This API is used to perform state search within information stored in TCS BaNCS Health Insurance application.",
        "operationId": "searchStateLocationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchStateLocationRequest",
            "description": "searchStateLocationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchStateLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchStateLocationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthLocationServices/Location/13.0/searchZipCode": {
      "get": {
        "tags": [
          "health-location-services"
        ],
        "summary": "BANCS_HEALTH_BUS_209: This API is used to fetch details according to zip code.",
        "operationId": "searchZipCodeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "zipCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchZipCodeResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/deleteRisk": {
      "post": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_218: This API is used to delete risks of a particular policy.",
        "operationId": "deleteRiskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRiskRequest",
            "description": "deleteRiskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRiskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResopnse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/fetchInsuredType": {
      "get": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_215: This API is used to fetch insured Type.",
        "operationId": "fetchInsuredTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plan",
            "in": "query",
            "description": "plan",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchInsuredTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/getAllMemberDetails": {
      "get": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_216: This API is used to fetch all member Details.",
        "operationId": "getAllMemberDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNo",
            "in": "query",
            "description": "policyNo",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAllMemberDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/getMemberDetails": {
      "post": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_154: This API is used to get the member details for a specific input of policy number and risk serial number",
        "operationId": "getMemberDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getMemberDetailsRequest",
            "description": "getMemberDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMemberDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetMemberDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/getPlanDetailsForMembers": {
      "post": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_152: This API provide the plan details applicable for member depending on member information",
        "operationId": "getPlanDetailsForMembersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPlanDetailsForMembersRequest",
            "description": "getPlanDetailsForMembersRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPlanDetailsForMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPlanDetailsForMembersResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/getPolicyMemberCategoryAndPlan": {
      "post": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_147: This API returns the plan as well as the category associated for a particular member in a group policy",
        "operationId": "getPolicyMemberCategoryAndPlanUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolicyMemberCategoryAndPlanRequest",
            "description": "getPolicyMemberCategoryAndPlanRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolicyMemberCategoryAndPlanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyMemberCategoryAndPlanResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/getPolicyMemberList": {
      "post": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_146: This API returns a the list of member associated to a particular health policy",
        "operationId": "getPolicyMemberListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolicyMemberListRequest",
            "description": "getPolicyMemberListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolicyMemberListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyMemberListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthMemberServices/Member/13.0/refreshMemberInfoInPolicy": {
      "post": {
        "tags": [
          "health-member-services"
        ],
        "summary": "BANCS_HEALTH_BUS_158: This API is used to refresh member information in policy",
        "operationId": "policyRiskLevelEndorsementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyRiskEndorsementRequest",
            "description": "policyRiskEndorsementRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyRiskEndorsementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyRiskEndorsementResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/BaNCSPortalDashBoard001": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_246 : This API is used for Dashboard for portal.",
        "operationId": "BaNCSPortalDashBoard001UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolCustRequest",
            "description": "getPolCustRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolCustRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolCustResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/downloadFormWording": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_199: This API is used to fetch forms and wordings",
        "operationId": "downloadFormWordingUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkType",
            "in": "query",
            "description": "linkType",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DownloadFormWordingResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchAgentProfile": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_248: This API is used to fetch Agent Details.",
        "operationId": "fetchAgentProfileUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchAgentProfileResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchBenefitandRiderDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_212: This API is used to get Benefit and rider",
        "operationId": "fetchBenefitandRiderDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plan",
            "in": "query",
            "description": "plan",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchBenefitandRiderDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchClaimReport": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_269: This API is used to fetch claim Report",
        "operationId": "fetchClaimReportUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchClaimReportResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchCommissionReport": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_280: This API is used to fetch Commission Report.",
        "operationId": "fetchCommissionReportUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchCommissionReportResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchCommissionStatement": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_195: This API is used to fetch Commission Statement",
        "operationId": "fetchCommissionStatementUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchCommissionStatementResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchCustomerDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_214: This API is used to fetch Customer details.",
        "operationId": "fetchCustomerDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchCustomerDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchPolicyDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_007: This API is used to fetch policy details",
        "operationId": "fetchPolicyDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPolicyDetailsRequest",
            "description": "fetchPolicyDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPolicyDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPolicyDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchProductDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_197: This API is used to fetch product names",
        "operationId": "fetchProductDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apiService",
            "in": "query",
            "description": "apiService",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineOfBusiness",
            "in": "query",
            "description": "lineOfBusiness",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchProductDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchProductDetailsAll": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_198: This API is used to fetch product names with All",
        "operationId": "fetchProductDetailsAllUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apiService",
            "in": "query",
            "description": "apiService",
            "required": false,
            "type": "string"
          },
          {
            "name": "lineOfBusiness",
            "in": "query",
            "description": "lineOfBusiness",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchProductDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchRenewedPolicyDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_35: This API is used to fetch renewed policy details",
        "operationId": "fetchRenewedPolicyDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "description": "policyNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchRenewedPolicyDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/fetchWorkList": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_247: This API is used to fetch WorkList Details.",
        "operationId": "fetchWorkListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "priority",
            "in": "query",
            "description": "priority",
            "required": false,
            "type": "string"
          },
          {
            "name": "referenceType",
            "in": "query",
            "description": "referenceType",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskType",
            "in": "query",
            "description": "taskType",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetWorklistResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/getInsuredDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_211: This API is used to fetch insured details",
        "operationId": "getInsuredDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNo",
            "in": "query",
            "description": "policyNo",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetInsuredDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/getPolHolBirthdayList": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_244 : This API is used to get Policy Holder Birthday List in next 7 days.",
        "operationId": "getPolHolBirthdayListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolHolBirthdayListRequest",
            "description": "getPolHolBirthdayListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolHolBirthdayListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolHolBirthdayListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/getPolicyRenewalDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_216: This API is used to fetch policy renewal details",
        "operationId": "getPolicyRenewalDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyRenewalDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/parameterizedPolicySearch": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "Search with Policy Number,Customer Name",
        "operationId": "parameterizedPolicySearchUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getParameterizedPolicySearchRequest",
            "description": "getParameterizedPolicySearchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParameterizedPolicySearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ParameterizedPolicySearchResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/populatePremiumCalcPage": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "populatePremiumCalcPage",
        "operationId": "populatePremiumCalcPageUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumCalcParamResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/populatePremiumCalcValue": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "populatePremiumCalcValue",
        "operationId": "populatePremiumCalcValueUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameterCode",
            "in": "query",
            "description": "parameterCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumCalcParamResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/premiumCalculator": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_217: This API is used to calculate premium",
        "operationId": "premiumCalculatorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "premiumCalculatorRequest",
            "description": "premiumCalculatorRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremiumCalculatorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumCalculatorResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/renewalPolicyList": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_243 : This API is to be used to get renewal policy list.",
        "operationId": "renewalPolicyListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getRenewalPolicyListRequest",
            "description": "getRenewalPolicyListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewalPolicyListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RenewalPolicyListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/savePaymentInfo": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_263: This API is used to save payment informations",
        "operationId": "savePaymentInfoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "savePaymentInfoRequest",
            "description": "savePaymentInfoRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SavePaymentInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResopnse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/searchCustomer": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_213: This API is used to search Customer",
        "operationId": "searchCustomerUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "usercode",
            "in": "query",
            "description": "usercode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchCustomerResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/showProductSummary": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_200: This API is used to fetch product specs",
        "operationId": "showProductSummaryUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productName",
            "in": "query",
            "description": "productName",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowProductSummaryResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/12.0.beta/uploadImage": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_217: This API is used to upload image for party",
        "operationId": "uploadImageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "uploadImageRequest",
            "description": "uploadImageRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadImageResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/agreementQQConvertToDQ": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_186: This API is used to convert an agreement/contract quick quote to detailed quote",
        "operationId": "agreementQQConvertToDQUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/approveAgreementQQ": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_184: This API is used to approve an agreement/contract quick quote",
        "operationId": "approveAgreementQQUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/approveRefer": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_188: This API is used to approve a policy referral",
        "operationId": "approveReferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/baNCSPortalDashBoardTPA": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_254: This API is used to fetch Policy and Policy Holder Details.",
        "operationId": "baNCSPortalDashBoardTPAUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolCustRequest",
            "description": "getPolCustRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolCustRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolCustResponseForTPA"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/bindAgreement": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_176: This API is used to bind an agreement/contract",
        "operationId": "bindAgreementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/clonePolicy": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_130: The API is to be used to clone an existing policy into a new policy keeping details same.",
        "operationId": "clonePolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clonePolicyRequest",
            "description": "clonePolicyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClonePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClonePolicyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/cloneScheme": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_262: This API is used to clone Scheme data.",
        "operationId": "cloneSchemeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objCloneSchemeRequest",
            "description": "objCloneSchemeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneSchemeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloneSchemeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/createProposal": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_255: This API is used to create proposal.",
        "operationId": "createProposalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objCreateProposalRequest",
            "description": "objCreateProposalRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateProposalResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/createTask": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_267: This API is to be used to create a task item for an user.",
        "operationId": "createTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createTaskRequest",
            "description": "createTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/declineProposal": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_174: This API performs the decline proposal action",
        "operationId": "declineProposalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/declineRefer": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_189: This API is used to decline a policy referral",
        "operationId": "declineReferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/deletePolicyAgent": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_166: This API is used to soft delete particular agent and it's details from a policy",
        "operationId": "deletePolicyAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveDeleteAgentPolicyPartyRequest",
            "description": "saveDeleteAgentPolicyPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeleteAgentPolicyPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveDeleteAgentPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/deletePolicyBeneficiary": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_140: This API is used to soft delete particular beneficiary and it's details from a policy.",
        "operationId": "deletePolicyBeneficiaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveDeleteBeneficiaryPolicyPartyRequest",
            "description": "saveDeleteBeneficiaryPolicyPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeleteBeneficiaryPolicyPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveDeleteBeneficiaryPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/deletePolicyBroker": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_165: This API is used to soft delete particular broker and it's details from a policy",
        "operationId": "deletePolicyBrokerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveDeleteBrokerPolicyPartyRequest",
            "description": "saveDeleteBrokerPolicyPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeleteBrokerPolicyPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveDeleteBrokerPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/discardProposal": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_175: This API performs the discard proposal action",
        "operationId": "discardProposalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/existingPolicyDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_257: This API is used to save previous policy details",
        "operationId": "existingPolicyDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "existingPolicyDetailsRequest",
            "description": "existingPolicyDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExistingPolDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExistingPolDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchAgentDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_162: This API is used to fetch agent details attached to a specific policy in TCS BaNCS Health Insurance application",
        "operationId": "fetchAgentDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchAgentDetailsRequest",
            "description": "fetchAgentDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchAgentDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchAgentDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchBeneficiaryDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_138: This API is used to fetch beneficiary details like beneficiary percentage for a particular policy and a particular beneficiary.",
        "operationId": "fetchBeneficiaryDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchBeneficiaryDetailsRequest",
            "description": "fetchBeneficiaryDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchBeneficiaryDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchBeneficiaryDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchBrokerDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_163: This API is used to fetch broker  details attached to a specific policy in TCS BaNCS Health Insurance application",
        "operationId": "fetchBrokerDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchBrokerDetailsRequest",
            "description": "fetchBrokerDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchBrokerDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchBrokerDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchEmployeeBillingInfo": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_274: This API is used to fetch billing information of employee",
        "operationId": "fetchEmployeeBillingInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "strSchemeNo",
            "in": "query",
            "description": "strSchemeNo",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "description": "transactionCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchEmployeeBillingResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchEmployerDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_275: This API is used to fetch Employer details.",
        "operationId": "fetchEmployerDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "schemeNo",
            "in": "query",
            "description": "schemeNo",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchEmployerDetailsListResopnse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchPolicyHolderDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_150: This API is to be used to get Policyholder details for a Policy.",
        "operationId": "fetchPolicyHolderDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPolicyHolderDetailsRequest",
            "description": "fetchPolicyHolderDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPolicyHolderDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPolicyHolderDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/fetchSMTPInfo": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_266: This API is used to fetch SMTP Information.",
        "operationId": "fetchSMTPInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commRefId",
            "in": "query",
            "description": "commRefId",
            "required": false,
            "type": "string"
          },
          {
            "name": "communicationId",
            "in": "query",
            "description": "communicationId",
            "required": false,
            "type": "string"
          },
          {
            "name": "communicationType",
            "in": "query",
            "description": "communicationType",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "smtpRefKey",
            "in": "query",
            "description": "smtpRefKey",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchSMTPResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getBenefitList": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_145: The API is to be used to provide list of active cover/benefit for a Policy",
        "operationId": "getBenefitListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getBenefitListRequest",
            "description": "getBenefitListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetBenefitListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBenefitListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getCategoryDetails": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_260: This API is used to fetch category details.",
        "operationId": "getCategoryDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "schemeNo",
            "in": "query",
            "description": "schemeNo",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "description": "transactionCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployeeClassificationFetch"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getCustomersThroughLink": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_270: This API is used to fetch all Customer.",
        "operationId": "getCustomersThroughLinkUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetCustomersThroughLinkResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getFollowUp": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_144: The API is to be used to provide list of transactions executed on the Policy.",
        "operationId": "getFollowUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getFollowUpRequest",
            "description": "getFollowUpRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFollowUpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFollowUpResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getMemberPlanCoverList": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_263: This API is to be used to get Member Plan CoverList.",
        "operationId": "getMemberPlanCoverListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getMemberPlanCoverListRequest",
            "description": "getMemberPlanCoverListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMemberPlanCoverListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetMemberPlanCoverListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getPoliciesThroughLink": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_269: This API is used to fetch SMTP Information.",
        "operationId": "getPoliciesThroughLinkUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lineOfBusiness",
            "in": "query",
            "description": "lineOfBusiness",
            "required": false,
            "type": "string"
          },
          {
            "name": "policyStatus",
            "in": "query",
            "description": "policyStatus",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPoliciesThroughLinkResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getPolicyEndorsementlist": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_149: This API is to be used to provide list of all endorsements done for a Policy.",
        "operationId": "getPolicyEndorsementlistUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolicyEndorsementlistRequest",
            "description": "getPolicyEndorsementlistRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolicyEndorsementlistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyEndorsementlistResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getPolicyMemberList": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_146: This API returns a the list of member associated to a particular health policy",
        "operationId": "getPolicyMemberListUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getPolicyMemberListRequest",
            "description": "getPolicyMemberListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPolicyMemberListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyMemberListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getQuesionnaire": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_256: This API is used to fetch questionnaire.",
        "operationId": "getQuesionnaireUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventCode",
            "in": "query",
            "description": "eventCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "query",
            "description": "gender",
            "required": false,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalNumber",
            "in": "query",
            "description": "proposalNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "riskId",
            "in": "query",
            "description": "riskId",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetQuesionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/getRelationshipList": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_137: This API is used to list out all parties attached to a policy along with their relationship.",
        "operationId": "getRelationshipListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getrelationshipListRequest",
            "description": "getrelationshipListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetRelationshipRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRelationshipResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/issuePolicy": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_264: This API is used to issues the Proposal.",
        "operationId": "issuePolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/manualRefer": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_187: This API is used to refer a policy to a higher role",
        "operationId": "manualReferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/referBack": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_190: This API is used to refer back a policy referral to the sender",
        "operationId": "referBackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/rejectAgreementQQ": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_185: This API is used to reject an agreement/contract quick quote",
        "operationId": "rejectAgreementQQUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/rejectProposal": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_173: This API performs the reject proposal action",
        "operationId": "rejectProposalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/saveAndEditSMTPInfo": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_265: This API creates or updates SMTP Information.",
        "operationId": "saveAndEditSMTPInfoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objSaveAndEditSMTPRequest",
            "description": "objSaveAndEditSMTPRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveAndEditSMTPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveAndEditSMTPResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/saveEmployeeBillingInfo": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_273: This API is used to save employee billing information",
        "operationId": "saveEmployeeBillingInfoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveEmployeeBillingInfoRequest",
            "description": "saveEmployeeBillingInfoRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveEmployeeBillingInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveEmployeeBillingInfoResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/saveEmployeeClassification": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_272: This API is used to save employee classification",
        "operationId": "saveEmployeeClassificationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveEmployeeClassificationRequest",
            "description": "saveEmployeeClassificationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveEmployeeClassificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveEmployeeClassificationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/saveEmployerDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_261: This API is used to save employer details.",
        "operationId": "saveEmployerDetailsUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "savePaymentInfoRequest",
            "description": "savePaymentInfoRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SavePaymentInfoRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResopnse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/saveNomineeDetails": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_258: This API is used to save nominee details.",
        "operationId": "saveNomineeDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "existingPolicyDetailsRequest",
            "description": "existingPolicyDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExistingPolDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExistingPolDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/savePolicyAgent": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_164: This API is used to save an Agent and its associated details at the policy level",
        "operationId": "savePolicyAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveDeleteAgentPolicyPartyRequest",
            "description": "saveDeleteAgentPolicyPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeleteAgentPolicyPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveDeleteAgentPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/savePolicyBeneficiary": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_139: This API is used to save a Beneficiary and its associated details at the policy level.",
        "operationId": "savePolicyBeneficiaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveDeleteBeneficiaryPolicyPartyRequest",
            "description": "saveDeleteBeneficiaryPolicyPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeleteBeneficiaryPolicyPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveDeleteBeneficiaryPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/savePolicyBroker": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_167: This API is used to save a Broker and its associated details at the policy level",
        "operationId": "savePolicyBrokerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveDeleteBrokerPolicyPartyRequest",
            "description": "saveDeleteBrokerPolicyPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDeleteBrokerPolicyPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveDeleteBrokerPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/NewBusiness/13.0/saveQuesionnaire": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_259: This API is used to save questionnaire.",
        "operationId": "saveQuesionnaireUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveQuestionnaireRequest",
            "description": "saveQuestionnaireRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveQuestionnaireRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveQuestionnaireResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/fetchClaimReport_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_268: This API is used to fetch claim Report",
        "operationId": "fetchClaimReport_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchClaimReportResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/fetchCommissionReport_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_271: This API is used to fetch Commission Report.",
        "operationId": "fetchCommissionReport_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchCommissionReportResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/fetchCommissionStatement_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_249: This API is used to fetch Commission Statement.",
        "operationId": "fetchCommissionStatement_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchCommissionStatementResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/fetchCustomerDetails_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_251: This API is used to fetch Customer details.",
        "operationId": "fetchCustomerDetails_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchCustomerDetailsResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/fetchRenewedPolicyDetails_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_253: This API is used to fetch renewed policy details.",
        "operationId": "fetchRenewedPolicyDetails_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "description": "policyNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchRenewedPolicyDetailsResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/getPolicyRenewalDetails_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_252: This API is used to fetch policy renewal details.",
        "operationId": "getPolicyRenewalDetails_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyRenewalDetailsResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/parameterizedPolicySearch_V13": {
      "post": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_242: This API is to be used to Search with Policy Number,Customer Name.",
        "operationId": "parameterizedPolicySearch_V13UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getParameterizedPolicySearchRequest",
            "description": "getParameterizedPolicySearchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParameterizedPolicySearchRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ParameterizedPolicySearchResponse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthNBAndPOSServices/secured/NewBusiness/13.0/searchCustomer_V13": {
      "get": {
        "tags": [
          "health-underwriting-services"
        ],
        "summary": "BANCS_HEALTH_BUS_250: This API is used to search Customer.",
        "operationId": "searchCustomer_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "product",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "usercode",
            "in": "query",
            "description": "usercode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchCustomerResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/12.0.beta/createAppointment": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_084: This API is used to book an appointment.",
        "operationId": "createAppointmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createAppointmentRequest",
            "description": "createAppointmentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppointmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletePartyContactResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/12.0.beta/fetchClaimList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_074: This API is used to list all claims associated with a Party already available in TCS BaNCS Health insurance application.",
        "operationId": "fetchClaimListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchClaimRequest",
            "description": "fetchClaimRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchClaimRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchClaimResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/12.0.beta/fetchPolicyList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_076: This API is used to list all policies associated with a Party already available in TCS BaNCS Health insurance application.",
        "operationId": "fetchPolicyListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPolicyRequest",
            "description": "fetchPolicyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPolicyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/12.0.beta/locateParty": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_89: This API is used to locate party",
        "operationId": "locatePartyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "city",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchFlag",
            "in": "query",
            "description": "searchFlag",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "searchValue",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "zipCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocatePartyResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/attachSpecialitywithClinician": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_069: This API is used to attach a speciality to a clinician.",
        "operationId": "attachSpecialitywithClinicianUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "linkRelatedPartyRequest",
            "description": "linkRelatedPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkRelatedPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkRelatedPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/attachStakeToParty": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_081: This API is used to attach a new stake to a party existing in TCS BaNCS Health insurance application.",
        "operationId": "attachStakeToPartyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "attachStatkeToPartyRequest",
            "description": "attachStatkeToPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachStakeToPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachStakeToPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createAgent": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_024: This API is used to create agent in TCS BaNCS Health insurance platform for further use in policy.",
        "operationId": "createAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createAgentRequest",
            "description": "createAgentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateAgentResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createBank": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_019: This API is used to create a Bank in TCS BaNCS Health insurance platform for further use in policy creation.",
        "operationId": "createBankUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createBankRequest",
            "description": "createBankRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBankRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateBankResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createBeneficiary": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_018: This API is used to create an beneficiary in TCS BaNCS Health insurance platform for further use in policy creation.",
        "operationId": "createBeneficiaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createBeneficiaryRequest",
            "description": "createBeneficiaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBeneficiaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateBeneficiaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createBroker": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_025: This API is used to create broker in TCS BaNCS Health insurance platform for further use in policy.",
        "operationId": "createBrokerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createBrokerRequest",
            "description": "createBrokerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBrokerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateBrokerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createClaimant": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_023: This API is used to create claimant in TCS BaNCS Health insurance platform for further use in claims.",
        "operationId": "createClaimantUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createClaimantRequest",
            "description": "createClaimantRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateClaimantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateClaimantResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createClinician": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_022: This API is used to create clinician in TCS BaNCS Health insurance platform for further use in claims.",
        "operationId": "createClinicianUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createClinicianRequest",
            "description": "createClinicianRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateClinicianRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateClinicianResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createEmployee": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_028: This API is used to create employee in TCS BaNCS Health insurance platform for further use in family policy.",
        "operationId": "createEmployeeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createEmployeeRequest",
            "description": "createEmployeeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEmployeeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEmployeeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createEmployer": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_027: This API is used to create employer in TCS BaNCS Health insurance platform for further use in group policy.",
        "operationId": "createEmployerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createEmployerRequest",
            "description": "createEmployerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEmployerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEmployerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createEmployerEIS": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_099: This API is used to create an Employer",
        "operationId": "createEmployerEISUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objEmployerCreationRequest",
            "description": "objEmployerCreationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployerCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmployerCreationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createMember": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_017: This API is used to create an insured member in TCS BaNCS Health insurance platform for further use in policy creation.",
        "operationId": "createMemberUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createMemberRequest",
            "description": "createMemberRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateMemberResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createNetwork": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_020: This API is used to create Network in TCS BaNCS Health insurance platform for further use in claims",
        "operationId": "createNetworkUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createNetworkRequest",
            "description": "createNetworkRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNetworkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateNetworkResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createPartyContact": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_080: This API is used to create contact details of a party stored in TCS BaNCS Health insurance application.",
        "operationId": "createPartyContactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createPartyContactRequest",
            "description": "createPartyContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePartyContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePartyContactResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createPayor": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_026: This API is used to create payor in TCS BaNCS Health insurance platform for further use in claims.",
        "operationId": "createPayorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createPayorRequest",
            "description": "createPayorRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePayorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePayorResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createPolicyHolder": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_016: This API is used to create a Proposer/ Policy Holder in TCS BaNCS Health insurance platform for further use in quotation/application.",
        "operationId": "createPolicyHolderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createPartyRequest",
            "description": "createPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/createProvider": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_021: This API is used to create provider in TCS BaNCS Health insurance platform for further use in claims",
        "operationId": "createProviderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createProviderRequest",
            "description": "createProviderRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateProviderResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/deactivateParty": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_068: This API is used to deactivate a party, the part will be soft deleted in BaNCS and status will be changed.",
        "operationId": "deactivatePartyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deactivatePartyRequest",
            "description": "deactivatePartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeactivatePartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeactivatePartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/deletePartyContact": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_079: This API is used to delete contact details of a party stored in TCS BaNCS Health insurance application.",
        "operationId": "deletePartyContactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deletePartyContactRequest",
            "description": "deletePartyContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeletePartyContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletePartyContactResponse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchAgent": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_063: This API is used to get details of a specific existing Agent available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchAgentUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchAgentResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchBank": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_058: This API is used  to get details of a specific existing Bank available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchBankUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchBankResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchBeneficiary": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_057: This API is used to get details of a specific existing Beneficiary available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchBeneficiaryUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchBeneficiaryResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchBroker": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_064: This API is used to get details of a specific existing Broker available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchBrokerUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchBrokerResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchClaimant": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_062: This API is used to get details of a specific existing Claimant available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchClaimantUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchClaimantResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchClinician": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_061: This API is used to get details of a specific existing Clinician available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchClinicianUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchClinicianResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchEmployee": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_067: This API is used to get details of a specific existing Employee available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchEmployeeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchEmployeeResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchEmployer": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_066: This API is used to get details of a specific existing Employer available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchEmployerUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchEmployerResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchMember": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_056: This API is used to get details of a specific existing Member available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchMemberUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchMemberResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchNetwork": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_059: This API is used to get details of a specific existing Network available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchNetworkUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchNetworkResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchPayor": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_065: This API is used to get details of a specific existing Payor available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchPayorUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPayorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchPolicyHolder": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_055: This API is used to get details of a specific existing proposer/ Policy Holder available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchPolicyHolderUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPolicyHolderResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchProvider": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_060: This API is used to get details of a specific existing Provider available to TCS BaNCS Health insurance platform.",
        "operationId": "fetchProviderUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "partyCode",
            "in": "query",
            "description": "partyCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchProviderResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/fetchStakeList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_075: This API is used to list all stakes associated with a Party already available in TCS BaNCS Health insurance application.",
        "operationId": "fetchStakeListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchStakeRequest",
            "description": "fetchStakeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchStakeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchStakeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/linkRelatedParty": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_073: This API is used to link two parties already available within TCS BaNCS Health insurance application.",
        "operationId": "linkRelatedPartyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "linkRelatedPartyRequest",
            "description": "linkRelatedPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkRelatedPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkRelatedPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/modifyAgent": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_157: This API is used to perform agent modification endorsement for family policy.",
        "operationId": "ModifyAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objModifyAgentRequest",
            "description": "objModifyAgentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/modifyBeneficiary": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_155: This API is used to perform beneficiary modification endorsement for family policy.",
        "operationId": "ModifyBeneficiaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objModifyBeneficiaryRequest",
            "description": "objModifyBeneficiaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyBeneficiaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyPolicyPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/saveEmployerDetails": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_219: This API is used to save employer details.",
        "operationId": "saveEmployerDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveEmployerDetailsRequest",
            "description": "saveEmployerDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveEmployerDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveEmployerDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchAgentList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_050: This API is used to search existing agent available to TCS BaNCS Health insurance platform.",
        "operationId": "searchAgentListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchAgentRequest",
            "description": "searchAgentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchAgentResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchBankList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_045: This API is used to search existing bank available to TCS BaNCS Health insurance platform.",
        "operationId": "searchBankListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchBankRequest",
            "description": "searchBankRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchBankRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchBankResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchBeneficiaryList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_044: This API is used to search existing beneficiary available to TCS BaNCS Health insurance platform.",
        "operationId": "searchBeneficiaryListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchBeneficiaryRequest",
            "description": "searchBeneficiaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchBeneficiaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchBeneficiaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchBrokerList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_051: This API is used to search existing broker available to TCS BaNCS Health insurance platform.",
        "operationId": "searchBrokerListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchBrokerRequest",
            "description": "searchBrokerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchBrokerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchBrokerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchClaimantList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_049: This API is used to search existing claimant available to TCS BaNCS Health insurance platform.",
        "operationId": "searchClaimantListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchClaimantRequest",
            "description": "searchClaimantRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchClaimantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchClaimantResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchClinicianList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_048: This API is used to search existing clinician available to TCS BaNCS Health insurance platform.",
        "operationId": "searchClinicianListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchClinicianRequest",
            "description": "searchClinicianRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchClinicianRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchClinicianResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchEmployeeList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_054: This API is used to search existing employee available to TCS BaNCS Health insurance platform.",
        "operationId": "searchEmployeeListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchEmployeeRequest",
            "description": "searchEmployeeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchEmployeeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchEmployeeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchEmployerList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_053: This API is used to search existing employer available to TCS BaNCS Health insurance platform.",
        "operationId": "searchEmployerListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchEmployerRequest",
            "description": "searchEmployerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchEmployerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchEmployerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchMemberList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_043: This API is used to search existing member available to TCS BaNCS Health insurance platform.",
        "operationId": "searchMemberListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchMemberRequest",
            "description": "searchMemberRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchMemberResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchNetworkList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_046: This API is used to search existing network available to TCS BaNCS Health insurance platform.",
        "operationId": "searchNetworkListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchNetworkRequest",
            "description": "searchNetworkRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchNetworkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchNetworkResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchPartyContact": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_078: This API is used to search contact details of a party stored in TCS BaNCS Health insurance application.",
        "operationId": "searchPartyContactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchPartyContactRequest",
            "description": "searchPartyContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchPartyContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPartyContactResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchPayorList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_052: This API is used to search existing payor available to TCS BaNCS Health insurance platform.",
        "operationId": "searchPayorListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchPayorRequest",
            "description": "searchPayorRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchPayorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPayorResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchPolicyHolderList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_280 : This API is used to create an beneficiary in TCS BaNCS Health insurance platform for further use in policy creation.",
        "operationId": "searchPolicyHolderListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchPolicyHolderRequest",
            "description": "searchPolicyHolderRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchPolicyHolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPolicyHolderResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchProposerList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_042: This API is used to search existing proposer/ Policy Holder available to TCS BaNCS Health insurance platform.",
        "operationId": "searchProposerListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchProposerRequest",
            "description": "searchProposerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchProposerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchProposerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchProviderList": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_047: This API is used to search existing provider available to TCS BaNCS Health insurance platform.",
        "operationId": "searchProviderListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchProviderRequest",
            "description": "searchProviderRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchProviderResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/searchRelatedParty": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_082: This API is used to search the parties associated to another party as present in TCS BaNCS Health Insurance application.",
        "operationId": "searchRelatedPartyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchRelatedPartyRequest",
            "description": "searchRelatedPartyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchRelatedPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchRelatedPartyResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateAgent": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_037: This API is used to update existing agent information in TCS BaNCS Health insurance platform.",
        "operationId": "updateAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateAgentRequest",
            "description": "updateAgentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateAgentResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateBank": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_032: This API is used to update existing bank information in TCS BaNCS Health insurance platform.",
        "operationId": "updateBankUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateBankRequest",
            "description": "updateBankRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBankRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateBankResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateBeneficiary": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_031: This API is used to update existing beneficiary information in TCS BaNCS Health insurance platform.",
        "operationId": "updateBeneficiaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateBeneficiaryRequest",
            "description": "updateBeneficiaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBeneficiaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateBeneficiaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateBroker": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_038: This API is used to update existing broker information in TCS BaNCS Health insurance platform.",
        "operationId": "updateBrokerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateBrokerRequest",
            "description": "updateBrokerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBrokerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateBrokerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateClaimant": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_036: This API is used to update existing claimant information in TCS BaNCS Health insurance platform.",
        "operationId": "updateClaimantUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateClaimantRequest",
            "description": "updateClaimantRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateClaimantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateClaimantResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateClinician": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_035: This API is used to update existing clinician information in TCS BaNCS Health insurance platform.",
        "operationId": "updateClinicianUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateClinicianRequest",
            "description": "updateClinicianRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateClinicianRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateClinicianResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateEmployee": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_041: This API is used to update existing employee information in TCS BaNCS Health insurance platform.",
        "operationId": "updateEmployeeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateEmployeeRequest",
            "description": "updateEmployeeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEmployeeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateEmployeeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateEmployer": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_040: This API is used to update existing employer information in TCS BaNCS Health insurance platform.",
        "operationId": "updateEmployerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateEmployerRequest",
            "description": "updateEmployerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEmployerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateEmployerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateMember": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_030: This API is used to update existing member information in TCS BaNCS Health insurance platform.",
        "operationId": "updateMemberUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateMemberRequest",
            "description": "updateMemberRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateMemberResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateNetwork": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_033: This API is used to update existing network information in TCS BaNCS Health insurance platform.",
        "operationId": "updateNetworkUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateNetworkRequest",
            "description": "updateNetworkRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNetworkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateNetworkResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updatePartyContact": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_077: This API is used to update contact details of a party stored in TCS BaNCS Health insurance application.",
        "operationId": "updatePartyContactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updatePartyContactRequest",
            "description": "updatePartyContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePartyContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdatePartyContactResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updatePayor": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_039: This API is used to update existing payor information in TCS BaNCS Health insurance platform.",
        "operationId": "updatePayorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updatePayorRequest",
            "description": "updatePayorRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePayorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdatePayorResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updatePolicyHolder": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_029: This API is used to update existing Policy-Holder  information in TCS BaNCS Health insurance platform.",
        "operationId": "updatePolicyHolderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updatePolicyHolderRequest",
            "description": "updatePolicyHolderRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePolicyHolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdatePolicyHolderResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/Party/13.0/updateProvider": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_034: This API is used to update existing provider information in TCS BaNCS Health insurance platform.",
        "operationId": "updateProviderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateProviderRequest",
            "description": "updateProviderRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateProviderResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/secured/Party/13.0/createAppointment_V13": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_084: This API is used to book an appointment.",
        "operationId": "createAppointment_V13UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createAppointmentRequest",
            "description": "createAppointmentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppointmentRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletePartyContactResponse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/secured/Party/13.0/fetchClaimList_V13": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_074: This API is used to list all claims associated with a Party already available in TCS BaNCS Health insurance application.",
        "operationId": "fetchClaimList_V13UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchClaimRequest",
            "description": "fetchClaimRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchClaimRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchClaimResponse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/secured/Party/13.0/fetchPolicyList_V13": {
      "post": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_076: This API is used to list all policies associated with a Party already available in TCS BaNCS Health insurance application.",
        "operationId": "fetchPolicyList_V13UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPolicyRequest",
            "description": "fetchPolicyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPolicyRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPolicyResponse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPartyServices/secured/Party/13.0/locateParty_V13": {
      "get": {
        "tags": [
          "health-party-services"
        ],
        "summary": "BANCS_HEALTH_BUS_220: This API is used to locate party.",
        "operationId": "locateParty_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "city",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchFlag",
            "in": "query",
            "description": "searchFlag",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "searchValue",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "zipCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocatePartyResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/calculateGroupPolicyPremium": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_128: The API is to be used calculate the premium for an Group Policy",
        "operationId": "calculateGroupPolicyPremiumUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "calculateGroupPolicyPremiumRequest",
            "description": "calculateGroupPolicyPremiumRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculateGroupPolicyPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalculatePolicyPremiumResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/calculatePolicyPremium": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_129: The API is to be used calculate the premium for a Policy",
        "operationId": "calculatePolicyPremiumUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "calculatePolicyPremiumRequest",
            "description": "calculatePolicyPremiumRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculatePolicyPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalculatePolicyPremiumResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/fetchPaymentCycle": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_159: The API is used to fetch the billing cycle information for a policy.",
        "operationId": "fetchPaymentCycleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPaymentCycleRequest",
            "description": "fetchPaymentCycleRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPaymentCycleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPaymentCycleResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/getFamilyPolicyPremiumDetails": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_136: This API is used to fetch premium details for a family policy in TCS BaNCS Health Insurance application  ",
        "operationId": "getFamilyPolicyPremiumDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPremiumDetailsRequest",
            "description": "fetchPremiumDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPremiumDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPremiumDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/getGroupPolicyPremiumDetails": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_224 : This API is used to fetch premium details for a group policy in TCS BaNCS Health Insurance application.",
        "operationId": "getGroupPolicyPremiumDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPremiumDetailsRequest",
            "description": "fetchPremiumDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPremiumDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPremiumDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/getIndividualPolicyPremiumDetails": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_153: This API is used to fetch premium details for an individual policy in TCS BaNCS Health Insurance application ",
        "operationId": "getIndividualPolicyPremiumDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fetchPremiumDetailsRequest",
            "description": "fetchPremiumDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchPremiumDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchPremiumDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/saveCollectPremiumWithIssuePol": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_268: This API is used save and collect Premium and then issue Policy",
        "operationId": "saveCollectPremiumWithIssuePolUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objSaveAndEditSMTPRequest",
            "description": "objSaveAndEditSMTPRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCollectPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveCollectPremiumResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/PolicyPremium/13.0/searchPolicyPayment": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_160: The API is used to fetch the summary level policy payment list",
        "operationId": "searchPolicyPaymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchPolicyPaymentRequest",
            "description": "searchPolicyPaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchPolicyPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchPolicyPaymentResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicyPremiumServices/secured/PolicyPremium/13.0/savePaymentInfo_V13": {
      "post": {
        "tags": [
          "health-policypremium-services"
        ],
        "summary": "BANCS_HEALTH_BUS_225: This API is used to save payment informations.",
        "operationId": "savePaymentInfo_V13UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "savePaymentInfoRequest",
            "description": "savePaymentInfoRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SavePaymentInfoRequest_V13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResopnse_V13"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicySummaryServices/PolicySummary/13.0/getGroupAccidentGroupPolicySummary": {
      "post": {
        "tags": [
          "health-policy-summary-services"
        ],
        "summary": "BANCS_HEALTH_BUS_131: The API is to be used to get details of Group Policy summary with start and end dates and member premium summary",
        "operationId": "getGroupAccidentGroupPolicySummaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policySummaryRequest",
            "description": "policySummaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicySummaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicySummaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicySummaryServices/PolicySummary/13.0/getGroupAccidentIndividualPolicySummary": {
      "post": {
        "tags": [
          "health-policy-summary-services"
        ],
        "summary": "BANCS_HEALTH_BUS_133: The API is to be used to get details of a Group Accident Product Family Policy with start and end dates.",
        "operationId": "getGroupAccidentIndividualPolicySummaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyGroupAccIndvSummaryRequest",
            "description": "policyGroupAccIndvSummaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyGroupAccIndvSummaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicySummaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicySummaryServices/PolicySummary/13.0/getIndividualAccidentPolicySummary": {
      "post": {
        "tags": [
          "health-policy-summary-services"
        ],
        "summary": "BANCS_HEALTH_BUS_132: sThe API is to be used to get details of an Individual Accident Policy with start and end dates.",
        "operationId": "getIndividualAccidentPolicySummaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyIndvAccSummaryRequest",
            "description": "policyIndvAccSummaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyIndvAccSummaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicySummaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthPolicySummaryServices/PolicySummary/13.0/getMedsupPolicySummary": {
      "post": {
        "tags": [
          "health-policy-summary-services"
        ],
        "summary": "BANCS_HEALTH_BUS_134: The API is to be used to get details of MedSup Policy summary with start and end dates and member premium summary.",
        "operationId": "getMedsupPolicySummaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policySummaryRequest",
            "description": "policySummaryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicySummaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicySummaryResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthProductServices/Product/13.0/fetchParameterValue": {
      "get": {
        "tags": [
          "health-product-services"
        ],
        "summary": "BANCS_HEALTH_BUS_230: This API is used to fetch Param value respect to Parameter Name.",
        "operationId": "fetchParameterValueUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameterName",
            "in": "query",
            "description": "parameterName",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceNumber",
            "in": "query",
            "description": "referenceNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchFlag",
            "in": "query",
            "description": "searchFlag",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchParamValueResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthProductServices/Product/13.0/getProductWisePlan": {
      "get": {
        "tags": [
          "health-product-services"
        ],
        "summary": "BANCS_HEALTH_BUS_226: This API is used to fetch all plans according to product.",
        "operationId": "getProductWisePlanUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProductWisePlanResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthProductServices/Product/13.0/getRuleDetails": {
      "get": {
        "tags": [
          "health-product-services"
        ],
        "summary": "BANCS_HEALTH_BUS_229: This API is used to fetch rule details.",
        "operationId": "getRuleDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventCode",
            "in": "query",
            "description": "eventCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalNumber",
            "in": "query",
            "description": "proposalNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "relationship",
            "in": "query",
            "description": "relationship",
            "required": false,
            "type": "string"
          },
          {
            "name": "riskId",
            "in": "query",
            "description": "riskId",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRuleResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthProductServices/secured/Product/13.0/showProductSummary_V13": {
      "get": {
        "tags": [
          "health-product-services"
        ],
        "summary": "BANCS_HEALTH_BUS_229: This API is used to fetch product specs.",
        "operationId": "showProductSummary_V13UsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productName",
            "in": "query",
            "description": "productName",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowProductSummaryResponse_V13"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthQuotationServices/Quotation/13.0/issueAgreementQuote": {
      "post": {
        "tags": [
          "health-policy-quotation"
        ],
        "summary": "BANCS_HEALTH_BUS_171: This API performs the issue-quote action on an agreement/contract",
        "operationId": "issueAgreementQuoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthQuotationServices/Quotation/13.0/issueFamilyQuote": {
      "post": {
        "tags": [
          "health-policy-quotation"
        ],
        "summary": "BANCS_HEALTH_BUS_170: This API performs the issue-quote action on a family policy",
        "operationId": "issueFamilyQuoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthQuotationServices/Quotation/13.0/issueGroupQuote": {
      "post": {
        "tags": [
          "health-policy-quotation"
        ],
        "summary": "BANCS_HEALTH_BUS_169: This API performs the issue-quote action on a group policy ",
        "operationId": "issueGroupQuoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthQuotationServices/Quotation/13.0/issueIndividualQuote": {
      "post": {
        "tags": [
          "health-policy-quotation"
        ],
        "summary": "BANCS_HEALTH_BUS_172: This API performs the issue-quote action on an individual policy",
        "operationId": "issueIndividualQuoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthQuotationServices/Quotation/13.0/validateIssueQuote": {
      "post": {
        "tags": [
          "health-policy-quotation"
        ],
        "summary": "BANCS_HEALTH_BUS_168: This API performs validation checks before the issue-quote process",
        "operationId": "validateIssueQuoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyStatusActionRequest",
            "description": "policyStatusActionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyStatusActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/12.0.beta/changePassword": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_194: This API is used to change the password for a mentioned user id ( not applicable when BaNCS is SSO enabled)",
        "operationId": "changePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objChangePasswordRequest",
            "description": "objChangePasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChangePasswordResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/12.0.beta/logIn": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_001: This API is used to login to the BaNCS application",
        "operationId": "logInUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logInRequest",
            "description": "logInRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogInRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogInResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/12.0.beta/logOut": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_002: This API is used to log out from the BaNCS application",
        "operationId": "logOutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logOutRequest",
            "description": "logOutRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogOutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogOutResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/createNewSession": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_241: This API is used to create new session in BaNCS application.",
        "operationId": "createNewSessionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logInRequest",
            "description": "logInRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogInRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogInResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/createUser": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_191: This API is used to create a new user in BaNCS application",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createUserRequest",
            "description": "createUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/getUserDetails": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_193: This API is used to fetch the details of user id passed as an input to BaNCS",
        "operationId": "getUserDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "getUserDetailsRequest",
            "description": "getUserDetailsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUserDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetUserDetailsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/getUserList": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_195: This API is used to fetch the list of users available in BaNCS",
        "operationId": "getUserListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userListRequest",
            "description": "userListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/logInTPA": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_239: This API is used to TPA login to the BaNCS application.",
        "operationId": "logInTPAUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logInRequest",
            "description": "logInRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogInRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogInResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/logOutTPA": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_240: This API is used to log out TPA from the BaNCS application.",
        "operationId": "logOutTPAUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logOutRequest",
            "description": "logOutRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogOutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogOutResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/HealthSecurityServices/Security/13.0/updateUser": {
      "post": {
        "tags": [
          "health-security-services"
        ],
        "summary": "BANCS_HEALTH_BUS_192: This API is used to update the details of a user as per the input.",
        "operationId": "updateUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateUserRequest",
            "description": "updateUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/createScheme": {
      "post": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_BUS_234: This API is used to create scheme.",
        "operationId": "createSchemeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "entitySchemeRequest",
            "description": "entitySchemeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntitySchemeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntitySchemeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/fetchSchemeDetails": {
      "get": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_BUS_233: This API is used to fetch Scheme Details.",
        "operationId": "fetchSchemeDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "schemeNumber",
            "in": "query",
            "description": "schemeNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "description": "transactionCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetSchemeDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/getSchemeProductList": {
      "get": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_BUS_236: This API is used to getting Scheme Details.",
        "operationId": "getSchemeProductListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SchemeProductListResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/getVBenefitRules": {
      "get": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_BUS_235: This API is used to fetch rule details.",
        "operationId": "getVBenefitRulesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventCode",
            "in": "query",
            "description": "eventCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalNumber",
            "in": "query",
            "description": "proposalNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "relationship",
            "in": "query",
            "description": "relationship",
            "required": false,
            "type": "string"
          },
          {
            "name": "riskId",
            "in": "query",
            "description": "riskId",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetVBenefitRuleResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/logIn": {
      "post": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_PORTAL_001: This API is used to login to the BaNCS application",
        "operationId": "logInUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logInRequest",
            "description": "logInRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogInRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogInResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/searchEmployerDetails": {
      "post": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_BUS_287: This API is used to Search Employer Details.",
        "operationId": "searchEmployerDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchEmployerListRequest",
            "description": "searchEmployerListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchEmployerListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchEmployerListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/SchemeServices/Scheme/13.0/searchSchemeDetails": {
      "post": {
        "tags": [
          "scheme-services"
        ],
        "summary": "BANCS_HEALTH_BUS_232: This API is used to Search Scheme Details.",
        "operationId": "searchSchemeDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchSchemeListRequest",
            "description": "searchSchemeListRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchSchemeListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchSchemeListResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/closureAllTask": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_098: This API is used to closure a task already existing in TCS BaNCS Health Insurance application.",
        "operationId": "closureAllTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "closureTaskRequest",
            "description": "closureTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosureTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClosureTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/createWorkItemWithUpload": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_281: This API is to be used to create work item and upload documents as DTO",
        "operationId": "createWorkItemWithUploadUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "standaloneWorkItemRequest",
            "description": "standaloneWorkItemRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StandaloneWorkItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StandaloneWorkItemResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/createWorkItems": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_201: This API is used to create work items",
        "operationId": "createWorkItemsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objCreateWorkItemsRequest",
            "description": "objCreateWorkItemsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkItemsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateWorkItemsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/fetchClaimWorkItems": {
      "get": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_323: This API is used to fetch list of all workitems for a claim.",
        "operationId": "fetchClaimWorkItemsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityNumber",
            "in": "query",
            "description": "entityNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItemResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/fetchPartyWorkItems": {
      "get": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_322: This API is used to fetch list of all workitems for a party.",
        "operationId": "fetchPartyWorkItemsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityNumber",
            "in": "query",
            "description": "entityNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItemResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/fetchPolicyWorkItems": {
      "get": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_321: This API is used to fetch list of all workitems for a policy.",
        "operationId": "fetchPolicyWorkItemsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityNumber",
            "in": "query",
            "description": "entityNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItemResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/getWorkItemDetails": {
      "get": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_324: This API is used to fetch workItem details.",
        "operationId": "getWorkItemDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "query",
            "description": "referenceNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItemDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/getWorkItemStatus": {
      "get": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_325: This API is used to fetch workItem status.",
        "operationId": "getWorkItemStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "referenceNumber",
            "in": "query",
            "description": "referenceNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleCode",
            "in": "query",
            "description": "roleCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "stakeCode",
            "in": "query",
            "description": "stakeCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "userCode",
            "in": "query",
            "description": "userCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItemStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/isdisableRequire": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_088: This API is used to cancel a claim already existing in TCS BaNCS Health Insurance application.",
        "operationId": "isdisableRequireUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "disableRequire",
            "description": "disableRequire",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableRequireRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DisableRequireResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/listNote": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_200: This API is to be used to fetch the notes saved for a Policy/ Claim",
        "operationId": "listNoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "listNoteRequest",
            "description": "listNoteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListNoteResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/listOpenTask": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_197: This API is used to list all open tasks in the health insurance application",
        "operationId": "listOpenTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "listOpenTaskRequest",
            "description": "listOpenTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListOpenTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/listSpecificTask": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_201: This API is to be used to fetch the details of a specific open / in-progress task item",
        "operationId": "listSpecificTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "listSpecificTaskRequest",
            "description": "listSpecificTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListSpecificTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/listTask": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_199: This API is to be used to search the open / in-progress task items saved for a policy or claim",
        "operationId": "listTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "listTaskRequest",
            "description": "listTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/listTaskForUser": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_196: This API is to be used to search the open / in-progress task items for a specific user",
        "operationId": "listTaskForUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "listTaskForUserRequest",
            "description": "listTaskForUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTaskForUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/referralExecution": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_088: This API is used to cancel a claim already existing in TCS BaNCS Health Insurance application.",
        "operationId": "referralExecutionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "executReferralRequest",
            "description": "executReferralRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteReferralRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExecuteReferralResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/searchWorkItems": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_201: This API is used to search work items",
        "operationId": "searchWorkItemsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "objSearchWorkItemsRequest",
            "description": "objSearchWorkItemsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchWorkItemsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchWorkItemsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/WorkflowServices/Workflow/13.0/updateTask": {
      "post": {
        "tags": [
          "workflow-services"
        ],
        "summary": "BANCS_HEALTH_BUS_198: This API is to be used to update the task items for an user",
        "operationId": "updateTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateTaskRequest",
            "description": "updateTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateTaskResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/none": {
      "get": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "none",
        "operationId": "noneUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/test": {
      "get": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "test",
        "operationId": "testUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/testwrite": {
      "get": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "ba-ncs-secured-rest-controller"
        ],
        "summary": "testwrite",
        "operationId": "testwriteUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "AddressDetailList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "AddressDetailList"
    },
    "AttachStakeToPartyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stake": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "AttachStakeToPartyRequest"
    },
    "AttachStakeToPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "AttachStakeToPartyResponse"
    },
    "BasicDetailList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "BasicDetailList"
    },
    "BenefitList": {
      "type": "object",
      "properties": {
        "benefitCode": {
          "type": "string"
        },
        "benefitDescription": {
          "type": "string"
        }
      },
      "title": "BenefitList"
    },
    "BusinessFetchClaimResultSet": {
      "type": "object",
      "properties": {
        "commencementDate": {
          "type": "string"
        },
        "entityNumber": {
          "type": "string"
        },
        "entityStatus": {
          "type": "string"
        },
        "expireDate": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "relatedStake": {
          "type": "string"
        }
      },
      "title": "BusinessFetchClaimResultSet"
    },
    "BusinessFetchPartyDetailsResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "BusinessFetchPartyDetailsResult"
    },
    "BusinessFetchResultSet": {
      "type": "object",
      "properties": {
        "commencementDate": {
          "type": "string"
        },
        "entityNumber": {
          "type": "string"
        },
        "entityStatus": {
          "type": "string"
        },
        "expireDate": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "relatedStake": {
          "type": "string"
        }
      },
      "title": "BusinessFetchResultSet"
    },
    "BusinessLocationSearchResultSet": {
      "type": "object",
      "properties": {
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationType": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        }
      },
      "title": "BusinessLocationSearchResultSet"
    },
    "BusinessPartnerSearchResultSet": {
      "type": "object",
      "properties": {
        "dateofBirth_Or_Incorporation": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "indOrg": {
          "type": "string"
        },
        "lastModificationDate": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "partyName": {
          "type": "string"
        },
        "partyStatus": {
          "type": "string"
        },
        "partyType": {
          "type": "string"
        },
        "toDate": {
          "type": "string"
        }
      },
      "title": "BusinessPartnerSearchResultSet"
    },
    "CalculateGroupPolicyPremiumRequest": {
      "type": "object",
      "properties": {
        "entityNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CalculateGroupPolicyPremiumRequest"
    },
    "CalculatePolicyPremiumRequest": {
      "type": "object",
      "properties": {
        "entityNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CalculatePolicyPremiumRequest"
    },
    "CalculatePolicyPremiumResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "premium": {
          "type": "number",
          "format": "double"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "CalculatePolicyPremiumResponse"
    },
    "CategoryParamValueList": {
      "type": "object",
      "properties": {
        "paramName": {
          "type": "string"
        },
        "paramValue": {
          "type": "string"
        }
      },
      "title": "CategoryParamValueList"
    },
    "CategoryPropDetails": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "paramName": {
          "type": "string"
        },
        "paramValue": {
          "type": "string"
        }
      },
      "title": "CategoryPropDetails"
    },
    "ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "strConfirmPassword": {
          "type": "string"
        },
        "strNewPassword": {
          "type": "string"
        },
        "strOldPassword": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ChangePasswordRequest"
    },
    "ChangePasswordResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ChangePasswordResponse"
    },
    "ChaserListRequest": {
      "type": "object",
      "properties": {
        "documentUniqueIdentifier": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ChaserListRequest"
    },
    "ChaserListResponse": {
      "type": "object",
      "properties": {
        "chaserDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChaserListResponseDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ChaserListResponse"
    },
    "ChaserListResponseDetails": {
      "type": "object",
      "properties": {
        "chaserDate": {
          "type": "string"
        },
        "chaserStatus": {
          "type": "string"
        },
        "sequenceNumber": {
          "type": "string"
        }
      },
      "title": "ChaserListResponseDetails"
    },
    "ChildQuestionList": {
      "type": "object",
      "properties": {
        "answer1": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answer2": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAns": {
          "type": "string"
        },
        "fetchValue": {
          "type": "string"
        },
        "freeText": {
          "type": "string"
        },
        "paramDomain": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentQuestionId": {
          "type": "string"
        },
        "question": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        }
      },
      "title": "ChildQuestionList"
    },
    "ClaimBasicInformation": {
      "type": "object",
      "properties": {
        "cOBRequired": {
          "type": "string"
        },
        "causeofAccident": {
          "type": "string"
        },
        "claimProxyNameDetails": {
          "type": "string"
        },
        "claimProxyRelationship": {
          "type": "string"
        },
        "claimSubmissionbasis": {
          "type": "string"
        },
        "cleanClaimIdentified": {
          "type": "string"
        },
        "dateforCleanClaim": {
          "type": "string"
        },
        "dateofBirth": {
          "type": "string"
        },
        "dateofaccident": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "employer": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstReportofInjurySubmitted": {
          "type": "string"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "mailingAddress": {
          "type": "string"
        },
        "memberisonactivedutystatusinthearmedforces": {
          "type": "string"
        },
        "memberwasengagedinanillegaloccupation": {
          "type": "string"
        },
        "motorVehicleAccident": {
          "type": "string"
        },
        "notifiedBy": {
          "type": "string"
        },
        "notifierDetails": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "otherLocationAddress": {
          "type": "string"
        },
        "otherPolicyNumber": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer",
          "format": "int64"
        },
        "placeofaccident": {
          "type": "string"
        },
        "policereportSubmitted": {
          "type": "string"
        },
        "policyClaimedagainst": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        },
        "socialSecurityNo": {
          "type": "string"
        },
        "stateClaimedin": {
          "type": "string"
        },
        "timeofaccident": {
          "type": "string"
        },
        "workPhoneNumber": {
          "type": "string"
        },
        "workrelatedaccident": {
          "type": "string"
        }
      },
      "title": "ClaimBasicInformation"
    },
    "ClaimDocumentListDetails": {
      "type": "object",
      "properties": {
        "documentBelongsTo": {
          "type": "string"
        },
        "documentCreatedOn": {
          "type": "string"
        },
        "documentName": {
          "type": "string"
        },
        "documentType": {
          "type": "string"
        }
      },
      "title": "ClaimDocumentListDetails"
    },
    "ClaimDocumentListResponse": {
      "type": "object",
      "properties": {
        "claimDocumentDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimDocumentListDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimDocumentListResponse"
    },
    "ClaimDocumentResult": {
      "type": "object",
      "properties": {
        "documentName": {
          "type": "string"
        },
        "documentPath": {
          "type": "string"
        }
      },
      "title": "ClaimDocumentResult"
    },
    "ClaimEnquiryResponse": {
      "type": "object",
      "properties": {
        "claimEnquiryResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimEnquiryResult"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimEnquiryResponse"
    },
    "ClaimEnquiryResult": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "claimStatus": {
          "type": "string"
        },
        "claimType": {
          "type": "string"
        },
        "healthCardNumber": {
          "type": "string"
        },
        "memberName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        }
      },
      "title": "ClaimEnquiryResult"
    },
    "ClaimItemListRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimItemListRequest"
    },
    "ClaimNotificationDetails": {
      "type": "object",
      "properties": {
        "claimIndicator": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "notificationDate": {
          "type": "string"
        },
        "notificationTime": {
          "type": "string"
        },
        "primaryClaim": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "typeofClaim": {
          "type": "string"
        },
        "typeofDocument": {
          "type": "string"
        }
      },
      "title": "ClaimNotificationDetails"
    },
    "ClaimNotificationList": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "ClaimNotificationList"
    },
    "ClaimNotificationRequest": {
      "type": "object",
      "properties": {
        "documentNumber": {
          "type": "string"
        },
        "documentType": {
          "type": "string"
        },
        "lstClaimNotificationList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimNotificationList"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimNotificationRequest"
    },
    "ClaimNotificationResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimNotificationResponse"
    },
    "ClaimPartyDeleteRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimPartyDeleteRequest"
    },
    "ClaimPartyDeleteResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPartyDeleteResponse"
    },
    "ClaimPartyDetailRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimPartyDetailRequest"
    },
    "ClaimPartyDetailResponse": {
      "type": "object",
      "properties": {
        "IBAN": {
          "type": "string"
        },
        "ageOfTheChild": {
          "type": "string"
        },
        "bankAccountNumber": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "beneficiaryAge": {
          "type": "string"
        },
        "beneficiaryIndicatory": {
          "type": "string"
        },
        "beneficiaryStatus": {
          "type": "string"
        },
        "citizenship": {
          "type": "string"
        },
        "contactPersonDetails": {
          "type": "string"
        },
        "contactPersonName": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "dateOfEnrollment": {
          "type": "string"
        },
        "detailsOfOtherCourse": {
          "type": "string"
        },
        "digitsOfControl": {
          "type": "string"
        },
        "enrolledAsARegularOrFullTimeStudent": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "iban": {
          "type": "string"
        },
        "legalFirmAddress": {
          "type": "string"
        },
        "legalFirmContactNumber": {
          "type": "string"
        },
        "legalFirmInvolved": {
          "type": "string"
        },
        "legalFirmName": {
          "type": "string"
        },
        "partyName": {
          "type": "string"
        },
        "partyStakeHolderName": {
          "type": "string"
        },
        "percentageShare": {
          "type": "string"
        },
        "reimbursementPreference": {
          "type": "string"
        },
        "relationToInsured": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "typeOfBeneficiary": {
          "type": "string"
        },
        "typeOfCourseEnrolled": {
          "type": "string"
        },
        "typeOfSurvivorBenefit": {
          "type": "string"
        }
      },
      "title": "ClaimPartyDetailResponse"
    },
    "ClaimPartyListDetails": {
      "type": "object",
      "properties": {
        "functionCode": {
          "type": "string"
        },
        "functionName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "ptyPartyName": {
          "type": "string"
        }
      },
      "title": "ClaimPartyListDetails"
    },
    "ClaimPartyListResponse": {
      "type": "object",
      "properties": {
        "claimPartyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimPartyListDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPartyListResponse"
    },
    "ClaimPartyModifyRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "claimPartyProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimPartyPropertyDetails"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimPartyModifyRequest"
    },
    "ClaimPartyModifyResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPartyModifyResponse"
    },
    "ClaimPartyPropertyDetails": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        }
      },
      "title": "ClaimPartyPropertyDetails"
    },
    "ClaimPartySaveRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "initial": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "parentPartyCode": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimPartySaveRequest"
    },
    "ClaimPartySaveResponse": {
      "type": "object",
      "properties": {
        "ResponseCode": {
          "type": "string"
        },
        "ResponseMessage": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "claimPartyCode": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPartySaveResponse"
    },
    "ClaimPaymentApprovalRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "uniqueIdentifier": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentApprovalRequest"
    },
    "ClaimPaymentApprovalResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentApprovalResponse"
    },
    "ClaimPaymentDetailsResponse": {
      "type": "object",
      "properties": {
        "benefitFrequency": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "in_out_indicator": {
          "type": "string"
        },
        "invoiceDate": {
          "type": "string"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "payeeFunctionCode": {
          "type": "string"
        },
        "payeeName": {
          "type": "string"
        },
        "paymentAmount": {
          "type": "string"
        },
        "paymentOption": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentDetailsResponse"
    },
    "ClaimPaymentListDetails": {
      "type": "object",
      "properties": {
        "ApprovedBy": {
          "type": "string"
        },
        "ApprovedDate": {
          "type": "string"
        },
        "inOutIndicator": {
          "type": "string"
        },
        "involvingParty": {
          "type": "string"
        },
        "paymentAmount": {
          "type": "string"
        },
        "paymentMode": {
          "type": "string"
        },
        "paymentPurpose": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentListDetails"
    },
    "ClaimPaymentListResponse": {
      "type": "object",
      "properties": {
        "claimPaymentDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimPaymentListDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentListResponse"
    },
    "ClaimPaymentRejectionRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "uniqueIdentifier": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentRejectionRequest"
    },
    "ClaimPaymentRejectionResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentRejectionResponse"
    },
    "ClaimProcessRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimProcessRequest"
    },
    "ClaimProcessResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "claimStatus": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "ClaimProcessResponse"
    },
    "ClaimRequirementsGenerationRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimRequirementsGenerationRequest"
    },
    "ClaimRequirementsGenerationResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimRequirementsGenerationResponse"
    },
    "ClaimReserveListDetails": {
      "type": "object",
      "properties": {
        "reserveAmount": {
          "type": "string"
        },
        "reservePaidAmount": {
          "type": "string"
        },
        "reservePendingAmount": {
          "type": "string"
        },
        "reserveSubType": {
          "type": "string"
        },
        "reserveType": {
          "type": "string"
        }
      },
      "title": "ClaimReserveListDetails"
    },
    "ClaimReserveListResponse": {
      "type": "object",
      "properties": {
        "claimReserveDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimReserveListDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimReserveListResponse"
    },
    "ClaimResponse": {
      "type": "object",
      "properties": {
        "ICD_10": {
          "type": "string"
        },
        "admissionDate": {
          "type": "string"
        },
        "autopsy_InquestRequired": {
          "type": "string"
        },
        "causeofAccident": {
          "type": "string"
        },
        "claimIndicator": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "claimProxyNameDetails": {
          "type": "string"
        },
        "claimProxyRelationship": {
          "type": "string"
        },
        "claimSubmissionbasis": {
          "type": "string"
        },
        "cleanClaimIdentified": {
          "type": "string"
        },
        "cobRequired": {
          "type": "string"
        },
        "dateforCleanClaim": {
          "type": "string"
        },
        "dateofBirth": {
          "type": "string"
        },
        "dateofDeath": {
          "type": "string"
        },
        "dateofaccident": {
          "type": "string"
        },
        "deathBenifitService": {
          "$ref": "#/definitions/DeathBenifitService"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "dependentChildren": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "diagnosis": {
          "type": "string"
        },
        "dischargeDate": {
          "type": "string"
        },
        "distancebetweenPlaceofaccident_injuryandprimaryresidence": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "emergencyTreatmentService": {
          "$ref": "#/definitions/EmergencyTreatmentService"
        },
        "employer": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "findings": {
          "type": "string"
        },
        "firstReportofInjurySubmitted": {
          "type": "string"
        },
        "fracturesBenefitService": {
          "$ref": "#/definitions/FracturesBenefitService"
        },
        "hospitalDetails": {
          "type": "string"
        },
        "hospitalizationRequired": {
          "type": "string"
        },
        "icd_10": {
          "type": "string"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "mailingAddress": {
          "type": "string"
        },
        "medicalhistoryforlast5years": {
          "type": "integer",
          "format": "int64"
        },
        "memberisonactivedutystatusinthearmedforces": {
          "type": "string"
        },
        "memberwasengagedinanillegaloccupation": {
          "type": "string"
        },
        "motorVehicleAccident": {
          "type": "string"
        },
        "namesandAddressesofanywitnessesoftheAccident": {
          "type": "string"
        },
        "notificationTime": {
          "type": "string"
        },
        "notifiedBy": {
          "type": "string"
        },
        "numberofDependentChildren": {
          "type": "integer",
          "format": "int64"
        },
        "occupation": {
          "type": "string"
        },
        "otherLocationAddress": {
          "type": "string"
        },
        "otherPolicyNumber": {
          "type": "string"
        },
        "partialPermanentDisabilityService": {
          "$ref": "#/definitions/PartialPermanentDisabilityService"
        },
        "phoneNumber": {
          "type": "integer",
          "format": "int64"
        },
        "placeofaccident": {
          "type": "string"
        },
        "policereportSubmitted": {
          "type": "string"
        },
        "policyClaimedagainst": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "primaryClaim": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "receivedDate": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "socialSecurityNo": {
          "type": "string"
        },
        "state_Claimedin": {
          "type": "string"
        },
        "survivorBenifitService": {
          "$ref": "#/definitions/SurvivorBenifitService"
        },
        "timeofaccident": {
          "type": "string"
        },
        "totalClaimedAmount": {
          "type": "string"
        },
        "typeofClaim": {
          "type": "string"
        },
        "typeofDocument": {
          "type": "string"
        },
        "workPhoneNumber": {
          "type": "string"
        },
        "work_relatedaccident": {
          "type": "string"
        }
      },
      "title": "ClaimResponse"
    },
    "ClaimSearchRequest": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "claimStatus": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClaimSearchRequest"
    },
    "ClaimSearchResponse": {
      "type": "object",
      "properties": {
        "claimSearchResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimSearchResponseDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimSearchResponse"
    },
    "ClaimSearchResponseDetails": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "claimStatus": {
          "type": "string"
        },
        "claimType": {
          "type": "string"
        },
        "memberName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "receivedDate": {
          "type": "string"
        }
      },
      "title": "ClaimSearchResponseDetails"
    },
    "ClaimStatusResponse": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "claimStatusCode": {
          "type": "string"
        },
        "claimStatusDescription": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClaimStatusResponse"
    },
    "ClonePolicyRequest": {
      "type": "object",
      "properties": {
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClonePolicyRequest"
    },
    "ClonePolicyResponse": {
      "type": "object",
      "properties": {
        "clonePolicyNumber": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ClonePolicyResponse"
    },
    "CloneSchemeRequest": {
      "type": "object",
      "properties": {
        "objSchemeBasic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeBasic"
          }
        },
        "objSchemeBenefit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeBenefit"
          }
        },
        "objSchemeCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeCategory"
          }
        },
        "objSchemeDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeDetails"
          }
        },
        "objSchemeEmployee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeEmployee"
          }
        },
        "objSchemeLegacy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeLegacy"
          }
        },
        "objSchemeLinked": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeLinked"
          }
        },
        "objSchemeProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeProducts"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSCH_COMM_DATE": {
          "type": "string"
        },
        "strSCH_CREATED_BY": {
          "type": "string"
        },
        "strSCH_CURRENCY_CD": {
          "type": "string"
        },
        "strSCH_DELETED_FLG": {
          "type": "string"
        },
        "strSCH_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strSCH_REC_END_DATE": {
          "type": "string"
        },
        "strSCH_REC_START_DATE": {
          "type": "string"
        },
        "strSCH_SCHEME_NO": {
          "type": "string"
        },
        "strSCH_SCHEME_TYPE": {
          "type": "string"
        },
        "strSCH_UPDATED_BY": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CloneSchemeRequest"
    },
    "CloneSchemeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CloneSchemeResponse"
    },
    "ClosureTaskRequest": {
      "type": "object",
      "properties": {
        "branchId": {
          "type": "string"
        },
        "eventCode": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "riskId": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ClosureTaskRequest"
    },
    "ClosureTaskResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "ClosureTaskResponse"
    },
    "CommissionStatementList": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "dateGenerated": {
          "type": "string"
        },
        "datepaid": {
          "type": "string"
        },
        "intermediaryName": {
          "type": "string"
        },
        "percentage": {
          "type": "string"
        },
        "policyHolder": {
          "type": "string"
        },
        "premium": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "CommissionStatementList"
    },
    "Contact": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "Contact"
    },
    "ContactDetailList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "ContactDetailList"
    },
    "ContactDetails": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "ContactDetails"
    },
    "Cover": {
      "type": "object",
      "properties": {
        "lstCoverDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverDetailList"
          }
        },
        "strCoverCode": {
          "type": "string"
        }
      },
      "title": "Cover"
    },
    "CoverDetailList": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "CoverDetailList"
    },
    "CoverList": {
      "type": "object",
      "properties": {
        "coverCode": {
          "type": "string"
        },
        "coverDescription": {
          "type": "string"
        },
        "coverUnit": {
          "type": "string"
        },
        "manOpt": {
          "type": "string"
        },
        "planName": {
          "type": "string"
        }
      },
      "title": "CoverList"
    },
    "CreateAgentRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateAgentRequest"
    },
    "CreateAgentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateAgentResponse"
    },
    "CreateAppointmentRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "appointmentId": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "dateOfAppointment": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateAppointmentRequest"
    },
    "CreateAppointmentRequest_V13": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "appointmentId": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "dateOfAppointment": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateAppointmentRequest_V13"
    },
    "CreateBankRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateBankRequest"
    },
    "CreateBankResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateBankResponse"
    },
    "CreateBeneficiaryRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateBeneficiaryRequest"
    },
    "CreateBeneficiaryResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateBeneficiaryResponse"
    },
    "CreateBrokerRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateBrokerRequest"
    },
    "CreateBrokerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateBrokerResponse"
    },
    "CreateClaimantRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateClaimantRequest"
    },
    "CreateClaimantResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateClaimantResponse"
    },
    "CreateClinicianRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateClinicianRequest"
    },
    "CreateClinicianResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateClinicianResponse"
    },
    "CreateEmployeeRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateEmployeeRequest"
    },
    "CreateEmployeeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateEmployeeResponse"
    },
    "CreateEmployerRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateEmployerRequest"
    },
    "CreateEmployerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateEmployerResponse"
    },
    "CreateMemberRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateMemberRequest"
    },
    "CreateMemberResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateMemberResponse"
    },
    "CreateNetworkRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateNetworkRequest"
    },
    "CreateNetworkResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateNetworkResponse"
    },
    "CreatePartyContactRequest": {
      "type": "object",
      "properties": {
        "additionalspaceforroad": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "door": {
          "type": "string"
        },
        "emailid": {
          "type": "string"
        },
        "faxnumber": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "landlinenumber": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mobilenumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "partycode": {
          "type": "string"
        },
        "portal": {
          "type": "string"
        },
        "road": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stair": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "typeofcontact": {
          "type": "string"
        },
        "typeofroad": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        }
      },
      "title": "CreatePartyContactRequest"
    },
    "CreatePartyContactResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "CreatePartyContactResponse"
    },
    "CreatePartyRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreatePartyRequest"
    },
    "CreatePartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreatePartyResponse"
    },
    "CreatePayorRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreatePayorRequest"
    },
    "CreatePayorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreatePayorResponse"
    },
    "CreateProposalRequest": {
      "type": "object",
      "properties": {
        "editProposalFlag": {
          "type": "string"
        },
        "lstMemberList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyMember"
          }
        },
        "lstProposalDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalDetailList"
          }
        },
        "objPolicyParty": {
          "$ref": "#/definitions/PolicyParty"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "strBranchCode": {
          "type": "string"
        },
        "strPlanCode": {
          "type": "string"
        },
        "strProductCode": {
          "type": "string"
        },
        "strProposalNumber": {
          "type": "string"
        },
        "strProposalStartDate": {
          "type": "string"
        },
        "strTerm": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateProposalRequest"
    },
    "CreateProposalResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "isDocumentUploaded": {
          "type": "string"
        },
        "isNomineeDtlsCaptured": {
          "type": "string"
        },
        "isPrevPolDtlsCaptured": {
          "type": "string"
        },
        "lstRiskDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateProposalRiskDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strPolicyHolderCode": {
          "type": "string"
        },
        "strProposalNumber": {
          "type": "string"
        }
      },
      "title": "CreateProposalResponse"
    },
    "CreateProposalRiskDetails": {
      "type": "object",
      "properties": {
        "isQuesionnaireAnswered": {
          "type": "string"
        },
        "relationshipCode": {
          "type": "string"
        },
        "relationshipDetails": {
          "type": "string"
        },
        "riskId": {
          "type": "string"
        }
      },
      "title": "CreateProposalRiskDetails"
    },
    "CreateProviderRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateProviderRequest"
    },
    "CreateProviderResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateProviderResponse"
    },
    "CreateUserRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strEndDate": {
          "type": "string"
        },
        "strPassword": {
          "type": "string"
        },
        "strRoleCode": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strUserCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "CreateUserRequest"
    },
    "CreateUserResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateUserResponse"
    },
    "CreateWorkItemsRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strActionCode": {
          "type": "string"
        },
        "strPriority": {
          "type": "string"
        },
        "strProcessCode": {
          "type": "string"
        },
        "strProductCode": {
          "type": "string"
        },
        "strRefNo": {
          "type": "string"
        },
        "strRefType": {
          "type": "string"
        },
        "strSourceType": {
          "type": "string"
        },
        "strTeamName": {
          "type": "string"
        },
        "strWorkflowType": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "workitemDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkitemDetailsList"
          }
        }
      },
      "title": "CreateWorkItemsRequest"
    },
    "CreateWorkItemsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "CreateWorkItemsResponse"
    },
    "DBClaimActivityService": {
      "type": "object",
      "properties": {
        "dBClaimActivityServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DBClaimActivityServiceDetails"
          }
        }
      },
      "title": "DBClaimActivityService"
    },
    "DBClaimActivityServiceDetails": {
      "type": "object",
      "properties": {
        "adjudicated": {
          "type": "string"
        },
        "approvedAmountWithTax": {
          "type": "number",
          "format": "double"
        },
        "approvedAmountWithoutTax": {
          "type": "number",
          "format": "double"
        },
        "approvedQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "approvedUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "authorizationNumber": {
          "type": "string"
        },
        "benefitCode": {
          "type": "string"
        },
        "benefitDescription": {
          "type": "string"
        },
        "billedAmountIn$": {
          "type": "number",
          "format": "double"
        },
        "claimCurrency": {
          "type": "string"
        },
        "claimedAmount": {
          "type": "number",
          "format": "double"
        },
        "claimedAmountBaseCurrency": {
          "type": "number",
          "format": "double"
        },
        "claimedGrossAmount": {
          "type": "number",
          "format": "double"
        },
        "claimedQuantity": {
          "type": "number",
          "format": "double"
        },
        "claimedUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "clinician": {
          "type": "string"
        },
        "coInsurance": {
          "type": "number",
          "format": "double"
        },
        "coinsurancePercentage": {
          "type": "number",
          "format": "double"
        },
        "conversionRate": {
          "type": "number",
          "format": "double"
        },
        "copayment": {
          "type": "number",
          "format": "double"
        },
        "coverChildGroup1": {
          "type": "string"
        },
        "deductibleValue": {
          "type": "number",
          "format": "double"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "eligibleQuantity": {
          "type": "number",
          "format": "double"
        },
        "eligibleUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "exGratia": {
          "type": "string"
        },
        "excess": {
          "type": "number",
          "format": "double"
        },
        "fundPayable": {
          "type": "number",
          "format": "double"
        },
        "invoiceSerialNumber": {
          "type": "number",
          "format": "double"
        },
        "medicareApprovedAmount": {
          "type": "number",
          "format": "double"
        },
        "medicareClaimedAmount": {
          "type": "number",
          "format": "double"
        },
        "medicarePayable": {
          "type": "number",
          "format": "double"
        },
        "medicarePercentage": {
          "type": "number",
          "format": "double"
        },
        "medicarePrice": {
          "type": "number",
          "format": "double"
        },
        "modeofPayment": {
          "type": "string"
        },
        "outofPocketAdjustments": {
          "type": "number",
          "format": "double"
        },
        "overriddenDenialCode": {
          "type": "string"
        },
        "overriddenPrice": {
          "type": "number",
          "format": "double"
        },
        "overriddenQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "overriddenRemarks": {
          "type": "string"
        },
        "paidAmount": {
          "type": "number",
          "format": "double"
        },
        "penalty": {
          "type": "number",
          "format": "double"
        },
        "priceCaptured": {
          "type": "string"
        },
        "priceType": {
          "type": "string"
        },
        "primaryPayableAmount": {
          "type": "number",
          "format": "double"
        },
        "qualifyingProcedure": {
          "type": "string"
        },
        "reasonforDifference": {
          "type": "string"
        },
        "referringClinician": {
          "type": "string"
        },
        "referringSpecialty": {
          "type": "string"
        },
        "referringSpecialtyDescription": {
          "type": "string"
        },
        "rejectedAmount": {
          "type": "number",
          "format": "double"
        },
        "remarks": {
          "type": "string"
        },
        "serviceApprovedbyPrimaryPayor": {
          "type": "string"
        },
        "serviceDate": {
          "type": "string"
        },
        "serviceEndDate": {
          "type": "string"
        },
        "serviceStartDate": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "specialtyCode": {
          "type": "string"
        },
        "supplementaryPaymentAmount": {
          "type": "number",
          "format": "double"
        },
        "surgery": {
          "type": "string"
        },
        "tax": {
          "type": "number",
          "format": "double"
        },
        "taxRate": {
          "type": "number",
          "format": "double"
        },
        "typeofProcedure": {
          "type": "string"
        },
        "typeofRate": {
          "type": "string"
        },
        "unitTerm": {
          "type": "string"
        },
        "withholding": {
          "type": "number",
          "format": "double"
        },
        "withholdingRate": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "DBClaimActivityServiceDetails"
    },
    "DeactivatePartyRequest": {
      "type": "object",
      "properties": {
        "partycode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "DeactivatePartyRequest"
    },
    "DeactivatePartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "DeactivatePartyResponse"
    },
    "DeathBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "coverorRider": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "disabilityApprovedAmount": {
          "type": "string"
        },
        "loading": {
          "type": "integer",
          "format": "int64"
        },
        "pendType": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "DeathBenefitServiceDetails"
    },
    "DeathBenifitService": {
      "type": "object",
      "properties": {
        "deathBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeathBenefitServiceDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "DeathBenifitService"
    },
    "DeathClaimRelatedInformation": {
      "type": "object",
      "properties": {
        "NumberofDependentChildren": {
          "type": "integer",
          "format": "int64"
        },
        "autopsyInquestRequired": {
          "type": "string"
        },
        "dateofDeath": {
          "type": "string"
        },
        "dependentChildren": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "distancebetweenPlaceofaccidentinjuryandprimaryresidence": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "namesandAddressesofanywitnessesoftheAccident": {
          "type": "string"
        },
        "numberofDependentChildren": {
          "type": "integer",
          "format": "int64"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "DeathClaimRelatedInformation"
    },
    "DeletePartyContactRequest": {
      "type": "object",
      "properties": {
        "partycode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "typeofcontact": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "DeletePartyContactRequest"
    },
    "DeletePartyContactResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "DeletePartyContactResponse"
    },
    "DeletePartyContactResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "DeletePartyContactResponse_V13"
    },
    "DeleteRiskRequest": {
      "type": "object",
      "properties": {
        "lstDeleteRiskResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeleteRiskResult"
          }
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "DeleteRiskRequest"
    },
    "DeleteRiskResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string"
        },
        "riskCode": {
          "type": "string"
        }
      },
      "title": "DeleteRiskResult"
    },
    "DetailClaimReportResult": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "rejectedClaimCount": {
          "type": "string"
        },
        "settledClaimCount": {
          "type": "string"
        },
        "underProcessedClaimCount": {
          "type": "string"
        }
      },
      "title": "DetailClaimReportResult"
    },
    "DisableRequireRequest": {
      "type": "object",
      "properties": {
        "branchid": {
          "type": "string"
        },
        "claimid": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "entityid": {
          "type": "string"
        },
        "policyid": {
          "type": "string"
        },
        "riskid": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "subentityid": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "DisableRequireRequest"
    },
    "DisableRequireResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "isButtonTobeAviable": {
          "type": "boolean"
        },
        "isdisableRequired": {
          "type": "string"
        },
        "isdisableRequiredForGrantedRole": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "DisableRequireResponse"
    },
    "DislocationBenefitService": {
      "type": "object",
      "properties": {
        "dislocationBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DislocationBenefitServiceDetails"
          }
        }
      },
      "title": "DislocationBenefitService"
    },
    "DislocationBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "amountPayable": {
          "type": "integer",
          "format": "int64"
        },
        "anesthesiaApplied": {
          "type": "string"
        },
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "dateofService": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "dislocationDetails": {
          "type": "integer",
          "format": "int64"
        },
        "multipleDislocationsApplicable": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "DislocationBenefitServiceDetails"
    },
    "DocumentList": {
      "type": "object",
      "properties": {
        "docCode": {
          "type": "string"
        },
        "docName": {
          "type": "string"
        }
      },
      "title": "DocumentList"
    },
    "DownloadFormWordingResponse": {
      "type": "object",
      "properties": {
        "formDownloadList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownloadFormWordingResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "DownloadFormWordingResponse"
    },
    "DownloadFormWordingResult": {
      "type": "object",
      "properties": {
        "form": {
          "type": "string"
        },
        "formType": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        }
      },
      "title": "DownloadFormWordingResult"
    },
    "EmergencyTreatmentService": {
      "type": "object",
      "properties": {
        "emergencyTreatmentServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmergencyTreatmentServiceDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "EmergencyTreatmentService"
    },
    "EmergencyTreatmentServiceDetails": {
      "type": "object",
      "properties": {
        "amountPayable": {
          "type": "integer",
          "format": "int64"
        },
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "cTScanApplied": {
          "type": "string"
        },
        "dateofService": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "serviceNo": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "EmergencyTreatmentServiceDetails"
    },
    "EmployeeBillingInfoDetails": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "EmployeeBillingInfoDetails"
    },
    "EmployeeClassification": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "categorySerialNo": {
          "type": "string"
        },
        "lstEmployeeClassificationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeClassificationDetails"
          }
        }
      },
      "title": "EmployeeClassification"
    },
    "EmployeeClassificationDetails": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "EmployeeClassificationDetails"
    },
    "EmployeeClassificationFetch": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categoryParamValueList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryParamValueList"
          }
        },
        "categoryPropDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryPropDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "EmployeeClassificationFetch"
    },
    "EmployeeClassificationInfo": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "EmployeeClassificationInfo"
    },
    "EmployerBasicDetails": {
      "type": "object",
      "properties": {
        "paramName": {
          "type": "string"
        },
        "paramValue": {
          "type": "string"
        }
      },
      "title": "EmployerBasicDetails"
    },
    "EmployerBillingContactDetails": {
      "type": "object",
      "properties": {
        "paramName": {
          "type": "string"
        },
        "paramValue": {
          "type": "string"
        }
      },
      "title": "EmployerBillingContactDetails"
    },
    "EmployerContactDetails": {
      "type": "object",
      "properties": {
        "paramName": {
          "type": "string"
        },
        "paramValue": {
          "type": "string"
        }
      },
      "title": "EmployerContactDetails"
    },
    "EmployerCreationRequest": {
      "type": "object",
      "properties": {
        "lstEmployerDeatils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerDetails"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "EmployerCreationRequest"
    },
    "EmployerCreationResponse": {
      "type": "object",
      "properties": {
        "lstEmployerId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "EmployerCreationResponse"
    },
    "EntityBrokerOfRecord": {
      "type": "object",
      "properties": {
        "lstBrokerofRecordsContactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerProperty"
          }
        },
        "lstBrokerofRecordsOwnDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerProperty"
          }
        }
      },
      "title": "EntityBrokerOfRecord"
    },
    "EntityBrokerofRecordsDetails": {
      "type": "object",
      "properties": {
        "lstBrokerofRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityBrokerOfRecord"
          }
        }
      },
      "title": "EntityBrokerofRecordsDetails"
    },
    "EntityContactPerson": {
      "type": "object",
      "properties": {
        "lstContactPersonContactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerProperty"
          }
        },
        "lstContactPersonOwnDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerProperty"
          }
        }
      },
      "title": "EntityContactPerson"
    },
    "EntityContactPersonDetails": {
      "type": "object",
      "properties": {
        "lstContactPerson": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityContactPerson"
          }
        }
      },
      "title": "EntityContactPersonDetails"
    },
    "EntityEmployerDetails": {
      "type": "object",
      "properties": {
        "lstBrokerofRecordsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityBrokerofRecordsDetails"
          }
        },
        "lstContactPersonDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityContactPersonDetails"
          }
        },
        "lstEmployerContactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerProperty"
          }
        },
        "lstEmployerOwnDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityEmployerProperty"
          }
        }
      },
      "title": "EntityEmployerDetails"
    },
    "EntityEmployerProperty": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "EntityEmployerProperty"
    },
    "EntitySchemeApplicableStates": {
      "type": "object",
      "properties": {
        "stateCode": {
          "type": "string"
        },
        "stateName": {
          "type": "string"
        }
      },
      "title": "EntitySchemeApplicableStates"
    },
    "EntitySchemeCover": {
      "type": "object",
      "properties": {
        "coverCode": {
          "type": "string"
        },
        "coverName": {
          "type": "string"
        },
        "lstEntitySchemeCoverDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySchemeCoverDetails"
          }
        }
      },
      "title": "EntitySchemeCover"
    },
    "EntitySchemeCoverDetails": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "EntitySchemeCoverDetails"
    },
    "EntitySchemePlan": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "lstEntitySchemeCover": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySchemeCover"
          }
        },
        "planCode": {
          "type": "string"
        },
        "planName": {
          "type": "string"
        }
      },
      "title": "EntitySchemePlan"
    },
    "EntitySchemeProduct": {
      "type": "object",
      "properties": {
        "lstEntitySchemeApplicableStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySchemeApplicableStates"
          }
        },
        "lstEntitySchemePlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySchemePlan"
          }
        },
        "lstEntitySchemeQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySchemeQuestions"
          }
        },
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "strLob": {
          "type": "string"
        }
      },
      "title": "EntitySchemeProduct"
    },
    "EntitySchemeQuestions": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "EntitySchemeQuestions"
    },
    "EntitySchemeRequest": {
      "type": "object",
      "properties": {
        "lstEntitySchemeProduct": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySchemeProduct"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strSchemeNo": {
          "type": "string"
        },
        "transactionCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "EntitySchemeRequest"
    },
    "EntitySchemeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      },
      "title": "EntitySchemeResponse"
    },
    "EntityWorkItemDetails": {
      "type": "object",
      "properties": {
        "assign": {
          "type": "string"
        },
        "assignedTeamName": {
          "type": "string"
        },
        "assignedTo": {
          "type": "string"
        },
        "assignmentIndicator": {
          "type": "string"
        },
        "lead": {
          "type": "string"
        },
        "pendingDays": {
          "type": "string"
        },
        "pendingFrom": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "queue": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "targetDate": {
          "type": "string"
        },
        "workItemNumber": {
          "type": "string"
        }
      },
      "title": "EntityWorkItemDetails"
    },
    "Errors": {
      "type": "object",
      "properties": {
        "applicableField": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Errors"
    },
    "ExecuteReferralRequest": {
      "type": "object",
      "properties": {
        "BranchID": {
          "type": "string"
        },
        "PolicyID": {
          "type": "string"
        },
        "eventCode": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "riskID": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "taskID": {
          "type": "string"
        },
        "transitionID": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ExecuteReferralRequest"
    },
    "ExecuteReferralResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ExecuteReferralResponse"
    },
    "ExistingPolDetailsList": {
      "type": "object",
      "properties": {
        "paramNameValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalNumber": {
          "type": "string"
        }
      },
      "title": "ExistingPolDetailsList"
    },
    "ExistingPolDetailsRequest": {
      "type": "object",
      "properties": {
        "policyDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExistingPolDetailsList"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ExistingPolDetailsRequest"
    },
    "ExistingPolDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ExistingPolDetailsResponse"
    },
    "ExpandedBenefitService": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "expandedBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpandedBenefitServiceDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ExpandedBenefitService"
    },
    "ExpandedBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "StartDate": {
          "type": "string"
        },
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "coverUnit": {
          "type": "string"
        },
        "coverorRider": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "discountPercentage": {
          "type": "integer",
          "format": "int64"
        },
        "pendType": {
          "type": "string"
        },
        "rejectedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "skinGraftsApplied": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "ExpandedBenefitServiceDetails"
    },
    "FetchAgentDetailsRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchAgentDetailsRequest"
    },
    "FetchAgentDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "partyDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchPartyDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "FetchAgentDetailsResponse"
    },
    "FetchAgentProfileResponse": {
      "type": "object",
      "properties": {
        "addressDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDetailList"
          }
        },
        "basicDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicDetailList"
          }
        },
        "contactDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetailList"
          }
        },
        "generalDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneralDetailList"
          }
        },
        "nationalIdntDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NationalIdntDetailList"
          }
        },
        "otherDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherDetailList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchAgentProfileResponse"
    },
    "FetchAgentResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchAgentResponse"
    },
    "FetchBankResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchBankResponse"
    },
    "FetchBeneficiaryDetailsRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchBeneficiaryDetailsRequest"
    },
    "FetchBeneficiaryDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "partyDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchPartyDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "FetchBeneficiaryDetailsResponse"
    },
    "FetchBeneficiaryResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchBeneficiaryResponse"
    },
    "FetchBenefitandRiderDetailsResponse": {
      "type": "object",
      "properties": {
        "benefitList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BenefitList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "riderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiderList"
          }
        }
      },
      "title": "FetchBenefitandRiderDetailsResponse"
    },
    "FetchBrokerDetailsRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchBrokerDetailsRequest"
    },
    "FetchBrokerDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "partyDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchPartyDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "FetchBrokerDetailsResponse"
    },
    "FetchBrokerResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchBrokerResponse"
    },
    "FetchClaimReportResponse": {
      "type": "object",
      "properties": {
        "lstDetailClaimReportResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetailClaimReportResult"
          }
        },
        "lstMonthWiseValueList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthWiseValueList"
          }
        },
        "lstProductWiseClaimCountResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductWiseClaimCountResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchClaimReportResponse"
    },
    "FetchClaimReportResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstDetailClaimReportResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetailClaimReportResult"
          }
        },
        "lstMonthWiseValueList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthWiseValueList"
          }
        },
        "lstProductWiseClaimCountResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductWiseClaimCountResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchClaimReportResponse_V13"
    },
    "FetchClaimRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchClaimRequest"
    },
    "FetchClaimRequest_V13": {
      "type": "object",
      "properties": {
        "flag": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchClaimRequest_V13"
    },
    "FetchClaimResponse": {
      "type": "object",
      "properties": {
        "flag": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchClaimResultSet"
          }
        }
      },
      "title": "FetchClaimResponse"
    },
    "FetchClaimResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "flag": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchClaimResultSet"
          }
        }
      },
      "title": "FetchClaimResponse_V13"
    },
    "FetchClaimantResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchClaimantResponse"
    },
    "FetchClinicianResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchClinicianResponse"
    },
    "FetchCommissionReportResponse": {
      "type": "object",
      "properties": {
        "monthWiseReportList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthWiseValueList"
          }
        },
        "productList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductListForCommission"
          }
        },
        "renewNewBusinessList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewNewBusinessListForCommission"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchCommissionReportResponse"
    },
    "FetchCommissionReportResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "monthWiseReportList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthWiseValueList"
          }
        },
        "productList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductListForCommission"
          }
        },
        "renewNewBusinessList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewNewBusinessListForCommission"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchCommissionReportResponse_V13"
    },
    "FetchCommissionStatementResponse": {
      "type": "object",
      "properties": {
        "commissionStatementList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionStatementList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchCommissionStatementResponse"
    },
    "FetchCommissionStatementResponse_V13": {
      "type": "object",
      "properties": {
        "commissionStatementList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionStatementList"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchCommissionStatementResponse_V13"
    },
    "FetchCustomerDetailsResponse": {
      "type": "object",
      "properties": {
        "contactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetails"
          }
        },
        "personalDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonalDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchCustomerDetailsResponse"
    },
    "FetchCustomerDetailsResponse_V13": {
      "type": "object",
      "properties": {
        "contactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetails"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "personalDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonalDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchCustomerDetailsResponse_V13"
    },
    "FetchDocumentCheckListResponse": {
      "type": "object",
      "properties": {
        "documentNameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchDocumentCheckListResult"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchDocumentCheckListResponse"
    },
    "FetchDocumentCheckListResult": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        }
      },
      "title": "FetchDocumentCheckListResult"
    },
    "FetchEmployeeBillingDetails": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "FetchEmployeeBillingDetails"
    },
    "FetchEmployeeBillingResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstFetchEmployeeBillingDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchEmployeeBillingDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchEmployeeBillingResponse"
    },
    "FetchEmployeeResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchEmployeeResponse"
    },
    "FetchEmployerDetailsListResopnse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstEmployerBasicDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployerBasicDetails"
          }
        },
        "lstEmployerBillingContactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployerBillingContactDetails"
          }
        },
        "lstEmployerContactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployerContactDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchEmployerDetailsListResopnse"
    },
    "FetchEmployerResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchEmployerResponse"
    },
    "FetchInsuredTypeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "familySize": {
          "type": "string"
        },
        "insuredTypeResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchInsuredTypeResultResponse"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchInsuredTypeResponse"
    },
    "FetchInsuredTypeResultResponse": {
      "type": "object",
      "properties": {
        "insuredType": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "FetchInsuredTypeResultResponse"
    },
    "FetchMemberResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchMemberResponse"
    },
    "FetchNetworkResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchNetworkResponse"
    },
    "FetchParamValueResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "paramValueList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchParamValueResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchParamValueResponse"
    },
    "FetchParamValueResult": {
      "type": "object",
      "properties": {
        "paramaterValue": {
          "type": "string"
        }
      },
      "title": "FetchParamValueResult"
    },
    "FetchPaymentCycleRequest": {
      "type": "object",
      "properties": {
        "invoiceNo": {
          "type": "string"
        },
        "paymentPurpose": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchPaymentCycleRequest"
    },
    "FetchPaymentCycleResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "fetchPaymentCycleResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchPaymentCycleResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "FetchPaymentCycleResponse"
    },
    "FetchPaymentCycleResult": {
      "type": "object",
      "properties": {
        "actualPaymentDate": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "dueAmount": {
          "type": "string"
        },
        "paymentPurpose": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "FetchPaymentCycleResult"
    },
    "FetchPayorResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchPayorResponse"
    },
    "FetchPolicyDetailsRequest": {
      "type": "object",
      "properties": {
        "policyNumber": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        }
      },
      "title": "FetchPolicyDetailsRequest"
    },
    "FetchPolicyDetailsResponse": {
      "type": "object",
      "properties": {
        "policyBasicDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyBasicDetailsResult"
          }
        },
        "policyBilliingResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyBilliingResult"
          }
        },
        "policyCancellationResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyCancellationResult"
          }
        },
        "policyHeaderDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyHeaderDetailsResult"
          }
        },
        "policyHolderDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyHolderDetailsResult"
          }
        },
        "policyPlanDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyPlanDetailsResult"
          }
        },
        "policySummaryResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicySummaryResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchPolicyDetailsResponse"
    },
    "FetchPolicyHolderDetailsRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchPolicyHolderDetailsRequest"
    },
    "FetchPolicyHolderDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "partyDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchPartyDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "FetchPolicyHolderDetailsResponse"
    },
    "FetchPolicyHolderResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchPolicyHolderResponse"
    },
    "FetchPolicyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchPolicyRequest"
    },
    "FetchPolicyRequest_V13": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchPolicyRequest_V13"
    },
    "FetchPolicyResponse": {
      "type": "object",
      "properties": {
        "flag": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchResultSet"
          }
        }
      },
      "title": "FetchPolicyResponse"
    },
    "FetchPolicyResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "flag": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchResultSet"
          }
        }
      },
      "title": "FetchPolicyResponse_V13"
    },
    "FetchPremiumDetailsRequest": {
      "type": "object",
      "properties": {
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchPremiumDetailsRequest"
    },
    "FetchPremiumDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "premiumLevel1Result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumLevel1Result"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchPremiumDetailsResponse"
    },
    "FetchProductDetailsLOBResult": {
      "type": "object",
      "properties": {
        "lobCode": {
          "type": "string"
        },
        "lobName": {
          "type": "string"
        }
      },
      "title": "FetchProductDetailsLOBResult"
    },
    "FetchProductDetailsResponse": {
      "type": "object",
      "properties": {
        "lobList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchProductDetailsLOBResult"
          }
        },
        "productNameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchProductDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchProductDetailsResponse"
    },
    "FetchProductDetailsResult": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "lineOfBusiness": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "title": "FetchProductDetailsResult"
    },
    "FetchProviderResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "FetchProviderResponse"
    },
    "FetchRenewedPolicyDetailsResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDetailList"
          }
        },
        "contactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetailList"
          }
        },
        "paymentFrequency": {
          "type": "string"
        },
        "premiumDueDate": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchRenewedPolicyDetailsResponse"
    },
    "FetchRenewedPolicyDetailsResponse_V13": {
      "type": "object",
      "properties": {
        "address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDetailList"
          }
        },
        "contactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetailList"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "paymentFrequency": {
          "type": "string"
        },
        "premiumDueDate": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchRenewedPolicyDetailsResponse_V13"
    },
    "FetchReportResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "monthWiseReportList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthWiseValueList"
          }
        },
        "productList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductList"
          }
        },
        "renewNewBusinessList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewNewBusinessList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchReportResponse"
    },
    "FetchSMTPList": {
      "type": "object",
      "properties": {
        "attachmentFlag": {
          "type": "string"
        },
        "attachments": {
          "type": "string"
        },
        "bccData": {
          "type": "string"
        },
        "bodyData": {
          "type": "string"
        },
        "ccData": {
          "type": "string"
        },
        "commRefId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        },
        "communicationType": {
          "type": "string"
        },
        "docPath": {
          "type": "string"
        },
        "fromData": {
          "type": "string"
        },
        "mailEditableFlag": {
          "type": "string"
        },
        "smtpClob": {
          "type": "string"
        },
        "smtpRefKey": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "subData": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "toData": {
          "type": "string"
        }
      },
      "title": "FetchSMTPList"
    },
    "FetchSMTPResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "fetchSMTPList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchSMTPList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "FetchSMTPResponse"
    },
    "FetchStakeRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "FetchStakeRequest"
    },
    "FetchStakeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "flag": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessFetchResultSet"
          }
        }
      },
      "title": "FetchStakeResponse"
    },
    "FracturesBenefitService": {
      "type": "object",
      "properties": {
        "fracturesBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FracturesBenefitServiceDetails"
          }
        }
      },
      "title": "FracturesBenefitService"
    },
    "FracturesBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "amountPayable": {
          "type": "integer",
          "format": "int64"
        },
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "chipInserted": {
          "type": "string"
        },
        "dateofService": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "repairApplicable": {
          "type": "string"
        },
        "serviceNo": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "FracturesBenefitServiceDetails"
    },
    "GeneralDetailList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "GeneralDetailList"
    },
    "GenericResopnse": {
      "type": "object",
      "properties": {
        "ResponseCode": {
          "type": "string"
        },
        "ResponseMessage": {
          "type": "string"
        }
      },
      "title": "GenericResopnse"
    },
    "GenericResopnse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GenericResopnse_V13"
    },
    "GenericTaskResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "genericTaskResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericTaskResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "GenericTaskResponse"
    },
    "GenericTaskResult": {
      "type": "object",
      "properties": {
        "alert": {
          "type": "string"
        },
        "dryId": {
          "type": "string"
        },
        "dryShortDsc": {
          "type": "string"
        },
        "drySts": {
          "type": "string"
        },
        "dryTrgtDate": {
          "type": "string"
        },
        "dtpName": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "refNumber": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "usrFirstName": {
          "type": "string"
        },
        "usrLastName": {
          "type": "string"
        },
        "usrMdlInit": {
          "type": "string"
        }
      },
      "title": "GenericTaskResult"
    },
    "GetAllMemberDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getAllMemberDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetAllMemberDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetAllMemberDetailsResponse"
    },
    "GetAllMemberDetailsResult": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "partyName": {
          "type": "string"
        },
        "relationshipCode": {
          "type": "string"
        },
        "relationshipName": {
          "type": "string"
        }
      },
      "title": "GetAllMemberDetailsResult"
    },
    "GetAnnualBalanceRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strGlCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetAnnualBalanceRequest"
    },
    "GetAnnualBalanceResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strClosingCreditBalance": {
          "type": "string"
        },
        "strClosingDebitBalance": {
          "type": "string"
        },
        "strFinancialYear": {
          "type": "string"
        },
        "strOpeningCreditBalance": {
          "type": "string"
        },
        "strOpeningDebitBalance": {
          "type": "string"
        }
      },
      "title": "GetAnnualBalanceResponse"
    },
    "GetBenefitListRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetBenefitListRequest"
    },
    "GetBenefitListResponse": {
      "type": "object",
      "properties": {
        "benefitList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetBenefitListResult"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetBenefitListResponse"
    },
    "GetBenefitListResult": {
      "type": "object",
      "properties": {
        "coverCode": {
          "type": "string"
        },
        "coverName": {
          "type": "string"
        }
      },
      "title": "GetBenefitListResult"
    },
    "GetClaimEnquiryDetailsResponse": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "string"
        },
        "claimDocumentResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimDocumentResult"
          }
        },
        "claimedAmount": {
          "type": "string"
        },
        "dateOfAdmission": {
          "type": "string"
        },
        "dateOfDischarge": {
          "type": "string"
        },
        "hospitalName": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetClaimEnquiryDetailsResponse"
    },
    "GetCustomersThroughLinkResponse": {
      "type": "object",
      "properties": {
        "customerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyHolderBasedOnStatusList"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "premiumGridPaintList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumGridPaintList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetCustomersThroughLinkResponse"
    },
    "GetDocumentListRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetDocumentListRequest"
    },
    "GetDocumentListResponse": {
      "type": "object",
      "properties": {
        "documentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetDocumentListResult"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetDocumentListResponse"
    },
    "GetDocumentListResult": {
      "type": "object",
      "properties": {
        "documentName": {
          "type": "string"
        }
      },
      "title": "GetDocumentListResult"
    },
    "GetFamilyPolicyAssociatedToGroupRequest": {
      "type": "object",
      "properties": {
        "groupPolicyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetFamilyPolicyAssociatedToGroupRequest"
    },
    "GetFamilyPolicyAssociatedToGroupResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "familyPolicyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetFamilyPolicyAssociatedToGroupResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetFamilyPolicyAssociatedToGroupResponse"
    },
    "GetFamilyPolicyAssociatedToGroupResult": {
      "type": "object",
      "properties": {
        "familyPolicyNo": {
          "type": "string"
        }
      },
      "title": "GetFamilyPolicyAssociatedToGroupResult"
    },
    "GetFollowUpRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetFollowUpRequest"
    },
    "GetFollowUpResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "followUpList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetFollowUpResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetFollowUpResponse"
    },
    "GetFollowUpResult": {
      "type": "object",
      "properties": {
        "assignedPersonal": {
          "type": "string"
        },
        "descriptionRemarks": {
          "type": "string"
        },
        "endorsementNumber": {
          "type": "string"
        },
        "endorsementType": {
          "type": "string"
        },
        "eventCode": {
          "type": "string"
        },
        "eventEffectiveDate": {
          "type": "string"
        },
        "followupDate": {
          "type": "string"
        },
        "followupTime": {
          "type": "string"
        },
        "jobStatus": {
          "type": "string"
        },
        "keyword": {
          "type": "string"
        },
        "policyFollowupStatus": {
          "type": "string"
        },
        "priorityIndicator": {
          "type": "string"
        }
      },
      "title": "GetFollowUpResult"
    },
    "GetInsuredDetailsResponse": {
      "type": "object",
      "properties": {
        "getInsuredDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetInsuredDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetInsuredDetailsResponse"
    },
    "GetInsuredDetailsResult": {
      "type": "object",
      "properties": {
        "benefits": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "healthCardNo": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "relationShip": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sumInsured": {
          "type": "string"
        }
      },
      "title": "GetInsuredDetailsResult"
    },
    "GetMemberDetailsRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "riskSerialNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetMemberDetailsRequest"
    },
    "GetMemberDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getMemberDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetMemberDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "GetMemberDetailsResponse"
    },
    "GetMemberDetailsResult": {
      "type": "object",
      "properties": {
        "dateOfBirth": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "memberStatus": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "GetMemberDetailsResult"
    },
    "GetMemberPlanCoverListRequest": {
      "type": "object",
      "properties": {
        "memberList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberList"
          }
        },
        "productCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetMemberPlanCoverListRequest"
    },
    "GetMemberPlanCoverListResponse": {
      "type": "object",
      "properties": {
        "coverLists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverList"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetMemberPlanCoverListResponse"
    },
    "GetPartyPhotoRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPartyPhotoRequest"
    },
    "GetPartyPhotoResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "image": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPartyPhotoResponse"
    },
    "GetPlanDetailsForMembersRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPlanDetailsForMembersRequest"
    },
    "GetPlanDetailsForMembersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getPlanDetailsForMembersResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPlanDetailsForMembersResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "GetPlanDetailsForMembersResponse"
    },
    "GetPlanDetailsForMembersResult": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "GetPlanDetailsForMembersResult"
    },
    "GetPolCustRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPolCustRequest"
    },
    "GetPolCustResponse": {
      "type": "object",
      "properties": {
        "lobCountList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LOBCountList"
          }
        },
        "policyCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyHolderCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyHolderStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyHolderStatusList"
          }
        },
        "policyStatusPaintList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyStatusPaintList"
          }
        },
        "premiumGridPaintList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumGridPaintList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolCustResponse"
    },
    "GetPolCustResponseForTPA": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "policyCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyCountBasedOnLOBListForTPA": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyCountBasedOnLOBListForTPA"
          }
        },
        "policyHolderBasedOnStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyHolderBasedOnStatusList"
          }
        },
        "policyHolderCount": {
          "type": "integer",
          "format": "int32"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolCustResponseForTPA"
    },
    "GetPolHolBirthdayListRequest": {
      "type": "object",
      "properties": {
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPolHolBirthdayListRequest"
    },
    "GetPolHolBirthdayListResponse": {
      "type": "object",
      "properties": {
        "policyHolderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolHolBirthdayListResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolHolBirthdayListResponse"
    },
    "GetPolHolBirthdayListResult": {
      "type": "object",
      "properties": {
        "birthDay": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "policyHolderName": {
          "type": "string"
        }
      },
      "title": "GetPolHolBirthdayListResult"
    },
    "GetPoliciesThroughLinkResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "policyCountBasedOnLOBList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyCountBasedOnLOBList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPoliciesThroughLinkResponse"
    },
    "GetPolicyDocumentChecklistRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPolicyDocumentChecklistRequest"
    },
    "GetPolicyDocumentChecklistResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getPolicyDocumentChecklistResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolicyDocumentChecklistResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "GetPolicyDocumentChecklistResponse"
    },
    "GetPolicyDocumentChecklistResult": {
      "type": "object",
      "properties": {
        "documentName": {
          "type": "string"
        }
      },
      "title": "GetPolicyDocumentChecklistResult"
    },
    "GetPolicyEndorsementlistRequest": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPolicyEndorsementlistRequest"
    },
    "GetPolicyEndorsementlistResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getPolicyEndorsementlistResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolicyEndorsementlistResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "GetPolicyEndorsementlistResponse"
    },
    "GetPolicyEndorsementlistResult": {
      "type": "object",
      "properties": {
        "effectiveDate": {
          "type": "string"
        },
        "endorsementLevel": {
          "type": "string"
        },
        "endorsementTime": {
          "type": "string"
        },
        "endorsementTypeDescription": {
          "type": "string"
        }
      },
      "title": "GetPolicyEndorsementlistResult"
    },
    "GetPolicyMemberCategoryAndPlanRequest": {
      "type": "object",
      "properties": {
        "idNumber": {
          "type": "string"
        },
        "idType": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPolicyMemberCategoryAndPlanRequest"
    },
    "GetPolicyMemberCategoryAndPlanResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "policyMemberCatPlanList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolicyMemberCategoryAndPlanResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolicyMemberCategoryAndPlanResponse"
    },
    "GetPolicyMemberCategoryAndPlanResult": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "planName": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        }
      },
      "title": "GetPolicyMemberCategoryAndPlanResult"
    },
    "GetPolicyMemberListRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetPolicyMemberListRequest"
    },
    "GetPolicyMemberListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "policyMemberList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolicyMemberListResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolicyMemberListResponse"
    },
    "GetPolicyMemberListResult": {
      "type": "object",
      "properties": {
        "dob": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "healthCardNumber": {
          "type": "string"
        },
        "memberStatus": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        }
      },
      "title": "GetPolicyMemberListResult"
    },
    "GetPolicyRenewalDetailsResponse": {
      "type": "object",
      "properties": {
        "getPolicyRenewalDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolicyRenewalDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolicyRenewalDetailsResponse"
    },
    "GetPolicyRenewalDetailsResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getPolicyRenewalDetailsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPolicyRenewalDetailsResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetPolicyRenewalDetailsResponse_V13"
    },
    "GetPolicyRenewalDetailsResult": {
      "type": "object",
      "properties": {
        "expiryDate": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string"
        },
        "partyName": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "policyTerm": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "revisedPremium": {
          "type": "string"
        }
      },
      "title": "GetPolicyRenewalDetailsResult"
    },
    "GetProductWisePlanResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "getProductWisePlanResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetProductWisePlanResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetProductWisePlanResponse"
    },
    "GetProductWisePlanResult": {
      "type": "object",
      "properties": {
        "plan": {
          "type": "string"
        },
        "product": {
          "type": "string"
        }
      },
      "title": "GetProductWisePlanResult"
    },
    "GetQuesionnaireResponse": {
      "type": "object",
      "properties": {
        "childQuestionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildQuestionList"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "questionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetQuesionnaireResponse"
    },
    "GetRelationshipRequest": {
      "type": "object",
      "properties": {
        "proposalNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetRelationshipRequest"
    },
    "GetRelationshipResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyRelationshipList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchRelationshipResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "GetRelationshipResponse"
    },
    "GetRuleResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "ruleDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleDetailsList"
          }
        }
      },
      "title": "GetRuleResponse"
    },
    "GetSchemeDetails": {
      "type": "object",
      "properties": {
        "categoryName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lob": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lstSchemeProduct": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeProduct"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "schemeProductPlanCoverProps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeProductPlanCoverProp"
          }
        },
        "schemeProductPlanCovers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeProductPlanCover"
          }
        },
        "schemeProductPlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeProductPlan"
          }
        },
        "schemeProductQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeProductQuestion"
          }
        }
      },
      "title": "GetSchemeDetails"
    },
    "GetTypeOfClaimsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "typeOfClaimsResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeOfClaimsResult"
          }
        }
      },
      "title": "GetTypeOfClaimsResponse"
    },
    "GetUserDetailsRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "strApplicationCode": {
          "type": "string"
        },
        "strPrivilegeCode": {
          "type": "string"
        },
        "strUserName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "GetUserDetailsRequest"
    },
    "GetUserDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strLastName": {
          "type": "string"
        },
        "strRoleCode": {
          "type": "string"
        },
        "strRoleName": {
          "type": "string"
        },
        "strUserCode": {
          "type": "string"
        }
      },
      "title": "GetUserDetailsResponse"
    },
    "GetVBZipCodeResponse": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "title": "GetVBZipCodeResponse"
    },
    "GetVBenefitRuleResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "ruleDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VBenefitRuleDetailsList"
          }
        },
        "strRuleEventCode": {
          "type": "string"
        },
        "strRuleName": {
          "type": "string"
        }
      },
      "title": "GetVBenefitRuleResponse"
    },
    "GetWorklistResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "worklistResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorklistResult"
          }
        }
      },
      "title": "GetWorklistResponse"
    },
    "HomecareSearchRequest": {
      "type": "object",
      "properties": {
        "cardNumber": {
          "type": "string"
        },
        "homecareNumber": {
          "type": "string"
        },
        "homecareStatus": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "HomecareSearchRequest"
    },
    "HomecareSearchResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "homecareSearchResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HomecareSearchResponseDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "HomecareSearchResponse"
    },
    "HomecareSearchResponseDetails": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string"
        },
        "homecareStatus": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "processingNumber": {
          "type": "string"
        }
      },
      "title": "HomecareSearchResponseDetails"
    },
    "HospitalizationBenefitService": {
      "type": "object",
      "properties": {
        "hospitalizationBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HospitalizationBenefitServiceDetails"
          }
        }
      },
      "title": "HospitalizationBenefitService"
    },
    "HospitalizationBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "amountPerDay": {
          "type": "number",
          "format": "double"
        },
        "approvedAmount": {
          "type": "number",
          "format": "double"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "dateofService": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "numberofDays": {
          "type": "number",
          "format": "double"
        },
        "pendType": {
          "type": "string"
        },
        "rejectedAmount": {
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "HospitalizationBenefitServiceDetails"
    },
    "HospitalizationClaimInformation": {
      "type": "object",
      "properties": {
        "ICD_10": {
          "type": "string"
        },
        "admissionDate": {
          "type": "string"
        },
        "diagnosis": {
          "type": "string"
        },
        "dischargeDate": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "findings": {
          "type": "string"
        },
        "hospitalDetails": {
          "type": "string"
        },
        "hospitalizationRequired": {
          "type": "string"
        },
        "icd_10": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "HospitalizationClaimInformation"
    },
    "InjuryBenefitService": {
      "type": "object",
      "properties": {
        "injuryBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjuryBenefitServiceDetails"
          }
        }
      },
      "title": "InjuryBenefitService"
    },
    "InjuryBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "number",
          "format": "double"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "disabilityBenefitPaidUpto": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "InjuryBenefitServiceDetails"
    },
    "InjuryClaimRelatedInformation": {
      "type": "object",
      "properties": {
        "arethereanycomplications": {
          "type": "string"
        },
        "cPTHCPCcode": {
          "type": "string"
        },
        "conditioncausedduetotheInjury": {
          "type": "string"
        },
        "dateofPatientreturningtoanyOccupation": {
          "type": "string"
        },
        "dateofPatientreturningtoregularOccupation": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "durationasaPatientwiththePhysician": {
          "type": "integer",
          "format": "int64"
        },
        "endDateofcontinuousdisability": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "girstSymptomDate": {
          "type": "string"
        },
        "haspatienteverhadsameorsimilarcondition": {
          "type": "string"
        },
        "insuredunabletowork": {
          "type": "string"
        },
        "isconditionduetopatientsemployment": {
          "type": "string"
        },
        "istheconditionduetopregnancy": {
          "type": "string"
        },
        "limitationsRestrictions": {
          "type": "string"
        },
        "natureandCauseofInjuryorCondition": {
          "type": "string"
        },
        "numberofDaysrestrictedtolightduty": {
          "type": "integer",
          "format": "int64"
        },
        "numberofDaysworkaffected": {
          "type": "integer",
          "format": "int64"
        },
        "physicianName": {
          "type": "string"
        },
        "prognosis": {
          "type": "string"
        },
        "referringPhysiciansDetailsforlast5years": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "startDateofcontinuousdisability": {
          "type": "string"
        },
        "surgeryperformed": {
          "type": "string"
        },
        "treatmentTerminationDate": {
          "type": "string"
        },
        "typeofDelivery": {
          "type": "string"
        }
      },
      "title": "InjuryClaimRelatedInformation"
    },
    "LOBCountList": {
      "type": "object",
      "properties": {
        "lobColor": {
          "type": "string"
        },
        "lobCount": {
          "type": "string"
        },
        "lobName": {
          "type": "string"
        }
      },
      "title": "LOBCountList"
    },
    "LinkRelatedPartyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "partyCodeToBeLinked": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "stakeCodeToBeLinked": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "LinkRelatedPartyRequest"
    },
    "LinkRelatedPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "partyCodeToBeLinked": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchPartyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyResult"
          }
        },
        "stakeCodeToBeLinked": {
          "type": "string"
        }
      },
      "title": "LinkRelatedPartyResponse"
    },
    "ListForeignExchangeRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ListForeignExchangeRequest"
    },
    "ListForeignExchangeResponse": {
      "type": "object",
      "properties": {
        "Currency": {
          "type": "string"
        },
        "ExchangeRate": {
          "type": "string"
        },
        "TransactionDate": {
          "type": "string"
        }
      },
      "title": "ListForeignExchangeResponse"
    },
    "ListForeignExchangeResponseList": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "forExcResponseList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListForeignExchangeResponse"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ListForeignExchangeResponseList"
    },
    "ListNoteRequest": {
      "type": "object",
      "properties": {
        "entityNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ListNoteRequest"
    },
    "ListNoteResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "listNoteResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListNoteResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "ListNoteResponse"
    },
    "ListNoteResult": {
      "type": "object",
      "properties": {
        "assignedUserCode": {
          "type": "string"
        },
        "assignedUserName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string"
        },
        "longDescription": {
          "type": "string"
        },
        "noteDescription": {
          "type": "string"
        }
      },
      "title": "ListNoteResult"
    },
    "ListOpenTaskRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "taskStatus": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ListOpenTaskRequest"
    },
    "ListPrintReceiptResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstPrintReceipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReceipt"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ListPrintReceiptResponse"
    },
    "ListSpecificTaskRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ListSpecificTaskRequest"
    },
    "ListTaskForUserRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ListTaskForUserRequest"
    },
    "ListTaskRequest": {
      "type": "object",
      "properties": {
        "claimNo": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "taskStatus": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ListTaskRequest"
    },
    "ListTxnRuleListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstTxnRuleList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TxnRuleList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ListTxnRuleListResponse"
    },
    "LocatePartyResponse": {
      "type": "object",
      "properties": {
        "locatePartyResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocatePartyResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "LocatePartyResponse"
    },
    "LocatePartyResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "locatePartyResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocatePartyResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "LocatePartyResponse_V13"
    },
    "LocatePartyResult": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "landLineNumber": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "LocatePartyResult"
    },
    "LogInRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "LogInRequest"
    },
    "LogInResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "title": "LogInResponse"
    },
    "LogOutRequest": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "LogOutRequest"
    },
    "LogOutResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "LogOutResponse"
    },
    "LookAccountTypeRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "LookAccountTypeRequest"
    },
    "LookAccountTypeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strAccountDesc": {
          "type": "string"
        },
        "strAccountLevel": {
          "type": "string"
        },
        "strAccountNature": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        }
      },
      "title": "LookAccountTypeResponse"
    },
    "MasterScheme": {
      "type": "object",
      "properties": {
        "vProductCode": {
          "type": "string"
        },
        "vSchemeId": {
          "type": "string"
        },
        "vSchemeNo": {
          "type": "string"
        },
        "vSchemeType": {
          "type": "string"
        }
      },
      "title": "MasterScheme"
    },
    "MasterSchemeProductList": {
      "type": "object",
      "properties": {
        "schProductCode": {
          "type": "string"
        },
        "schProductName": {
          "type": "string"
        },
        "schProductType": {
          "type": "string"
        },
        "schSchemeId": {
          "type": "string"
        }
      },
      "title": "MasterSchemeProductList"
    },
    "MemberDetailList": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "MemberDetailList"
    },
    "MemberList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "MemberList"
    },
    "ModifyAgentRequest": {
      "type": "object",
      "properties": {
        "endorsementDescription": {
          "type": "string"
        },
        "endorsementEffectiveDate": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "typeOfAction": {
          "type": "string"
        },
        "typeOfEndorsement": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ModifyAgentRequest"
    },
    "ModifyBeneficiaryRequest": {
      "type": "object",
      "properties": {
        "endorsementDescription": {
          "type": "string"
        },
        "endorsementEffectiveDate": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "typeOfAction": {
          "type": "string"
        },
        "typeOfEndorsement": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ModifyBeneficiaryRequest"
    },
    "ModifyPolicyPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ModifyPolicyPartyResponse"
    },
    "MonthWiseValueList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueBreakUpList"
          }
        }
      },
      "title": "MonthWiseValueList"
    },
    "NationalIdntDetailList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "NationalIdntDetailList"
    },
    "NotifyClaimRequest": {
      "type": "object",
      "properties": {
        "benefitClaimed": {
          "type": "string"
        },
        "claimIntimatedThrough": {
          "type": "string"
        },
        "dateOfAccident": {
          "type": "string"
        },
        "dateOfDeath": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "notifierDetails": {
          "type": "string"
        },
        "timeOfAccident": {
          "type": "string"
        },
        "timeOfDeath": {
          "type": "string"
        },
        "typeOfClaim": {
          "type": "string"
        },
        "typeOfDocument": {
          "type": "string"
        }
      },
      "title": "NotifyClaimRequest"
    },
    "OpenAccDetailsListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "openAccDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAccDetailsResponse"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "OpenAccDetailsListResponse"
    },
    "OpenAccDetailsRequest": {
      "type": "object",
      "properties": {
        "glCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "OpenAccDetailsRequest"
    },
    "OpenAccDetailsResponse": {
      "type": "object",
      "properties": {
        "accAccountId": {
          "type": "string"
        },
        "accAccountLevel": {
          "type": "string"
        },
        "accAccoutCode": {
          "type": "string"
        },
        "accCurrentCreditBalance": {
          "type": "string"
        },
        "accCurrentDebitBalance": {
          "type": "string"
        },
        "accGlCode": {
          "type": "string"
        },
        "accGlDescription": {
          "type": "string"
        },
        "accOpeningCreditBalance": {
          "type": "string"
        },
        "accOpeningDebitBalance": {
          "type": "string"
        }
      },
      "title": "OpenAccDetailsResponse"
    },
    "OpenAccTxnRuleDtlsRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccTxnCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "OpenAccTxnRuleDtlsRequest"
    },
    "OtherDetailList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "OtherDetailList"
    },
    "ParameterizedPolicySearchRequest": {
      "type": "object",
      "properties": {
        "policyHolderName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ParameterizedPolicySearchRequest"
    },
    "ParameterizedPolicySearchRequest_V13": {
      "type": "object",
      "properties": {
        "policyHolderName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "ParameterizedPolicySearchRequest_V13"
    },
    "ParameterizedPolicySearchResponse": {
      "type": "object",
      "properties": {
        "policyDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterizedPolicySearchResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ParameterizedPolicySearchResponse"
    },
    "ParameterizedPolicySearchResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "policyDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterizedPolicySearchResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ParameterizedPolicySearchResponse_V13"
    },
    "ParameterizedPolicySearchResult": {
      "type": "object",
      "properties": {
        "policyEffectiveDate": {
          "type": "string"
        },
        "policyHolderName": {
          "type": "string"
        },
        "policyStartDate": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "policySubStatus": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        }
      },
      "title": "ParameterizedPolicySearchResult"
    },
    "PartialPermanentDisabilityService": {
      "type": "object",
      "properties": {
        "partialPermanentDisabilityServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartialPermanentDisabilityServiceDetails"
          }
        }
      },
      "title": "PartialPermanentDisabilityService"
    },
    "PartialPermanentDisabilityServiceDetails": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "disabilityBenefitPaidUpto": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "serviceNo": {
          "type": "string"
        }
      },
      "title": "PartialPermanentDisabilityServiceDetails"
    },
    "PartyDetails": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PartyDetails"
    },
    "PersonalDetails": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PersonalDetails"
    },
    "PolicyAPPSUMMResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyAPPSUMMResult"
    },
    "PolicyBasicDetailsResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyBasicDetailsResult"
    },
    "PolicyBilliingResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyBilliingResult"
    },
    "PolicyCancellationResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyCancellationResult"
    },
    "PolicyCountBasedOnLOBList": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "initiationDate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policyHolderName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyPremium": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "title": "PolicyCountBasedOnLOBList"
    },
    "PolicyCountBasedOnLOBListForTPA": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "initiationDate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policyHolderName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyPremium": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "renewalFlag": {
          "type": "string"
        }
      },
      "title": "PolicyCountBasedOnLOBListForTPA"
    },
    "PolicyDocumentDownloadResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "formDownloadList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentDownloadResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PolicyDocumentDownloadResponse"
    },
    "PolicyDocumentDownloadResult": {
      "type": "object",
      "properties": {
        "downloadLink": {
          "type": "string"
        },
        "formType": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        }
      },
      "title": "PolicyDocumentDownloadResult"
    },
    "PolicyGroupAccIndvSummaryRequest": {
      "type": "object",
      "properties": {
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PolicyGroupAccIndvSummaryRequest"
    },
    "PolicyHeaderDetailsResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyHeaderDetailsResult"
    },
    "PolicyHolderBasedOnStatusList": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyHolderName": {
          "type": "string"
        },
        "premiumPaid": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "PolicyHolderBasedOnStatusList"
    },
    "PolicyHolderDetailsResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyHolderDetailsResult"
    },
    "PolicyHolderStatusList": {
      "type": "object",
      "properties": {
        "polHolderColor": {
          "type": "string"
        },
        "polHolderCount": {
          "type": "string"
        },
        "polHolderStatus": {
          "type": "string"
        }
      },
      "title": "PolicyHolderStatusList"
    },
    "PolicyIndvAccSummaryRequest": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PolicyIndvAccSummaryRequest"
    },
    "PolicyMember": {
      "type": "object",
      "properties": {
        "lstContactList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        },
        "lstCoverList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cover"
          }
        },
        "lstMemberDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberDetailList"
          }
        },
        "lstPartyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyDetails"
          }
        }
      },
      "title": "PolicyMember"
    },
    "PolicyPLCURResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyPLCURResult"
    },
    "PolicyParty": {
      "type": "object",
      "properties": {
        "lstContactList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        },
        "lstPartyDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberDetailList"
          }
        },
        "lstPartyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyDetails"
          }
        }
      },
      "title": "PolicyParty"
    },
    "PolicyPlanDetailsResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicyPlanDetailsResult"
    },
    "PolicyReportDetails": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string"
        },
        "newBusinessPremium": {
          "type": "string"
        },
        "renewedPolicyPremium": {
          "type": "string"
        }
      },
      "title": "PolicyReportDetails"
    },
    "PolicyReportResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "polCount": {
          "type": "string"
        },
        "policyReportDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyReportDetails"
          }
        },
        "productTypeWiseCountList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTypeWiseCountList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PolicyReportResponse"
    },
    "PolicyRiskEndorsementRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strEndorsementDescription": {
          "type": "string"
        },
        "strEndorsementEffectiveDate": {
          "type": "string"
        },
        "strMemberUniqueIdentifier": {
          "type": "string"
        },
        "strPolicyNumber": {
          "type": "string"
        },
        "strProdutCode": {
          "type": "string"
        },
        "strTypeofEndorsement": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PolicyRiskEndorsementRequest"
    },
    "PolicyRiskEndorsementResponse": {
      "type": "object",
      "properties": {
        "ResponseCode": {
          "type": "string"
        },
        "ResponseMessage": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strMemberUniqueIdentifier": {
          "type": "string"
        },
        "strPolicyNumber": {
          "type": "string"
        }
      },
      "title": "PolicyRiskEndorsementResponse"
    },
    "PolicySUMGRIDResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicySUMGRIDResult"
    },
    "PolicyStatusActionRequest": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PolicyStatusActionRequest"
    },
    "PolicyStatusActionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "proposalNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PolicyStatusActionResponse"
    },
    "PolicyStatusPaintList": {
      "type": "object",
      "properties": {
        "policyColor": {
          "type": "string"
        },
        "policyCount": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        }
      },
      "title": "PolicyStatusPaintList"
    },
    "PolicySummaryRequest": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PolicySummaryRequest"
    },
    "PolicySummaryResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "policyAPPSUMMResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAPPSUMMResult"
          }
        },
        "policyPLCURResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyPLCURResult"
          }
        },
        "policySUMGRIDResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicySUMGRIDResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PolicySummaryResponse"
    },
    "PolicySummaryResult": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PolicySummaryResult"
    },
    "PreAuthorizationSearchRequest": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "preAuthorizationNumber": {
          "type": "string"
        },
        "preAuthorizationStatus": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PreAuthorizationSearchRequest"
    },
    "PreAuthorizationSearchResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "preauthorizationSearchResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreAuthorizationSearchResponseDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PreAuthorizationSearchResponse"
    },
    "PreAuthorizationSearchResponseDetails": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "string"
        },
        "memberName": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "preauthorizationDate": {
          "type": "string"
        },
        "preauthorizationNumber": {
          "type": "string"
        },
        "preauthorizationStatus": {
          "type": "string"
        }
      },
      "title": "PreAuthorizationSearchResponseDetails"
    },
    "PreAuthorizationStatusRequest": {
      "type": "object",
      "properties": {
        "preAuthorizationNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PreAuthorizationStatusRequest"
    },
    "PreAuthorizationStatusResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "preAuthorizationNumber": {
          "type": "string"
        },
        "preAuthorizationstatusCode": {
          "type": "string"
        },
        "preAuthorizationstatusDescription": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PreAuthorizationStatusResponse"
    },
    "PremCalcParameterList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "PremCalcParameterList"
    },
    "PremiumCalcParamResponse": {
      "type": "object",
      "properties": {
        "premCalcParameterList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremCalcParameterList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "PremiumCalcParamResponse"
    },
    "PremiumCalculatorRequest": {
      "type": "object",
      "properties": {
        "benefit": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dateOfBirth": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memberSI": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "type": "string"
        },
        "premiumParameterList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productCode": {
          "type": "string"
        },
        "relation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rider": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tenure": {
          "type": "string"
        }
      },
      "title": "PremiumCalculatorRequest"
    },
    "PremiumCalculatorResponse": {
      "type": "object",
      "properties": {
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "grossPremium": {
          "type": "number",
          "format": "double"
        },
        "netPremium": {
          "type": "number",
          "format": "double"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "taxAmount": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "PremiumCalculatorResponse"
    },
    "PremiumGridPaintList": {
      "type": "object",
      "properties": {
        "premiumColor": {
          "type": "string"
        },
        "premiumCount": {
          "type": "string"
        },
        "premiumRange": {
          "type": "string"
        }
      },
      "title": "PremiumGridPaintList"
    },
    "PremiumLevel1Result": {
      "type": "object",
      "properties": {
        "annualIssuePremium": {
          "type": "string"
        },
        "annualNetPremium": {
          "type": "string"
        },
        "annualPremium": {
          "type": "string"
        },
        "discount": {
          "type": "string"
        },
        "effectiveDate": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "loading": {
          "type": "string"
        },
        "manualLoading": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        }
      },
      "title": "PremiumLevel1Result"
    },
    "PrintReceipt": {
      "type": "object",
      "properties": {
        "accTxnCode": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountingTxnDescription": {
          "type": "string"
        },
        "creditDebitInd": {
          "type": "string"
        },
        "txnMode": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        }
      },
      "title": "PrintReceipt"
    },
    "PrintReceiptRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccTranId": {
          "type": "string"
        },
        "strCurrencyIndicator": {
          "type": "string"
        },
        "strGLCode": {
          "type": "string"
        },
        "strPolicyId": {
          "type": "string"
        },
        "strRefNumber": {
          "type": "string"
        },
        "strVoucherAmount": {
          "type": "string"
        },
        "strVoucherNumber": {
          "type": "string"
        },
        "transactionDate": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "PrintReceiptRequest"
    },
    "ProductList": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "totalNewBusinessCount": {
          "type": "string"
        },
        "totalRenewalCount": {
          "type": "string"
        }
      },
      "title": "ProductList"
    },
    "ProductListForCommission": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "totalNewBusinessAmount": {
          "type": "string"
        },
        "totalRenewalAmount": {
          "type": "string"
        }
      },
      "title": "ProductListForCommission"
    },
    "ProductTypeWiseCountList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        }
      },
      "title": "ProductTypeWiseCountList"
    },
    "ProductWiseClaimCountResult": {
      "type": "object",
      "properties": {
        "claimCount": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "title": "ProductWiseClaimCountResult"
    },
    "ProposalDetailList": {
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "ProposalDetailList"
    },
    "QuestionList": {
      "type": "object",
      "properties": {
        "answer1": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answer2": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAns": {
          "type": "string"
        },
        "fetchValue": {
          "type": "string"
        },
        "freeText": {
          "type": "string"
        },
        "question": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        }
      },
      "title": "QuestionList"
    },
    "QuestionSet": {
      "type": "object",
      "properties": {
        "ansDescription": {
          "type": "string"
        },
        "ansValue": {
          "type": "string"
        },
        "answerId": {
          "type": "string"
        },
        "parentQuestionId": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        }
      },
      "title": "QuestionSet"
    },
    "REClaimActivityService": {
      "type": "object",
      "properties": {
        "rEClaimActivityServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/REClaimActivityServiceDetails"
          }
        }
      },
      "title": "REClaimActivityService"
    },
    "REClaimActivityServiceDetails": {
      "type": "object",
      "properties": {
        "activityID": {
          "type": "string"
        },
        "adjudicated": {
          "type": "string"
        },
        "approvedAmountWithTax": {
          "type": "number",
          "format": "double"
        },
        "approvedAmountWithoutTax": {
          "type": "number",
          "format": "double"
        },
        "approvedQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "approvedUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "authorizationNumber": {
          "type": "string"
        },
        "benefitCode": {
          "type": "string"
        },
        "benefitDescription": {
          "type": "string"
        },
        "claimCurrency": {
          "type": "string"
        },
        "claimedAmount": {
          "type": "number",
          "format": "double"
        },
        "claimedAmountBaseCurrency": {
          "type": "number",
          "format": "double"
        },
        "claimedGrossAmount": {
          "type": "number",
          "format": "double"
        },
        "claimedQuantity": {
          "type": "number",
          "format": "double"
        },
        "claimedUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "clinician": {
          "type": "string"
        },
        "coPayment": {
          "type": "number",
          "format": "double"
        },
        "conversionRate": {
          "type": "number",
          "format": "double"
        },
        "coverChildGroup": {
          "type": "string"
        },
        "deductibleValue": {
          "type": "number",
          "format": "double"
        },
        "eligibleQuantity": {
          "type": "number",
          "format": "double"
        },
        "eligibleUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "exGratia": {
          "type": "string"
        },
        "invoiceSerialNumber": {
          "type": "number",
          "format": "double"
        },
        "notes": {
          "type": "string"
        },
        "overriddenDenialCode": {
          "type": "string"
        },
        "overriddenPrice": {
          "type": "number",
          "format": "double"
        },
        "overriddenQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "overriddenRemarks": {
          "type": "string"
        },
        "paidAmount": {
          "type": "number",
          "format": "double"
        },
        "reasonforDifference": {
          "type": "string"
        },
        "referringClinician": {
          "type": "string"
        },
        "referringSpecialty": {
          "type": "string"
        },
        "referringSpecialtyDescription": {
          "type": "string"
        },
        "rejectedAmount": {
          "type": "number",
          "format": "double"
        },
        "remarks": {
          "type": "string"
        },
        "serviceDate": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "specialtyCode": {
          "type": "string"
        },
        "standardDenialCode": {
          "type": "string"
        },
        "tax": {
          "type": "number",
          "format": "double"
        },
        "unitTerm": {
          "type": "string"
        },
        "withholding": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "REClaimActivityServiceDetails"
    },
    "RecoveryWellnessBenefitService": {
      "type": "object",
      "properties": {
        "recoveryWellnessBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryWellnessBenefitServiceDetails"
          }
        }
      },
      "title": "RecoveryWellnessBenefitService"
    },
    "RecoveryWellnessBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "amountPerVisit": {
          "type": "number",
          "format": "double"
        },
        "approvedAmount": {
          "type": "number",
          "format": "double"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "numberofVisitsClaimed": {
          "type": "integer",
          "format": "int64"
        },
        "pendType": {
          "type": "string"
        },
        "treatmentEndDate": {
          "type": "string"
        },
        "treatmentStartDate": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "RecoveryWellnessBenefitServiceDetails"
    },
    "RelatedPartyResult": {
      "type": "object",
      "properties": {
        "linkedPartyCode": {
          "type": "string"
        },
        "linkedStakeCode": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        }
      },
      "title": "RelatedPartyResult"
    },
    "RelatedPartyResultSet": {
      "type": "object",
      "properties": {
        "relatedParty": {
          "type": "string"
        },
        "relatedStake": {
          "type": "string"
        }
      },
      "title": "RelatedPartyResultSet"
    },
    "RenewNewBusinessList": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string"
        },
        "newBusinessCount": {
          "type": "string"
        },
        "renewalCount": {
          "type": "string"
        }
      },
      "title": "RenewNewBusinessList"
    },
    "RenewNewBusinessListForCommission": {
      "type": "object",
      "properties": {
        "agentName": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "newBusinessCommissionAmount": {
          "type": "string"
        },
        "newBusinessRevenueAmount": {
          "type": "string"
        },
        "renewalCommissionAmount": {
          "type": "string"
        },
        "renewalRevenueAmount": {
          "type": "string"
        }
      },
      "title": "RenewNewBusinessListForCommission"
    },
    "RenewalPolicyListRequest": {
      "type": "object",
      "properties": {
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "RenewalPolicyListRequest"
    },
    "RenewalPolicyListResponse": {
      "type": "object",
      "properties": {
        "renewalPolicyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewalPolicyListResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "RenewalPolicyListResponse"
    },
    "RenewalPolicyListResult": {
      "type": "object",
      "properties": {
        "dateRangeDescription": {
          "type": "string"
        },
        "policyCount": {
          "type": "string"
        }
      },
      "title": "RenewalPolicyListResult"
    },
    "RiderList": {
      "type": "object",
      "properties": {
        "riderCode": {
          "type": "string"
        },
        "riderDescription": {
          "type": "string"
        }
      },
      "title": "RiderList"
    },
    "RuleDetailsList": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "attributeGroup": {
          "type": "string"
        },
        "dataLength": {
          "type": "string"
        },
        "dataTypeIndicator": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "domain": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mandatory": {
          "type": "string"
        },
        "parameterId": {
          "type": "string"
        },
        "precision": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        }
      },
      "title": "RuleDetailsList"
    },
    "SaveAccountDetailsRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        },
        "strBranchCode": {
          "type": "string"
        },
        "strCurrentCreditBalance": {
          "type": "string"
        },
        "strCurrentDebitBalance": {
          "type": "string"
        },
        "strDepartment": {
          "type": "string"
        },
        "strDescription": {
          "type": "string"
        },
        "strOpeningCreditBalance": {
          "type": "string"
        },
        "strOpeningDebitBalance": {
          "type": "string"
        },
        "strProductCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveAccountDetailsRequest"
    },
    "SaveAccountDetailsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strAccountCreationDate": {
          "type": "string"
        },
        "strAccountLevel": {
          "type": "string"
        },
        "strAccountNature": {
          "type": "string"
        },
        "strCurrentCreditBalance": {
          "type": "string"
        },
        "strCurrentDebitBalance": {
          "type": "string"
        },
        "strDepartment": {
          "type": "string"
        },
        "strGLCode": {
          "type": "string"
        },
        "strOpeningCreditBalance": {
          "type": "string"
        },
        "strOpeningDebitBalance": {
          "type": "string"
        }
      },
      "title": "SaveAccountDetailsResponse"
    },
    "SaveAccountingTransactionRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccountFlag": {
          "type": "string"
        },
        "strBankCode": {
          "type": "string"
        },
        "strBankName": {
          "type": "string"
        },
        "strBranchCode": {
          "type": "string"
        },
        "strBranchName": {
          "type": "string"
        },
        "strCardMonth": {
          "type": "string"
        },
        "strCardType": {
          "type": "string"
        },
        "strCardYear": {
          "type": "string"
        },
        "strChequeAmount": {
          "type": "string"
        },
        "strChequeDate": {
          "type": "string"
        },
        "strChequeNumber": {
          "type": "string"
        },
        "strCreditAmount": {
          "type": "string"
        },
        "strCreditCardNumber": {
          "type": "string"
        },
        "strCreditCardPayDate": {
          "type": "string"
        },
        "strCurrency": {
          "type": "string"
        },
        "strDepartment": {
          "type": "string"
        },
        "strInFavourOf": {
          "type": "string"
        },
        "strInstitutionName": {
          "type": "string"
        },
        "strLocaloutFlag": {
          "type": "string"
        },
        "strLocation": {
          "type": "string"
        },
        "strMicrNo": {
          "type": "string"
        },
        "strNarration": {
          "type": "string"
        },
        "strNeftCode": {
          "type": "string"
        },
        "strPayParty": {
          "type": "string"
        },
        "strReferenceNo": {
          "type": "string"
        },
        "strReferenceType": {
          "type": "string"
        },
        "strTxnRuleCode": {
          "type": "string"
        },
        "strVoucherAmount": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveAccountingTransactionRequest"
    },
    "SaveAccountingTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strPayMode": {
          "type": "string"
        },
        "strVoucherNumber": {
          "type": "string"
        },
        "strVoucherType": {
          "type": "string"
        }
      },
      "title": "SaveAccountingTransactionResponse"
    },
    "SaveAndEditSMTPRequest": {
      "type": "object",
      "properties": {
        "attachmentFlag": {
          "type": "string"
        },
        "attachments": {
          "type": "string"
        },
        "bccData": {
          "type": "string"
        },
        "bodyData": {
          "type": "string"
        },
        "ccData": {
          "type": "string"
        },
        "commRefId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        },
        "communicationType": {
          "type": "string"
        },
        "docPath": {
          "type": "string"
        },
        "fromData": {
          "type": "string"
        },
        "mailEditableFlag": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "saveOrEditFlag": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "smtpBlob": {
          "type": "string"
        },
        "smtpRefKey": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "subData": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "toData": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveAndEditSMTPRequest"
    },
    "SaveAndEditSMTPResponse": {
      "type": "object",
      "properties": {
        "communicationId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SaveAndEditSMTPResponse"
    },
    "SaveClaimRequest": {
      "type": "object",
      "properties": {
        "benefitClaimed": {
          "type": "string"
        },
        "claimIntimatedThrough": {
          "type": "string"
        },
        "cover": {
          "type": "string"
        },
        "dateOfAccident": {
          "type": "string"
        },
        "dateOfDeath": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "generalDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneralDetailList"
          }
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "notifierDetails": {
          "type": "string"
        },
        "timeOfAccident": {
          "type": "string"
        },
        "timeOfDeath": {
          "type": "string"
        },
        "typeOfClaim": {
          "type": "string"
        },
        "typeOfDocument": {
          "type": "string"
        }
      },
      "title": "SaveClaimRequest"
    },
    "SaveCollectPremiumList": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string"
        },
        "instrumentType": {
          "type": "string"
        },
        "payerDetails": {
          "type": "string"
        },
        "receiptAmount": {
          "type": "string"
        },
        "receiptNumber": {
          "type": "string"
        }
      },
      "title": "SaveCollectPremiumList"
    },
    "SaveCollectPremiumRequest": {
      "type": "object",
      "properties": {
        "lstReceiptDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaveCollectPremiumList"
          }
        },
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveCollectPremiumRequest"
    },
    "SaveCollectPremiumResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "proposalNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "title": "SaveCollectPremiumResponse"
    },
    "SaveCurrParentAccRequest": {
      "type": "object",
      "properties": {
        "RoleCode": {
          "type": "string"
        },
        "UserCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccountDesc": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        },
        "strLevelOfAccount": {
          "type": "string"
        },
        "strNatureOfAccount": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveCurrParentAccRequest"
    },
    "SaveCurrParentAccResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SaveCurrParentAccResponse"
    },
    "SaveDeathClaimRequest": {
      "type": "object",
      "properties": {
        "ICD_10": {
          "type": "string"
        },
        "admissionDate": {
          "type": "string"
        },
        "autopsy_InquestRequired": {
          "type": "string"
        },
        "causeofAccident": {
          "type": "string"
        },
        "claimIndicator": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "claimProxyNameDetails": {
          "type": "string"
        },
        "claimProxyRelationship": {
          "type": "string"
        },
        "claimSubmissionbasis": {
          "type": "string"
        },
        "cleanClaimIdentified": {
          "type": "string"
        },
        "cobRequired": {
          "type": "string"
        },
        "dateforCleanClaim": {
          "type": "string"
        },
        "dateofBirth": {
          "type": "string"
        },
        "dateofDeath": {
          "type": "string"
        },
        "dateofaccident": {
          "type": "string"
        },
        "deathBenifitService": {
          "$ref": "#/definitions/DeathBenifitService"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "dependentChildren": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "diagnosis": {
          "type": "string"
        },
        "dischargeDate": {
          "type": "string"
        },
        "distancebetweenPlaceofaccident_injuryandprimaryresidence": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "employer": {
          "type": "string"
        },
        "findings": {
          "type": "string"
        },
        "firstReportofInjurySubmitted": {
          "type": "string"
        },
        "hospitalDetails": {
          "type": "string"
        },
        "hospitalizationRequired": {
          "type": "string"
        },
        "icd_10": {
          "type": "string"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "mailingAddress": {
          "type": "string"
        },
        "medicalhistoryforlast5years": {
          "type": "integer",
          "format": "int64"
        },
        "memberisonactivedutystatusinthearmedforces": {
          "type": "string"
        },
        "memberwasengagedinanillegaloccupation": {
          "type": "string"
        },
        "motorVehicleAccident": {
          "type": "string"
        },
        "namesandAddressesofanywitnessesoftheAccident": {
          "type": "string"
        },
        "notificationTime": {
          "type": "string"
        },
        "notifiedBy": {
          "type": "string"
        },
        "numberofDependentChildren": {
          "type": "integer",
          "format": "int64"
        },
        "occupation": {
          "type": "string"
        },
        "otherLocationAddress": {
          "type": "string"
        },
        "otherPolicyNumber": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer",
          "format": "int64"
        },
        "placeofaccident": {
          "type": "string"
        },
        "policereportSubmitted": {
          "type": "string"
        },
        "policyClaimedagainst": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "primaryClaim": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "receivedDate": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "socialSecurityNo": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "state_Claimedin": {
          "type": "string"
        },
        "survivorBenifitService": {
          "$ref": "#/definitions/SurvivorBenifitService"
        },
        "timeofaccident": {
          "type": "string"
        },
        "typeofClaim": {
          "type": "string"
        },
        "typeofDocument": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "workPhoneNumber": {
          "type": "string"
        },
        "work_relatedaccident": {
          "type": "string"
        }
      },
      "title": "SaveDeathClaimRequest"
    },
    "SaveDeleteAgentPolicyPartyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveDeleteAgentPolicyPartyRequest"
    },
    "SaveDeleteAgentPolicyPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "SaveDeleteAgentPolicyPartyResponse"
    },
    "SaveDeleteBeneficiaryPolicyPartyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveDeleteBeneficiaryPolicyPartyRequest"
    },
    "SaveDeleteBeneficiaryPolicyPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "SaveDeleteBeneficiaryPolicyPartyResponse"
    },
    "SaveDeleteBrokerPolicyPartyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveDeleteBrokerPolicyPartyRequest"
    },
    "SaveDeleteBrokerPolicyPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        }
      },
      "title": "SaveDeleteBrokerPolicyPartyResponse"
    },
    "SaveDirectBillingClaimRequest": {
      "type": "object",
      "properties": {
        "Intimation": {
          "type": "string"
        },
        "abroadClaim": {
          "type": "integer",
          "format": "int64"
        },
        "accidentClaim": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "claimIndicator": {
          "type": "string"
        },
        "claimProvince": {
          "type": "string"
        },
        "claimServiceProviderType": {
          "type": "string"
        },
        "claimSource": {
          "type": "string"
        },
        "claimSourceforPortal": {
          "type": "string"
        },
        "dBClaimActivityService": {
          "$ref": "#/definitions/DBClaimActivityService"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "diagnosis": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "emergency": {
          "type": "string"
        },
        "findings": {
          "type": "string"
        },
        "firstSymptomDate": {
          "type": "string"
        },
        "hospitalizationRequired": {
          "type": "string"
        },
        "iCD10": {
          "type": "string"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string"
        },
        "notificationTime": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyProvince": {
          "type": "string"
        },
        "preExistingIllness": {
          "type": "string"
        },
        "primaryClaim": {
          "type": "string"
        },
        "productTypeFor": {
          "type": "string"
        },
        "providerInvoiceDate": {
          "type": "string"
        },
        "providerInvoiceNumber": {
          "type": "string"
        },
        "providerorClinicianID": {
          "type": "string"
        },
        "receivedDate": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "supplementaryFundToBeUsed": {
          "type": "string"
        },
        "typeofClaim": {
          "type": "string"
        },
        "typeofDocument": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveDirectBillingClaimRequest"
    },
    "SaveEmployeeBillingInfoRequest": {
      "type": "object",
      "properties": {
        "billingPartyCode": {
          "type": "string"
        },
        "lstEmployeeBillingInfoDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeBillingInfoDetails"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strSchemeNumber": {
          "type": "string"
        },
        "transactionCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveEmployeeBillingInfoRequest"
    },
    "SaveEmployeeBillingInfoResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SaveEmployeeBillingInfoResponse"
    },
    "SaveEmployeeClassificationRequest": {
      "type": "object",
      "properties": {
        "lstEmployeeClassification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeClassification"
          }
        },
        "lstEmployeeClassificationInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeClassificationInfo"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strSchemeNumber": {
          "type": "string"
        },
        "transactionCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveEmployeeClassificationRequest"
    },
    "SaveEmployeeClassificationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      },
      "title": "SaveEmployeeClassificationResponse"
    },
    "SaveEmployerBillingDetailsList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        },
        "storageDestination": {
          "type": "string"
        }
      },
      "title": "SaveEmployerBillingDetailsList"
    },
    "SaveEmployerContactDetailsList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        },
        "storageDestination": {
          "type": "string"
        }
      },
      "title": "SaveEmployerContactDetailsList"
    },
    "SaveEmployerDetailsList": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "SaveEmployerDetailsList"
    },
    "SaveEmployerDetailsRequest": {
      "type": "object",
      "properties": {
        "isBillingAddressDifferent": {
          "type": "string"
        },
        "lstSaveEmployerBillingDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaveEmployerBillingDetailsList"
          }
        },
        "lstSaveEmployerContactDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaveEmployerContactDetailsList"
          }
        },
        "lstSaveEmployerDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaveEmployerDetailsList"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strBillingAddressFor": {
          "type": "string"
        },
        "strBillingFor": {
          "type": "string"
        },
        "strBillingPartyCode": {
          "type": "string"
        },
        "strMasterSchemeNumber": {
          "type": "string"
        },
        "strSchemeNumber": {
          "type": "string"
        },
        "transactionCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveEmployerDetailsRequest"
    },
    "SaveEmployerDetailsResponse": {
      "type": "object",
      "properties": {
        "billingPartyCode": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "schemeNumber": {
          "type": "string"
        }
      },
      "title": "SaveEmployerDetailsResponse"
    },
    "SaveForeignExchangeRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strApplicationCode": {
          "type": "string"
        },
        "strCurrency": {
          "type": "string"
        },
        "strExchangeRate": {
          "type": "string"
        },
        "strPrivilegeCode": {
          "type": "string"
        },
        "strTransactionDate": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveForeignExchangeRequest"
    },
    "SaveForeignExchangeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "pRateId": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SaveForeignExchangeResponse"
    },
    "SaveInjuryClaimRequest": {
      "type": "object",
      "properties": {
        "admissionDate": {
          "type": "string"
        },
        "arethereanycomplications": {
          "type": "string"
        },
        "cPTHCPCcode": {
          "type": "string"
        },
        "causeOfAccident": {
          "type": "string"
        },
        "claimIndicator": {
          "type": "string"
        },
        "claimProxyNameDetails": {
          "type": "string"
        },
        "claimProxyRelationship": {
          "type": "string"
        },
        "claimSubmissionBasis": {
          "type": "string"
        },
        "cleanClaimIdentified": {
          "type": "string"
        },
        "cobRequired": {
          "type": "string"
        },
        "conditioncausedduetotheInjury": {
          "type": "string"
        },
        "dateForCleanClaim": {
          "type": "string"
        },
        "dateOfAccident": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "dateofPatientreturningtoanyOccupation": {
          "type": "string"
        },
        "dateofPatientreturningtoregularOccupation": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessage": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "diagnosis": {
          "type": "string"
        },
        "dischargeDate": {
          "type": "string"
        },
        "dislocationBenefitService": {
          "$ref": "#/definitions/DislocationBenefitService"
        },
        "documentNumber": {
          "type": "string"
        },
        "durationasaPatientwiththePhysician": {
          "type": "number",
          "format": "double"
        },
        "emailAddress": {
          "type": "string"
        },
        "emergencyTreatmentService": {
          "$ref": "#/definitions/EmergencyTreatmentService"
        },
        "employer": {
          "type": "string"
        },
        "endDateofcontinuousdisability": {
          "type": "string"
        },
        "expandedBenefitService": {
          "$ref": "#/definitions/ExpandedBenefitService"
        },
        "findings": {
          "type": "string"
        },
        "firstReportOrInjurySubmitted": {
          "type": "string"
        },
        "firstSymptomDate": {
          "type": "string"
        },
        "fracturesBenefitService": {
          "$ref": "#/definitions/FracturesBenefitService"
        },
        "haspatienteverhadsameorsimilarcondition": {
          "type": "string"
        },
        "hospitalDetails": {
          "type": "string"
        },
        "hospitalizationBenefitService": {
          "$ref": "#/definitions/HospitalizationBenefitService"
        },
        "hospitalizationRequired": {
          "type": "string"
        },
        "iCD10": {
          "type": "string"
        },
        "injuryBenefitService": {
          "$ref": "#/definitions/InjuryBenefitService"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "insuredunabletowork": {
          "type": "string"
        },
        "isconditionduetopatientsemployment": {
          "type": "string"
        },
        "istheconditionduetopregnancy": {
          "type": "string"
        },
        "limitationsRestrictions": {
          "type": "string"
        },
        "mailingAddress": {
          "type": "string"
        },
        "memberIsOnActiveDutyStatusInTheArmedForces": {
          "type": "string"
        },
        "memberWasEngagedInAnIllegalOccupation": {
          "type": "string"
        },
        "motorVehicleAccident": {
          "type": "string"
        },
        "natureandCauseofInjuryorCondition": {
          "type": "string"
        },
        "notificationTime": {
          "type": "string"
        },
        "notifiedBy": {
          "type": "string"
        },
        "notifierDetails": {
          "type": "string"
        },
        "numberofDaysrestrictedtolightduty": {
          "type": "number",
          "format": "double"
        },
        "numberofDaysworkaffected": {
          "type": "number",
          "format": "double"
        },
        "occupation": {
          "type": "string"
        },
        "otherLocationAddress": {
          "type": "string"
        },
        "otherPolicyNumber": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer",
          "format": "int64"
        },
        "physicianName": {
          "type": "string"
        },
        "placeOfAccident": {
          "type": "string"
        },
        "policeReportSubmitted": {
          "type": "string"
        },
        "policyClaimedAgainst": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "primaryClaim": {
          "type": "string"
        },
        "prognosis": {
          "type": "string"
        },
        "receivedDate": {
          "type": "string"
        },
        "recoveryWellnessBenefitService": {
          "$ref": "#/definitions/RecoveryWellnessBenefitService"
        },
        "referringPhysiciansDetailsforlast5years": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "socialSecurityNo": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "startDateofcontinuousdisability": {
          "type": "string"
        },
        "stateClaimedIn": {
          "type": "string"
        },
        "surgeryperformed": {
          "type": "string"
        },
        "survivorBenifitService": {
          "$ref": "#/definitions/SurvivorBenifitService"
        },
        "timeOfAccident": {
          "type": "string"
        },
        "transportationBenefitService": {
          "$ref": "#/definitions/TransportationBenefitService"
        },
        "treatmentTerminationDate": {
          "type": "string"
        },
        "typeOfClaim": {
          "type": "string"
        },
        "typeOfDocument": {
          "type": "string"
        },
        "typeofDelivery": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "workPhoneNumber": {
          "type": "string"
        },
        "workRelatedAccident": {
          "type": "string"
        }
      },
      "title": "SaveInjuryClaimRequest"
    },
    "SavePaymentInfoRequest": {
      "type": "object",
      "properties": {
        "generalDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneralDetailList"
          }
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SavePaymentInfoRequest"
    },
    "SavePaymentInfoRequest_V13": {
      "type": "object",
      "properties": {
        "generalDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneralDetailList"
          }
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SavePaymentInfoRequest_V13"
    },
    "SaveQuestionnaireRequest": {
      "type": "object",
      "properties": {
        "policyRiskId": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "questionSet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionSet"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveQuestionnaireRequest"
    },
    "SaveQuestionnaireResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SaveQuestionnaireResponse"
    },
    "SaveReimbursementClaimRequest": {
      "type": "object",
      "properties": {
        "abroadClaim": {
          "type": "string"
        },
        "accidentClaim": {
          "type": "string"
        },
        "basisofClaimSubmission": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "claimIndicator": {
          "type": "string"
        },
        "claimPercentageinPolicyProvince": {
          "type": "string"
        },
        "claimProvince": {
          "type": "string"
        },
        "claimServiceProviderType": {
          "type": "string"
        },
        "claimSource": {
          "type": "string"
        },
        "claimSourceforPortal": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "diagnosis": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "emergency": {
          "type": "string"
        },
        "findings": {
          "type": "string"
        },
        "firstSymptomDate": {
          "type": "string"
        },
        "geneticPredisposition": {
          "type": "string"
        },
        "hospitalizationRequired": {
          "type": "string"
        },
        "iCD10": {
          "type": "string"
        },
        "insuredMemberCode": {
          "type": "string"
        },
        "insuredName": {
          "type": "string"
        },
        "intimation": {
          "type": "string"
        },
        "invoiceiscorrect": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string"
        },
        "notificationTime": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyProvince": {
          "type": "string"
        },
        "preExistingIllness": {
          "type": "string"
        },
        "primaryClaim": {
          "type": "string"
        },
        "productTypeFor": {
          "type": "string"
        },
        "providerInvoiceDate": {
          "type": "string"
        },
        "providerInvoiceNumber": {
          "type": "string"
        },
        "providerorClinicianID": {
          "type": "string"
        },
        "rEClaimActivityService": {
          "$ref": "#/definitions/REClaimActivityService"
        },
        "receivedDate": {
          "type": "string"
        },
        "report": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sendRequestTemplate": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "typeofClaim": {
          "type": "string"
        },
        "typeofDocument": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveReimbursementClaimRequest"
    },
    "SaveTxnRuleDtlsRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strInputCreditAccType": {
          "type": "string"
        },
        "strInputDebitAccType": {
          "type": "string"
        },
        "strTxnCode": {
          "type": "string"
        },
        "strTxnName": {
          "type": "string"
        },
        "strVoucherType": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SaveTxnRuleDtlsRequest"
    },
    "SchemeBasic": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSCH_APPL_NO": {
          "type": "string"
        },
        "strSCH_BRAND_CD": {
          "type": "string"
        },
        "strSCH_IS_GROUP_LIFE": {
          "type": "string"
        },
        "strSCH_LEGAL_ENTITY_CUSTOMER_NO": {
          "type": "string"
        },
        "strSCH_REV_BRAND_CD": {
          "type": "string"
        },
        "strSCH_REV_LEGAL_ENTITY_CUST_NO": {
          "type": "string"
        },
        "strSCH_SCHM_CLASS": {
          "type": "string"
        },
        "strSCH_TCN_NO": {
          "type": "string"
        }
      },
      "title": "SchemeBasic"
    },
    "SchemeBenefit": {
      "type": "object",
      "properties": {
        "objSchemeBenefitDetl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeBenefitDetl"
          }
        },
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSCB_BEN_CD": {
          "type": "string"
        },
        "strSCB_CREATED_BY": {
          "type": "string"
        },
        "strSCB_DELETED_FLG": {
          "type": "string"
        },
        "strSCB_LEVEL_CD": {
          "type": "string"
        },
        "strSCB_LEVEL_ID": {
          "type": "string"
        },
        "strSCB_REC_END_DATE": {
          "type": "string"
        },
        "strSCB_REC_START_DATE": {
          "type": "string"
        },
        "strSCB_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeBenefit"
    },
    "SchemeBenefitDetl": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSBD_BEN_END_DATE": {
          "type": "string"
        },
        "strSBD_BEN_START_DATE": {
          "type": "string"
        },
        "strSBD_CREATED_BY": {
          "type": "string"
        },
        "strSBD_DELETED_FLG": {
          "type": "string"
        },
        "strSBD_EFF_END_DATE": {
          "type": "string"
        },
        "strSBD_EFF_START_DATE": {
          "type": "string"
        },
        "strSBD_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strSBD_REC_END_DATE": {
          "type": "string"
        },
        "strSBD_REC_START_DATE": {
          "type": "string"
        },
        "strSBD_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeBenefitDetl"
    },
    "SchemeCategory": {
      "type": "object",
      "properties": {
        "objSchemeCategoryDetl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeCategoryDetl"
          }
        },
        "strCAT_BANCS_CAT_NO": {
          "type": "string"
        },
        "strCAT_CAT_NO": {
          "type": "string"
        },
        "strCAT_CREATED_BY": {
          "type": "string"
        },
        "strCAT_DELETED_FLG": {
          "type": "string"
        },
        "strCAT_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strCAT_LEVEL_CD": {
          "type": "string"
        },
        "strCAT_LEVEL_ID": {
          "type": "string"
        },
        "strCAT_REC_END_DATE": {
          "type": "string"
        },
        "strCAT_REC_START_DATE": {
          "type": "string"
        },
        "strCAT_TCN_NO": {
          "type": "string"
        },
        "strCAT_UPDATED_BY": {
          "type": "string"
        },
        "strCreateorUpdate": {
          "type": "string"
        }
      },
      "title": "SchemeCategory"
    },
    "SchemeCategoryDetl": {
      "type": "object",
      "properties": {
        "strCDT_CAT_END_DATE": {
          "type": "string"
        },
        "strCDT_CAT_NAME": {
          "type": "string"
        },
        "strCDT_CAT_START_DATE": {
          "type": "string"
        },
        "strCDT_CAT_STATUS_CD": {
          "type": "string"
        },
        "strCDT_CONTR_OPTION": {
          "type": "string"
        },
        "strCDT_CREATED_BY": {
          "type": "string"
        },
        "strCDT_DELETED_FLG": {
          "type": "string"
        },
        "strCDT_EFF_END_DATE": {
          "type": "string"
        },
        "strCDT_EFF_START_DATE": {
          "type": "string"
        },
        "strCDT_EPED_BASIS": {
          "type": "string"
        },
        "strCDT_EPED_DAY": {
          "type": "string"
        },
        "strCDT_ERN_CAT_TYPE": {
          "type": "string"
        },
        "strCDT_FIRST_EPED": {
          "type": "string"
        },
        "strCDT_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strCDT_LVR_CATEGORY": {
          "type": "string"
        },
        "strCDT_NPDD": {
          "type": "string"
        },
        "strCDT_NPDD_DAY": {
          "type": "string"
        },
        "strCDT_REC_END_DATE": {
          "type": "string"
        },
        "strCDT_REC_START_DATE": {
          "type": "string"
        },
        "strCDT_RLTV_DAYS": {
          "type": "string"
        },
        "strCDT_UPDATED_BY": {
          "type": "string"
        },
        "strCDT_VARIANCE_LIMIT": {
          "type": "string"
        },
        "strCreateorUpdate": {
          "type": "string"
        }
      },
      "title": "SchemeCategoryDetl"
    },
    "SchemeDetails": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSCD_CREATED_BY": {
          "type": "string"
        },
        "strSCD_DELETED_FLG": {
          "type": "string"
        },
        "strSCD_EFF_END_DATE": {
          "type": "string"
        },
        "strSCD_EFF_START_DATE": {
          "type": "string"
        },
        "strSCD_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strSCD_REC_END_DATE": {
          "type": "string"
        },
        "strSCD_REC_START_DATE": {
          "type": "string"
        },
        "strSCD_REN_NTF_APPLICABLE": {
          "type": "string"
        },
        "strSCD_REN_RESP_APPLICABLE": {
          "type": "string"
        },
        "strSCD_SCHEME_FULL_NAME": {
          "type": "string"
        },
        "strSCD_SCHEME_NAME": {
          "type": "string"
        },
        "strSCD_SCH_REN_CHS_APPLICABLE": {
          "type": "string"
        },
        "strSCD_SCH_STATUS_CD": {
          "type": "string"
        },
        "strSCD_TRUST_DEED_DATE": {
          "type": "string"
        },
        "strSCD_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeDetails"
    },
    "SchemeEmployee": {
      "type": "object",
      "properties": {
        "objSchemeEmployeeDetl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemeEmployeeDetl"
          }
        },
        "strCreateorUpdate": {
          "type": "string"
        },
        "strPTY_CUST_NO": {
          "type": "string"
        },
        "strSEM_CHANNEL_TYPE": {
          "type": "string"
        },
        "strSEM_CREATED_BY": {
          "type": "string"
        },
        "strSEM_DELETED_FLG": {
          "type": "string"
        },
        "strSEM_JOIN_DATE": {
          "type": "string"
        },
        "strSEM_LEGACY_EMP_NO": {
          "type": "string"
        },
        "strSEM_LEVEL_CD": {
          "type": "string"
        },
        "strSEM_LEVEL_ID": {
          "type": "string"
        },
        "strSEM_REC_END_DATE": {
          "type": "string"
        },
        "strSEM_REC_START_DATE": {
          "type": "string"
        },
        "strSEM_SCH_EMP_REF_NUM": {
          "type": "string"
        },
        "strSEM_TCN_NO": {
          "type": "string"
        },
        "strSEM_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeEmployee"
    },
    "SchemeEmployeeDetl": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSED_CREATED_BY": {
          "type": "string"
        },
        "strSED_DELETED_FLG": {
          "type": "string"
        },
        "strSED_DUTY_RMNDR_COUNT": {
          "type": "string"
        },
        "strSED_EMP_CEASE_DATE": {
          "type": "string"
        },
        "strSED_EMP_STATE": {
          "type": "string"
        },
        "strSED_EMP_TYPE": {
          "type": "string"
        },
        "strSED_IDV_STATUS": {
          "type": "string"
        },
        "strSED_JOIN_DATE": {
          "type": "string"
        },
        "strSED_NATURE_BUSINESS": {
          "type": "string"
        },
        "strSED_NO_OF_EMP": {
          "type": "string"
        },
        "strSED_PMC_CUST_NO": {
          "type": "string"
        },
        "strSED_REC_END_DATE": {
          "type": "string"
        },
        "strSED_REC_START_DATE": {
          "type": "string"
        },
        "strSED_SCH_EMP_NAME": {
          "type": "string"
        },
        "strSED_SCH_EMP_STATUS_CD": {
          "type": "string"
        },
        "strSED_TNC_DATE": {
          "type": "string"
        },
        "strSED_TNC_IND": {
          "type": "string"
        },
        "strSED_TYP_ADV": {
          "type": "string"
        },
        "strSED_UPDATED_BY": {
          "type": "string"
        },
        "strSEM_EFF_END_DATE": {
          "type": "string"
        },
        "strSEM_EFF_START_DATE": {
          "type": "string"
        },
        "strSEM_ONSET_DUTY_DATE": {
          "type": "string"
        },
        "strSEM_PRNCPL_IND": {
          "type": "string"
        },
        "strSEM_SCH_EMP_ID": {
          "type": "string"
        }
      },
      "title": "SchemeEmployeeDetl"
    },
    "SchemeLegacy": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strLES_CREATED_BY": {
          "type": "string"
        },
        "strLES_DELETED_FLG": {
          "type": "string"
        },
        "strLES_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strLES_LEG_LOB_CD": {
          "type": "string"
        },
        "strLES_LEG_SCH_CUT_OVER_DATE": {
          "type": "string"
        },
        "strLES_LEG_SCH_NO": {
          "type": "string"
        },
        "strLES_REC_END_DATE": {
          "type": "string"
        },
        "strLES_REC_START_DATE": {
          "type": "string"
        },
        "strLES_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeLegacy"
    },
    "SchemeLinked": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strTLS_CREATED_BY": {
          "type": "string"
        },
        "strTLS_DELETED_FLG": {
          "type": "string"
        },
        "strTLS_LNKD_RLTN_TYPE": {
          "type": "string"
        },
        "strTLS_LNKD_SCH_SCHEME_ID": {
          "type": "string"
        },
        "strTLS_REC_END_DATE": {
          "type": "string"
        },
        "strTLS_REC_START_DATE": {
          "type": "string"
        },
        "strTLS_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeLinked"
    },
    "SchemeProduct": {
      "type": "object",
      "properties": {
        "lob": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "title": "SchemeProduct"
    },
    "SchemeProductListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstMasterScheme": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MasterScheme"
          }
        },
        "lstMasterSchemeProductList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MasterSchemeProductList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SchemeProductListResponse"
    },
    "SchemeProductPlan": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "isSelected": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "planCode": {
          "type": "string"
        },
        "planName": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        }
      },
      "title": "SchemeProductPlan"
    },
    "SchemeProductPlanCover": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "coverCode": {
          "type": "string"
        },
        "coverId": {
          "type": "string"
        },
        "coverName": {
          "type": "string"
        },
        "isDisabled": {
          "type": "string"
        },
        "isSelected": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "planCode": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        }
      },
      "title": "SchemeProductPlanCover"
    },
    "SchemeProductPlanCoverProp": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "coverCode": {
          "type": "string"
        },
        "paramName": {
          "type": "string"
        },
        "paramValue": {
          "type": "string"
        },
        "planCode": {
          "type": "string"
        }
      },
      "title": "SchemeProductPlanCoverProp"
    },
    "SchemeProductQuestion": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "attributeGroup": {
          "type": "string"
        },
        "dataLength": {
          "type": "string"
        },
        "dataTypeIndicator": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "domain": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lob": {
          "type": "string"
        },
        "mandatory": {
          "type": "string"
        },
        "parameterId": {
          "type": "string"
        },
        "precision": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        },
        "strAliasName": {
          "type": "string"
        },
        "strJSFunction": {
          "type": "string"
        },
        "strParameterValue": {
          "type": "string"
        },
        "strPrecision": {
          "type": "string"
        },
        "strRuleEventCode": {
          "type": "string"
        },
        "strRuleName": {
          "type": "string"
        },
        "strStorageDestination": {
          "type": "string"
        }
      },
      "title": "SchemeProductQuestion"
    },
    "SchemeProducts": {
      "type": "object",
      "properties": {
        "strCreateorUpdate": {
          "type": "string"
        },
        "strSPR_CREATED_BY": {
          "type": "string"
        },
        "strSPR_DELETED_FLG": {
          "type": "string"
        },
        "strSPR_LAST_UPDATED_ON": {
          "type": "string"
        },
        "strSPR_NEW_BUS_CLSD_DATE": {
          "type": "string"
        },
        "strSPR_PRD_CD": {
          "type": "string"
        },
        "strSPR_PRD_TYPE": {
          "type": "string"
        },
        "strSPR_REC_END_DATE": {
          "type": "string"
        },
        "strSPR_REC_START_DATE": {
          "type": "string"
        },
        "strSPR_UPDATED_BY": {
          "type": "string"
        }
      },
      "title": "SchemeProducts"
    },
    "SearchAccTxnRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        },
        "strBranchCode": {
          "type": "string"
        },
        "strDepartment": {
          "type": "string"
        },
        "strFromDate": {
          "type": "string"
        },
        "strGlCode": {
          "type": "string"
        },
        "strPageNo": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strProductCode": {
          "type": "string"
        },
        "strReferenceNo": {
          "type": "string"
        },
        "strReferenceType": {
          "type": "string"
        },
        "strToDate": {
          "type": "string"
        },
        "strTreaty": {
          "type": "string"
        },
        "strVoucherNumber": {
          "type": "string"
        },
        "strVoucherType": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchAccTxnRequest"
    },
    "SearchAccTxnResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strAccountingTransactionCode": {
          "type": "string"
        },
        "strCurrencyIndicator": {
          "type": "string"
        },
        "strManualIndicator": {
          "type": "string"
        },
        "strNarration": {
          "type": "string"
        },
        "strPartyName": {
          "type": "string"
        },
        "strPaymentMode": {
          "type": "string"
        },
        "strReferenceNumber": {
          "type": "string"
        },
        "strReferenceType": {
          "type": "string"
        },
        "strTransactionDate": {
          "type": "string"
        },
        "strTreatyCode": {
          "type": "string"
        },
        "strVoucherAmount": {
          "type": "string"
        },
        "strVoucherDate": {
          "type": "string"
        },
        "strVoucherNumber": {
          "type": "string"
        },
        "strVoucherType": {
          "type": "string"
        }
      },
      "title": "SearchAccTxnResponse"
    },
    "SearchAccountTypeRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchAccountTypeRequest"
    },
    "SearchAccountTypeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strAccountDesc": {
          "type": "string"
        },
        "strAccountLevel": {
          "type": "string"
        },
        "strAccountNature": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        }
      },
      "title": "SearchAccountTypeResponse"
    },
    "SearchAgentRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchAgentRequest"
    },
    "SearchAgentResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchAgentResponse"
    },
    "SearchBankRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchBankRequest"
    },
    "SearchBankResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchBankResponse"
    },
    "SearchBeneficiaryRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchBeneficiaryRequest"
    },
    "SearchBeneficiaryResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchBeneficiaryResponse"
    },
    "SearchBrokerRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchBrokerRequest"
    },
    "SearchBrokerResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchBrokerResponse"
    },
    "SearchCityLocationRequest": {
      "type": "object",
      "properties": {
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchCityLocationRequest"
    },
    "SearchCityLocationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationType": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessLocationSearchResultSet"
          }
        }
      },
      "title": "SearchCityLocationResponse"
    },
    "SearchClaimantRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchClaimantRequest"
    },
    "SearchClaimantResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchClaimantResponse"
    },
    "SearchClinicianRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchClinicianRequest"
    },
    "SearchClinicianResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchClinicianResponse"
    },
    "SearchCountryLocationRequest": {
      "type": "object",
      "properties": {
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchCountryLocationRequest"
    },
    "SearchCountryLocationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationType": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessLocationSearchResultSet"
          }
        }
      },
      "title": "SearchCountryLocationResponse"
    },
    "SearchCustomerList": {
      "type": "object",
      "properties": {
        "customerCode": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "SearchCustomerList"
    },
    "SearchCustomerResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchCustomerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchCustomerList"
          }
        }
      },
      "title": "SearchCustomerResponse"
    },
    "SearchCustomerResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchCustomerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchCustomerList"
          }
        }
      },
      "title": "SearchCustomerResponse_V13"
    },
    "SearchEmployeeRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchEmployeeRequest"
    },
    "SearchEmployeeResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchEmployeeResponse"
    },
    "SearchEmployerDetails": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "SearchEmployerDetails"
    },
    "SearchEmployerList": {
      "type": "object",
      "properties": {
        "flagExistInHealth": {
          "type": "boolean"
        },
        "flagExistInLife": {
          "type": "boolean"
        },
        "strEmployerName": {
          "type": "string"
        },
        "strEmployerNumber": {
          "type": "string"
        },
        "strEmployerStatus": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strPartyId": {
          "type": "string"
        }
      },
      "title": "SearchEmployerList"
    },
    "SearchEmployerListRequest": {
      "type": "object",
      "properties": {
        "lstSearchEmployerDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchEmployerDetails"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "transactionCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchEmployerListRequest"
    },
    "SearchEmployerListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstSearchEmployerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchEmployerList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SearchEmployerListResponse"
    },
    "SearchEmployerRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchEmployerRequest"
    },
    "SearchEmployerResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchEmployerResponse"
    },
    "SearchFamilyPolicyRequest": {
      "type": "object",
      "properties": {
        "policyStartDateFrom": {
          "type": "string"
        },
        "policyStartDateTo": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchFamilyPolicyRequest"
    },
    "SearchGroupPolicyRequest": {
      "type": "object",
      "properties": {
        "policyStartDateFrom": {
          "type": "string"
        },
        "policyStartDateTo": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchGroupPolicyRequest"
    },
    "SearchIndvPolicyRequest": {
      "type": "object",
      "properties": {
        "policyStartDateFrom": {
          "type": "string"
        },
        "policyStartDateTo": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchIndvPolicyRequest"
    },
    "SearchMemberRequest": {
      "type": "object",
      "properties": {
        "aadhaarNo": {
          "type": "string"
        },
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchMemberRequest"
    },
    "SearchMemberResponse": {
      "type": "object",
      "properties": {
        "aadhaarNo": {
          "type": "string"
        },
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchMemberResponse"
    },
    "SearchNetworkRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchNetworkRequest"
    },
    "SearchNetworkResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchNetworkResponse"
    },
    "SearchPartyContactRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strTypeOfContact": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchPartyContactRequest"
    },
    "SearchPartyContactResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "strAdditionalSpaceForRoad": {
          "type": "string"
        },
        "strCity": {
          "type": "string"
        },
        "strCountry": {
          "type": "string"
        },
        "strDoor": {
          "type": "string"
        },
        "strEmail": {
          "type": "string"
        },
        "strFaxNo": {
          "type": "string"
        },
        "strFloor": {
          "type": "string"
        },
        "strLandlineNo": {
          "type": "string"
        },
        "strLocation": {
          "type": "string"
        },
        "strMobileNo": {
          "type": "string"
        },
        "strNumber": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strPortal": {
          "type": "string"
        },
        "strRoad": {
          "type": "string"
        },
        "strStair": {
          "type": "string"
        },
        "strTypeOfRoad": {
          "type": "string"
        },
        "strZipCode": {
          "type": "string"
        }
      },
      "title": "SearchPartyContactResponse"
    },
    "SearchPayorRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchPayorRequest"
    },
    "SearchPayorResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchPayorResponse"
    },
    "SearchPolicyHolderRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchPolicyHolderRequest"
    },
    "SearchPolicyHolderResponse": {
      "type": "object",
      "properties": {
        "ResponseCode": {
          "type": "string"
        },
        "ResponseMessage": {
          "type": "string"
        },
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchPolicyHolderResponse"
    },
    "SearchPolicyPaymentRequest": {
      "type": "object",
      "properties": {
        "policyNo": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchPolicyPaymentRequest"
    },
    "SearchPolicyPaymentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        },
        "searchPolicyPaymentResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchPolicyPaymentResult"
          }
        }
      },
      "title": "SearchPolicyPaymentResponse"
    },
    "SearchPolicyPaymentResult": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "effectiveStartDate": {
          "type": "string"
        },
        "ioIndicator": {
          "type": "string"
        },
        "paymentPurpose": {
          "type": "string"
        }
      },
      "title": "SearchPolicyPaymentResult"
    },
    "SearchPolicyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchPolicyResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchPolicyResult"
          }
        }
      },
      "title": "SearchPolicyResponse"
    },
    "SearchPolicyResult": {
      "type": "object",
      "properties": {
        "policyEffectiveDate": {
          "type": "string"
        },
        "policyHolderName": {
          "type": "string"
        },
        "policyStartDate": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "policySubStatus": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        }
      },
      "title": "SearchPolicyResult"
    },
    "SearchProposerRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchProposerRequest"
    },
    "SearchProposerResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchProposerResponse"
    },
    "SearchProviderRequest": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "mailId": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchProviderRequest"
    },
    "SearchProviderResponse": {
      "type": "object",
      "properties": {
        "citizenId": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "firstName": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "indvOrg": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessPartnerSearchResultSet"
          }
        },
        "status": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "SearchProviderResponse"
    },
    "SearchRelatedPartyRequest": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchRelatedPartyRequest"
    },
    "SearchRelatedPartyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyResultSet"
          }
        }
      },
      "title": "SearchRelatedPartyResponse"
    },
    "SearchRelationshipResult": {
      "type": "object",
      "properties": {
        "partyCode": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        }
      },
      "title": "SearchRelationshipResult"
    },
    "SearchSchemeDetails": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "parameterName": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "SearchSchemeDetails"
    },
    "SearchSchemeList": {
      "type": "object",
      "properties": {
        "policyNumberArr": {
          "type": "string"
        },
        "productCodeArr": {
          "type": "string"
        },
        "strBillingPartyCode": {
          "type": "string"
        },
        "strCreatedDate": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSchemeId": {
          "type": "string"
        },
        "strSchemeNo": {
          "type": "string"
        },
        "strSchemeStatus": {
          "type": "string"
        }
      },
      "title": "SearchSchemeList"
    },
    "SearchSchemeListRequest": {
      "type": "object",
      "properties": {
        "lstSearchSchemeDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchSchemeDetails"
          }
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "transactionCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchSchemeListRequest"
    },
    "SearchSchemeListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstSearchSchemeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchSchemeList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SearchSchemeListResponse"
    },
    "SearchStateLocationRequest": {
      "type": "object",
      "properties": {
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchStateLocationRequest"
    },
    "SearchStateLocationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "locationCode": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationType": {
          "type": "string"
        },
        "parentLocationCode": {
          "type": "string"
        },
        "parentLocationName": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "searchResultList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessLocationSearchResultSet"
          }
        }
      },
      "title": "SearchStateLocationResponse"
    },
    "SearchTxnRuleListRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strAccTxnCode": {
          "type": "string"
        },
        "strAccountType": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchTxnRuleListRequest"
    },
    "SearchWorkItemsRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SearchWorkItemsRequest"
    },
    "SearchWorkItemsResponse": {
      "type": "object",
      "properties": {
        "lstErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstWorkItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityWorkItemDetails"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "SearchWorkItemsResponse"
    },
    "SearchZipCodeResponse": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "title": "SearchZipCodeResponse"
    },
    "ShowProductSummaryResponse": {
      "type": "object",
      "properties": {
        "downloadLinkList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentList"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "title": "ShowProductSummaryResponse"
    },
    "ShowProductSummaryResponse_V13": {
      "type": "object",
      "properties": {
        "downloadLinkList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentList"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "title": "ShowProductSummaryResponse_V13"
    },
    "SrchAccSetupRequest": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string"
        },
        "branchCode": {
          "type": "string"
        },
        "departmentCode": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "pageNo": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "SrchAccSetupRequest"
    },
    "SrchAccSetupResponse": {
      "type": "object",
      "properties": {
        "accAccountLevel": {
          "type": "string"
        },
        "accAccountNature": {
          "type": "string"
        },
        "accAccountType": {
          "type": "string"
        },
        "accCurrentCreditBalance": {
          "type": "string"
        },
        "accCurrentDebitBalance": {
          "type": "string"
        },
        "accDepartmentCode": {
          "type": "string"
        },
        "accGlCode": {
          "type": "string"
        },
        "accGlCodeParent": {
          "type": "string"
        },
        "accGlDescription": {
          "type": "string"
        },
        "accOpeningCreditBalance": {
          "type": "string"
        },
        "accOpeningDebitBalance": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        }
      },
      "title": "SrchAccSetupResponse"
    },
    "SrchAccSetupResponseList": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "srchAccSetRsponseList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SrchAccSetupResponse"
          }
        }
      },
      "title": "SrchAccSetupResponseList"
    },
    "StandaloneWorkItemRequest": {
      "type": "object",
      "properties": {
        "process": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "strBranchId": {
          "type": "string"
        },
        "strReferenceNum": {
          "type": "string"
        },
        "strReferenceType": {
          "type": "string"
        },
        "uploadDocumentResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadDocumentResult"
          }
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "StandaloneWorkItemRequest"
    },
    "StandaloneWorkItemResponse": {
      "type": "object",
      "properties": {
        "diaryId": {
          "type": "integer",
          "format": "int64"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "StandaloneWorkItemResponse"
    },
    "SurvivorBenifitService": {
      "type": "object",
      "properties": {
        "survivorBenifitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SurvivorBenifitServiceDetails"
          }
        }
      },
      "title": "SurvivorBenifitService"
    },
    "SurvivorBenifitServiceDetails": {
      "type": "object",
      "properties": {
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitPaidUpto": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "serviceNo": {
          "type": "string"
        }
      },
      "title": "SurvivorBenifitServiceDetails"
    },
    "TransportationBenefitService": {
      "type": "object",
      "properties": {
        "transportationBenefitServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportationBenefitServiceDetails"
          }
        }
      },
      "title": "TransportationBenefitService"
    },
    "TransportationBenefitServiceDetails": {
      "type": "object",
      "properties": {
        "amountPerVisit": {
          "type": "number",
          "format": "double"
        },
        "approvedAmount": {
          "type": "number",
          "format": "double"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "pendType": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "TransportationBenefitServiceDetails"
    },
    "TxnRuleList": {
      "type": "object",
      "properties": {
        "accTxnCode": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountingTxnDescription": {
          "type": "string"
        },
        "accountingTypeDescription": {
          "type": "string"
        },
        "drcrIndicator": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        }
      },
      "title": "TxnRuleList"
    },
    "TypeOfClaimsResult": {
      "type": "object",
      "properties": {
        "parameterDescription": {
          "type": "string"
        },
        "parameterValue": {
          "type": "string"
        }
      },
      "title": "TypeOfClaimsResult"
    },
    "UpdateAgentRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateAgentRequest"
    },
    "UpdateAgentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateAgentResponse"
    },
    "UpdateBankRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateBankRequest"
    },
    "UpdateBankResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateBankResponse"
    },
    "UpdateBeneficiaryRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateBeneficiaryRequest"
    },
    "UpdateBeneficiaryResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateBeneficiaryResponse"
    },
    "UpdateBrokerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateBrokerResponse"
    },
    "UpdateClaimantRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateClaimantRequest"
    },
    "UpdateClaimantResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateClaimantResponse"
    },
    "UpdateClinicianResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateClinicianResponse"
    },
    "UpdateEmployeeRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateEmployeeRequest"
    },
    "UpdateEmployeeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateEmployeeResponse"
    },
    "UpdateEmployerRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateEmployerRequest"
    },
    "UpdateEmployerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateEmployerResponse"
    },
    "UpdateMemberRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateMemberRequest"
    },
    "UpdateMemberResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateMemberResponse"
    },
    "UpdateNetworkRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateNetworkRequest"
    },
    "UpdateNetworkResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateNetworkResponse"
    },
    "UpdatePartyContactRequest": {
      "type": "object",
      "properties": {
        "additionalspaceforroad": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "door": {
          "type": "string"
        },
        "emailid": {
          "type": "string"
        },
        "faxnumber": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "landlinenumber": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "mobilenumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "partycode": {
          "type": "string"
        },
        "portal": {
          "type": "string"
        },
        "road": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stair": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "typeofcontact": {
          "type": "string"
        },
        "typeofroad": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        }
      },
      "title": "UpdatePartyContactRequest"
    },
    "UpdatePartyContactResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "UpdatePartyContactResponse"
    },
    "UpdatePayorRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdatePayorRequest"
    },
    "UpdatePayorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdatePayorResponse"
    },
    "UpdatePolicyHolderRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdatePolicyHolderRequest"
    },
    "UpdatePolicyHolderResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdatePolicyHolderResponse"
    },
    "UpdateProviderRequest": {
      "type": "object",
      "properties": {
        "dateofBirth": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strCitizenId": {
          "type": "string"
        },
        "strCompany": {
          "type": "string"
        },
        "strFirstName": {
          "type": "string"
        },
        "strFunctionCode": {
          "type": "string"
        },
        "strIndvOrg": {
          "type": "string"
        },
        "strInitial": {
          "type": "string"
        },
        "strMiddleName": {
          "type": "string"
        },
        "strNationality": {
          "type": "string"
        },
        "strOccupation": {
          "type": "string"
        },
        "strOtherName": {
          "type": "string"
        },
        "strParentPartyCode": {
          "type": "string"
        },
        "strPartyCode": {
          "type": "string"
        },
        "strSex": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strSurName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateProviderRequest"
    },
    "UpdateProviderResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "partyCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateProviderResponse"
    },
    "UpdateTaskRequest": {
      "type": "object",
      "properties": {
        "entityNo": {
          "type": "string"
        },
        "explanatoryNotes": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "taskDescription": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateTaskRequest"
    },
    "UpdateTaskResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMsg": {
          "type": "string"
        }
      },
      "title": "UpdateTaskResponse"
    },
    "UpdateUserRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strEndDate": {
          "type": "string"
        },
        "strPassword": {
          "type": "string"
        },
        "strRoleCode": {
          "type": "string"
        },
        "strStartDate": {
          "type": "string"
        },
        "strUserCode": {
          "type": "string"
        },
        "strUserWeight": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UpdateUserRequest"
    },
    "UpdateUserResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UpdateUserResponse"
    },
    "UploadDocumentRequest": {
      "type": "object",
      "properties": {
        "policyNumber": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "uploadDocumentResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadDocumentResult"
          }
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UploadDocumentRequest"
    },
    "UploadDocumentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UploadDocumentResponse"
    },
    "UploadDocumentResult": {
      "type": "object",
      "properties": {
        "document": {
          "type": "string"
        },
        "documentName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      },
      "title": "UploadDocumentResult"
    },
    "UploadImageRequest": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UploadImageRequest"
    },
    "UploadImageRequest_V13": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "partyCode": {
          "type": "string"
        },
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UploadImageRequest_V13"
    },
    "UploadImageResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UploadImageResponse"
    },
    "UploadImageResponse_V13": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UploadImageResponse_V13"
    },
    "UserListRequest": {
      "type": "object",
      "properties": {
        "roleCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "stakeCode": {
          "type": "string"
        },
        "strUserCode": {
          "type": "string"
        },
        "strUserName": {
          "type": "string"
        },
        "userCode": {
          "type": "string"
        }
      },
      "title": "UserListRequest"
    },
    "UserListResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "lstUserListResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponse"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "UserListResponse"
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "userCode": {
          "type": "string"
        },
        "userFirstName": {
          "type": "string"
        },
        "userLastName": {
          "type": "string"
        },
        "userRoleCode": {
          "type": "string"
        },
        "userRoleName": {
          "type": "string"
        }
      },
      "title": "UserResponse"
    },
    "VBenefitRuleDetailsList": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "attributeGroup": {
          "type": "string"
        },
        "dataLength": {
          "type": "string"
        },
        "dataTypeIndicator": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "domain": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mandatory": {
          "type": "string"
        },
        "parameterId": {
          "type": "string"
        },
        "precision": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        },
        "strAliasName": {
          "type": "string"
        },
        "strJSFunction": {
          "type": "string"
        },
        "strParameterValue": {
          "type": "string"
        },
        "strPrecision": {
          "type": "string"
        },
        "strStorageDestination": {
          "type": "string"
        }
      },
      "title": "VBenefitRuleDetailsList"
    },
    "ValueBreakUpList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ValueBreakUpList"
    },
    "ViewAppointmentResponse": {
      "type": "object",
      "properties": {
        "appointmentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewAppointmentResult"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ViewAppointmentResponse"
    },
    "ViewAppointmentResponse_V13": {
      "type": "object",
      "properties": {
        "appointmentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewAppointmentResult"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      },
      "title": "ViewAppointmentResponse_V13"
    },
    "ViewAppointmentResult": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "appointmentId": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "dateOfAppointment": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "timeofAppointment": {
          "type": "string"
        }
      },
      "title": "ViewAppointmentResult"
    },
    "WellnessBenefitDetails": {
      "type": "object",
      "properties": {
        "amountPerVisit": {
          "type": "integer",
          "format": "int64"
        },
        "approvedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "benefit": {
          "type": "string"
        },
        "benefitStatus": {
          "type": "string"
        },
        "benefitType": {
          "type": "string"
        },
        "denialCode": {
          "type": "string"
        },
        "denialMessages": {
          "type": "string"
        },
        "numberofVisitsClaimed": {
          "type": "integer",
          "format": "int64"
        },
        "pendType": {
          "type": "string"
        },
        "treatmentEndDate": {
          "type": "string"
        },
        "treatmentStartDate": {
          "type": "string"
        },
        "unitType": {
          "type": "string"
        }
      },
      "title": "WellnessBenefitDetails"
    },
    "WellnessBenefitService": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "wellnessBenefitList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WellnessBenefitDetails"
          }
        }
      },
      "title": "WellnessBenefitService"
    },
    "WorkItemDetailsResponse": {
      "type": "object",
      "properties": {
        "assignedTeamName": {
          "type": "string"
        },
        "assignedTo": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "pendingDays": {
          "type": "string"
        },
        "pendingFrom": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "queue": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "targetDate": {
          "type": "string"
        },
        "workItemNumber": {
          "type": "string"
        }
      },
      "title": "WorkItemDetailsResponse"
    },
    "WorkItemList": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "assignedTo": {
          "type": "string"
        },
        "followUpDate": {
          "type": "string"
        },
        "processName": {
          "type": "string"
        },
        "queueName": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "taskDescription": {
          "type": "string"
        },
        "taskStatus": {
          "type": "string"
        },
        "teamName": {
          "type": "string"
        }
      },
      "title": "WorkItemList"
    },
    "WorkItemResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "workItemList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemList"
          }
        }
      },
      "title": "WorkItemResponse"
    },
    "WorkItemStatusResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "WorkItemStatusResponse"
    },
    "WorkitemDetailsList": {
      "type": "object",
      "properties": {
        "strworkitemdesc": {
          "type": "string"
        },
        "strworkitemid": {
          "type": "string"
        },
        "strworkitemprocesscd": {
          "type": "string"
        },
        "strworkitemstatus": {
          "type": "string"
        },
        "strworkitemteam": {
          "type": "string"
        }
      },
      "title": "WorkitemDetailsList"
    },
    "WorklistResult": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "diaryId": {
          "type": "string"
        },
        "longDesc": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "reminder": {
          "type": "string"
        },
        "shortDesc": {
          "type": "string"
        },
        "targetDate": {
          "type": "string"
        }
      },
      "title": "WorklistResult"
    }
  }
}
